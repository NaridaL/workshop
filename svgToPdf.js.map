{"version":3,"file":"svgToPdf.js","mappings":"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","sources":["/dev/workshop/./src/paperBox1/common.tsx?","/dev/workshop/./src/paperBox1/svg.ts?","/dev/workshop/./src/paperBox1/svgToPdf.ts?"],"sourcesContent":["import * as React from \"react\"\n\nimport { arrayRange, DEG, round10, TAU, V3 } from \"ts3dutils\"\nimport { encode, L, M, Z } from \"./svg\"\n\nexport const INCH = 25.4\nexport const fmtdeg = (x) => \"\" + round10(x / DEG, -1) + \"Â°\"\n \n\nexport const radiusFromSideWidth = (sides, sideWidth) =>\n  sideWidth / 2 / Math.sin(TAU / sides / 2)\nexport const sideWithFromRadius = (sides, radius) =>\n  radius * 2 * Math.sin(TAU / sides / 2)\nexport const centerToSideFromSideWidth = (\n  sides,\n  sideWidth,\n) => sideWidth / 2 / Math.tan(TAU / sides / 2)\nexport const radiusFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide / Math.cos(TAU / sides / 2)\nexport const sideWidthFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide * 2 * Math.tan(TAU / sides / 2)\n\nexport function RegularPolygon({\n  sides,\n  radius,\n  startAngle = 0,\n  sideLength = undefined,\n  ...props\n}\n\n\n\n\n) {\n  if ((undefined !== sideLength) === (undefined !== radius)) {\n    throw new Error(\"must set either sideLength or radius\")\n  }\n  if (undefined === radius) {\n    radius = radiusFromSideWidth(sides, sideLength)\n  }\n  return (\n    React.createElement('path', {\n      d: encode(\n        M(V3.polar(radius, startAngle)),\n        ...arrayRange(0, sides).map((i) =>\n          L(V3.polar(radius, startAngle + i * (TAU / sides))),\n        ),\n        Z(),\n      ),\n      ...props,}\n    )\n  )\n}\n\nexport function RotStep({\n  id,\n  children,\n  count,\n  stepDeg,\n}\n\n\n\n\n) {\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('g', { id: id,}, children)\n      , arrayRange(0, count - 1).map((i) => (\n        React.createElement('g', {\n          id: `${id}-${i}`,\n          key: `${id}-${i}`,\n          transform: `rotate(${(i + 1) * stepDeg} 0 0)`,}\n\n          , children\n        )\n      ))\n    )\n  )\n}\n\nexport const openInNewTab = (url) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\")\n  if (newWindow) newWindow.opener = null\n}\n","import { SVGPathData } from \"svg-pathdata\"\n\n\n\n\n\n\n\n\n\n\n\n\nexport function H(x) {\n  return { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: x }\n}\n\nexport function A(\n  rx,\n  ry,\n  xAxisRotation,\n  largeArcFlag,\n  sweepFlag,\n  p,\n) {\n  return {\n    lArcFlag: largeArcFlag,\n    rX: rx,\n    rY: ry,\n    relative: false,\n    sweepFlag: sweepFlag,\n    type: SVGPathData.ARC,\n    x: p.x,\n    xRot: 0,\n    y: p.y,\n  }\n}\n\nexport const C = (\n  x1,\n  y1,\n  x2,\n  y2,\n  x,\n  y,\n) => ({\n  type: SVGPathData.CURVE_TO,\n  x1,\n  y1,\n  x2,\n  y2,\n  x,\n  y,\n  relative: false,\n})\n\nexport const V = (y) => ({\n  type: SVGPathData.VERT_LINE_TO,\n  y,\n  relative: false,\n})\n\nexport const S = (x2, y2, x, y) => ({\n  type: SVGPathData.SMOOTH_CURVE_TO,\n  x2,\n  y2,\n  x,\n  y,\n  relative: false,\n})\n\n\n\nexport function M(a1, a2) {\n  const [x, y] = a2 === undefined ? [(a1 ).x, (a1 ).y] : [a1, a2]\n  return { type: SVGPathData.MOVE_TO, x, y, relative: false }\n}\n\nexport const m = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: true,\n})\n\n\nexport function L(a1, a2) {\n  const [x, y] = a2 === undefined ? [(a1 ).x, (a1 ).y] : [a1, a2]\n  return { type: SVGPathData.LINE_TO, x, y, relative: false }\n}\nexport const l = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: true,\n})\n\nexport const Z = () => ({ type: SVGPathData.CLOSE_PATH })\n\nexport const encode = (...path) => {\n  return new SVGPathData(path).round(3).encode()\n}\n","import blobStream from \"blob-stream\"\nimport PDFDocument from \"pdfkit\"\nimport SVGtoPDF from \"svg-to-pdfkit\"\nimport { round10 } from \"ts3dutils\"\nimport { INCH } from \"./common\"\n\nexport function svgToPdf({\n  title,\n  author,\n  svg,\n}\n\n\n\n) {\n  return new Promise((resolve, reject) => {\n    const [, widthStr, heightStr] =\n      /<svg[^>]*?width=\"([^\"]+)mm\".*?height=\"([^\"]+)mm\"/.exec(svg)\n    const [width, height] = [widthStr, heightStr].map((x) =>\n      // We want it to be at 72 DPI.\n      round10((+x * 72) / INCH, -2),\n    )\n\n    const doc = new PDFDocument({\n      size: width < height ? [width, height] : [height, width],\n      margins: {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n      },\n      layout: width <= height ? \"portrait\" : \"landscape\",\n      info: {\n        Title: title,\n        Author: author,\n      },\n    })\n\n    // pipe the document to a blob\n    const stream = doc.pipe(blobStream())\n\n    // add your content to the document here, as usual\n    SVGtoPDF(doc, svg, 0, 0, { assumePt: false })\n\n    // get a blob when you're done\n    doc.end()\n    stream.on(\"finish\", function () {\n      resolve(stream.toBlob(\"application/pdf\"))\n    })\n    stream.on(\"error\", reject)\n  })\n}\n"],"names":["INCH","fmtdeg","x","radiusFromSideWidth","sides","sideWidth","Math","sin","sideWithFromRadius","radius","centerToSideFromSideWidth","tan","radiusFromCenterToSide","centerToSide","cos","sideWidthFromCenterToSide","RegularPolygon","startAngle","sideLength","props","undefined","Error","d","M","V3","polar","map","i","L","Z","RotStep","id","children","count","stepDeg","key","transform","openInNewTab","url","newWindow","window","open","opener","H","type","HORIZ_LINE_TO","relative","A","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","p","lArcFlag","rX","rY","ARC","xRot","y","V","VERT_LINE_TO","a1","a2","MOVE_TO","LINE_TO","l","CLOSE_PATH","encode","path","round","svgToPdf","title","author","svg","Promise","resolve","reject","widthStr","heightStr","exec","width","height","doc","size","margins","top","bottom","left","right","layout","info","Title","Author","stream","pipe","assumePt","end","on","toBlob"],"sourceRoot":""}