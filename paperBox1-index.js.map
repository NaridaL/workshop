{"version":3,"file":"paperBox1-index.js","mappings":"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","sources":["/dev/workshop/./src/common/useHashState.ts?","/dev/workshop/./src/paperBox1/ExportButtons.tsx?","/dev/workshop/./src/paperBox1/Measure.tsx?","/dev/workshop/./src/paperBox1/MeasureAngle.tsx?","/dev/workshop/./src/paperBox1/PaperAutocomplete.tsx?","/dev/workshop/./src/paperBox1/PaperSize.tsx?","/dev/workshop/./src/paperBox1/SvgCommonDefs.tsx?","/dev/workshop/./src/paperBox1/common.tsx?","/dev/workshop/./src/paperBox1/PrismBoxSvg.tsx?","/dev/workshop/./src/paperBox1/index.tsx?","/dev/workshop/./src/paperBox1/svg.ts?"],"sourcesContent":[" function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import debounce from \"lodash/debounce\"\nimport mapValues from \"lodash/mapValues\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport {\n  PAPER_SIZE_A4,\n\n  PaperSizeFromString,\n  PaperSizeToString,\n} from \"../paperBox1/PaperSize\"\n\nconst parseHash = (hash) => {\n  return !hash\n    ? {}\n    : hash\n        .substring(1)\n        .split(\"&\")\n        .map((part) => {\n          const [key, value] = part.split(\"=\")\n          return [decodeURIComponent(key), decodeURIComponent(value)]\n        })\n        .reduce((obj, [key, value]) => {\n          obj[key] = value\n          return obj\n        }, {} )\n}\nconst objectToHash = (o) => {\n  return (\n    \"#\" +\n    Object.entries(o)\n      .map(\n        ([key, value]) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(value),\n      )\n      .join(\"&\")\n  )\n}\n\nconst defaultDeserialize = (\n  x,\n) =>\n  mapValues(x, (v, key) => {\n    if (\"paperSize\" === key) {\n      try {\n        return PaperSizeFromString(v)\n      } catch (e) {\n        console.error(e)\n        return PAPER_SIZE_A4\n      }\n    } else if (\"true\" === v) {\n      return true\n    } else if (\"false\" === v) {\n      return false\n    } else if (\"NaN\" === v) {\n      return NaN\n    } else if (\"undefined\" === v) {\n      return undefined\n    } else if (\"null\" === v) {\n      return null\n    } else if (\"\" === v) {\n      return \"\"\n    } else if (!isNaN(+v)) {\n      return +v\n    } else {\n      return v\n    }\n  })\nconst defaultSerialize = (x) =>\n  mapValues(x, (v, key) =>\n    key === \"paperSize\" ? PaperSizeToString(v ) : \"\" + v,\n  )\n\nexport function useHashState(\n  initialState,\n  {\n    deserialize = defaultDeserialize,\n    serialize = defaultSerialize,\n    wait = 1000,\n  } = {},\n) {\n  const createInitialState = useCallback(() => {\n    const state =\n      \"function\" === typeof initialState\n        ? (initialState )()\n        : initialState\n    // hash overrides parameter\n    const mergedState = deserialize(\n      Object.assign(serialize(state), parseHash(document.location.hash)),\n    ) \n    console.log(\"replaceState\")\n    history.replaceState(\n      undefined,\n      document.title,\n      objectToHash(serialize(mergedState)),\n    )\n\n    return mergedState\n  }, [deserialize, initialState, serialize])\n  const [state, setState] = useState(createInitialState)\n  const updateHashRef = useRef()\n  useEffect(() => _optionalChain([updateHashRef, 'access', _ => _.current, 'optionalCall', _2 => _2(state)]), [state])\n  if (!updateHashRef.current) {\n    console.log(\"pushState\")\n    updateHashRef.current = debounce(function (newState) {\n      history.pushState(\n        undefined,\n        document.title,\n        objectToHash(serialize(newState)),\n      )\n    }, wait)\n  }\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setState(createInitialState())\n    }\n    window.addEventListener(\"hashchange\", onHashChange)\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange)\n    }\n  }, [createInitialState])\n  return [state, setState]\n}\n","import Button from \"@mui/material/Button\"\nimport fileDownload from \"js-file-download\"\n\nimport * as React from \"react\"\nimport ReactDOMServer from \"react-dom/server\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function ExportButtons({\n  what,\n  baseFileName,\n}\n\n\n) {\n  const getPrintSVG = () =>\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(SvgPrintContext.Provider, { value: true,}, what),\n    ).replace(/\\s{2,}/g, \" \")\n  const asSVG = () => {\n    const svg = getPrintSVG()\n    fileDownload(svg, baseFileName + \".svg\")\n  }\n  const asTemplatePDF = async () => {\n    const { svgToPdf } = await import(\n      /* webpackChunkName: \"svgToPdf\" */ \"../paperBox1/svgToPdf\"\n    )\n\n    // add your content to the document here, as usual\n    const blob = await svgToPdf({\n      title: baseFileName,\n      author: \"Adrian Leonhard\",\n      svg: getPrintSVG(),\n    })\n\n    fileDownload(blob, baseFileName + \".pdf\")\n  }\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement(Button, { variant: \"contained\", onClick: asSVG,}, \"Download As SVG\"\n\n      )\n      , React.createElement(Button, { variant: \"contained\", onClick: asTemplatePDF,}, \"Template as PDF\"\n\n      )\n    )\n  )\n}\n","import * as React from \"react\"\nimport { createContext, useContext } from \"react\"\nimport { DEG, round10, V, } from \"ts3dutils\"\n\n\nexport const SvgPrintContext = createContext(false)\n\nexport function Guide({\n  children,\n  ...props\n}) {\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  return (\n    React.createElement('g', { className: \"guide\", ...props,}\n      , children\n    )\n  )\n}\nexport function Measure({\n  from,\n  to,\n  children,\n  hideRight = false,\n  offset = 0,\n}\n\n\n\n\n\n) {\n  Array.isArray(from) && (from = V(from))\n  Array.isArray(to) && (to = V(to))\n  const d = from.to(to)\n  const length = d.length()\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  if (length < 0.05) return null\n  children ||= \"\" + round10(length, -1)\n  const textBlank = 3 * children.length\n\n  return (\n    React.createElement('g', {\n      transform: ` translate(${from[0]}, ${from[1]}) rotate(${\n        d.angleXY() / DEG\n      }) translate(0, ${offset * 10})`,\n      className: \"measure\",}\n\n      , !hideRight && (\n        React.createElement('path', {\n          style: { fill: \"none\" },\n          d: `M0,0\n          l0,10\n          M4,3\n          l-4,2\n          l4,2`,}\n        )\n      )\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `\n        M0,5\n        H${(length - textBlank) / 2}\n        M${(length + textBlank) / 2},5\n        H${length}\n        M${length},0\n        l0,10\n        m-4,-7\n        l4,2\n        l-4,2`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: length / 2,\n        y: 5,}\n\n        , children\n      )\n    )\n  )\n}\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { V, V3 } from \"ts3dutils\"\nimport { fmtdeg, } from \"./common\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function MeasureAngle({\n  center,\n  start,\n  toRel,\n  children,\n}\n\n\n\n\n) {\n  Array.isArray(center) && (center = V(center))\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  const radius = 20\n  const startV = V3.polar(radius, start).plus(V(center))\n  const endV = V3.polar(radius, start + toRel).plus(V(center))\n  const textPos = V3.polar(0.7 * radius, start + toRel / 2).plus(V(center))\n  const largeArcFlag = Math.abs(toRel) > Math.PI ? \"1\" : \"0\"\n  const sweepFlag = toRel > 0 ? \"1\" : \"0\"\n  return (\n    React.createElement('g', { className: \"measure\",}\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `M${startV.x},${startV.y} A${radius},${radius},0,${largeArcFlag},${sweepFlag},${endV.x},${endV.y}`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: textPos.x,\n        y: textPos.y,}\n\n        , _nullishCoalesce(children, () => ( fmtdeg(toRel)))\n      )\n    )\n  )\n}\n","import Autocomplete from \"@mui/material/Autocomplete\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { forwardRef, } from \"react\"\nimport { PAPER_SIZES, PaperSizeFromDimensions } from \"./PaperSize\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaperAutocomplete = forwardRef(\n  (\n    {\n      disableClearance = false,\n      onChange,\n      value,\n      label,\n    },\n    ref,\n  ) => {\n    let paperSize = null\n    if (value) {\n      const [a, b] = value\n      paperSize = PaperSizeFromDimensions(a, b)\n    }\n    return (\n      React.createElement(Autocomplete, {\n        ref: ref,\n        disableClearable: disableClearance,\n        size: \"small\",\n        freeSolo: true,\n        renderInput: (params) => (\n          React.createElement(TextField, { ...params, label: label, variant: \"outlined\",} )\n        ),\n        value: paperSize,\n        onChange: (e, newValue) => {\n          if (\"string\" === typeof newValue) {\n            if (newValue.trim() === \"\") {\n              if (!disableClearance) {\n                onChange(null)\n              }\n            } else {\n              const match = /(\\d+(?:\\.\\d+)?)\\D*?(\\d+(?:\\.\\d+)?)?\\D*$/.exec(\n                newValue,\n              )\n              if (match) {\n                const [, widthStr, heightStr] = match\n                onChange(\n                  PaperSizeFromDimensions(+widthStr, +(heightStr || widthStr)),\n                )\n              }\n            }\n          } else {\n            onChange(newValue)\n          }\n        },\n        getOptionLabel: (val) => {\n          const [width, height, name = \"custom\"] = val\n          return `${name} ${width}x${height}mm`\n        },\n        options: PAPER_SIZES,}\n      )\n    )\n  },\n) \n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import { MINUS } from \"ts3dutils\"\n\n \n// Always portrait orientation,\n\n// Always portrait orientation,\nexport const PAPER_SIZES_A = [\n  [841, 1189, \"A0\"],\n  [594, 841, \"A1\"],\n  [420, 594, \"A2\"],\n  [297, 420, \"A3\"],\n  [210, 297, \"A4\"],\n  [148, 210, \"A5\"],\n  [105, 148, \"A6\"],\n  [74, 105, \"A7\"],\n  [52, 74, \"A8\"],\n  [37, 52, \"A9\"],\n  [26, 37, \"A10\"],\n]\n\nexport function PaperSizeEquals([aw, ah], [bw, bh]) {\n  return aw === bw && bh === bw\n}\n\nexport const PAPER_SIZES_B = [\n  [1000, 1414, \"C0\"],\n  [707, 1000, \"C1\"],\n  [500, 707, \"C2\"],\n  [353, 500, \"C3\"],\n  [250, 353, \"C4\"],\n  [176, 250, \"C5\"],\n  [125, 176, \"C6\"],\n  [88, 125, \"C7\"],\n  [62, 88, \"C8\"],\n  [44, 62, \"C9\"],\n  [31, 44, \"C10\"],\n]\n\n// C size envelopes fit A size paper.\nexport const PAPER_SIZES_C = [\n  [917, 1297, \"C0\"],\n  [648, 917, \"C1\"],\n  [458, 648, \"C2\"],\n  [324, 458, \"C3\"],\n  [229, 324, \"C4\"],\n  [162, 229, \"C5\"],\n  [114, 162, \"C6\"],\n  [81, 114, \"C7\"],\n  [57, 81, \"C8\"],\n  [40, 57, \"C9\"],\n  [28, 40, \"C10\"],\n]\nexport const PAPER_SIZES = [\n  ...PAPER_SIZES_A,\n  [150, 150, \"Origami 15cm\"],\n  [100, 100, \"Origami 10cm\"],\n  [75, 75, \"Origami 7.5cm\"],\n  [215.9, 279.4, \"Letter\"],\n  [215.9, 355.6, \"Legal\"],\n]\n\nexport const ALL_PAPER_SIZES = [\n  ...PAPER_SIZES,\n  ...PAPER_SIZES_C,\n  ...PAPER_SIZES_B,\n]\n\nexport function PaperSizeFromString(str) {\n  const byName = PAPER_SIZES.find(([, , name]) => name === str)\n  if (byName) return byName\n  const [a, b] = str.split(\"x\")\n  return [+a, +b, \"Custom\"]\n}\nexport function PaperSizeFromDimensions(a, b) {\n  ;[a, b] = [a, b].sort(MINUS)\n  return _nullishCoalesce(PAPER_SIZES.find(([x, y]) => x === a && y === b), () => ( [a, b, \"Custom\"]))\n}\nexport function PaperSizeToString([a, b, name]) {\n  return name === \"Custom\" ? \"\" + a + \"x\" + b : name\n}\n\nexport const PAPER_SIZE_A4 = PAPER_SIZES_A[4]\n","\nimport { blue, green, orange, pink, red } from \"@mui/material/colors\"\nimport { useTheme } from \"@mui/material/styles\"\nimport * as React from \"react\"\nimport { useContext, useMemo } from \"react\"\nimport { SvgPrintContext } from \"./Measure\"\n\n\nexport const SvgCommonDefs = () => {\n  const theme = useTheme()\n  const print = useContext(SvgPrintContext)\n  const screenStyles = useMemo(\n    () => `\n.adrian * { stroke: ${theme.palette.text.primary}; }\n.adrian .red-stroke { stroke: ${red[500]}; }\n.adrian .orange-stroke { stroke: ${orange[500]}; }\n.adrian .blue-stroke { stroke: ${blue[500]}; }\n.adrian .green-stroke { stroke: ${green[500]}; }\n.adrian .pink-stroke { stroke: ${pink[500]}; }\n.adrian .measure, *.measure * {\n  stroke: ${theme.palette.primary.main};\n  fill: ${theme.palette.primary.main};\n}\n.adrian .guide, .adrian .guide * {\n  stroke: ${theme.palette.secondary.main};\n  fill: ${theme.palette.secondary.main};\n}\n.adrian .glue, .adrian .guide .glue {\n  stroke: none;\n  fill: url(#glue);\n}\n`,\n    [theme],\n  )\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('defs', null\n        , React.createElement('pattern', { id: \"glue\", patternUnits: \"userSpaceOnUse\", width: \"4\", height: \"4\",}\n          , React.createElement('path', {\n            d: \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\"\n\n                ,\n            style: { stroke: theme.palette.divider, strokeWidth: 1 },}\n          )\n        )\n      )\n      , React.createElement('style', null, `\n      .mountain, .mountain * { stroke-dasharray: 10,2,1,1,1,2; }\n      .valley, .valley * { stroke-dasharray: 1,1; }\n      .cut, .cut * { stroke: 1; }\n      `)\n      , !print && React.createElement('style', null, screenStyles)\n    )\n  )\n}\n","import * as React from \"react\"\n\nimport { arrayRange, DEG, round10, TAU, V3 } from \"ts3dutils\"\n\nexport const INCH = 25.4\nexport const fmtdeg = (x) => \"\" + round10(x / DEG, -1) + \"°\"\n \n\nexport const radiusFromSideWidth = (sides, sideWidth) =>\n  sideWidth / 2 / Math.sin(TAU / sides / 2)\nexport const sideWithFromRadius = (sides, radius) =>\n  radius * 2 * Math.sin(TAU / sides / 2)\nexport const centerToSideFromSideWidth = (\n  sides,\n  sideWidth,\n) => sideWidth / 2 / Math.tan(TAU / sides / 2)\nexport const radiusFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide / Math.cos(TAU / sides / 2)\nexport const sideWidthFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide * 2 * Math.tan(TAU / sides / 2)\n\nexport function RegularPolygon({\n  sides,\n  radius,\n  startAngle = 0,\n  sideLength = undefined,\n  ...props\n}\n\n\n\n\n) {\n  if ((undefined !== sideLength) === (undefined !== radius)) {\n    throw new Error(\"must set either sideLength or radius\")\n  }\n  if (undefined === radius) {\n    radius = radiusFromSideWidth(sides, sideLength)\n  }\n  const { x, y } = V3.polar(radius, startAngle)\n  return (\n    React.createElement('path', {\n      d: dTpl`\n        M${x},${y}\n        ${arrayRange(0, sides).map(\n          (i) => dTpl`L${V3.polar(radius, startAngle + i * (TAU / sides))}`,\n        )}Z`,\n      ...props,}\n    )\n  )\n}\n\nexport function RotStep({\n  id,\n  children,\n  count,\n  stepDeg,\n}\n\n\n\n\n) {\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('g', { id: id,}, children)\n      , arrayRange(0, count - 1).map((i) => (\n        React.createElement('g', {\n          id: `${id}-${i}`,\n          key: `${id}-${i}`,\n          transform: `rotate(${(i + 1) * stepDeg} 0 0)`,}\n\n          , children\n        )\n      ))\n    )\n  )\n}\n\nexport function dTpl(\n  strings,\n  ...exps\n) {\n  const format = (x) =>\n    \"number\" === typeof x\n      ? \"\" + x\n      : \"string\" === typeof x\n      ? x\n      : Array.isArray(x)\n      ? x.map(format).join(\" \")\n      : x.x + \",\" + x.y\n  let result = strings[0]\n  for (let i = 0; i < exps.length; i++) {\n    result += format(exps[i])\n    result += strings[i + 1]\n  }\n  return result\n}\n\nexport const openInNewTab = (url) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\")\n  if (newWindow) newWindow.opener = null\n}\n","import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { encodeSVGPath, SVGPathData } from \"svg-pathdata\"\nimport { arrayRange, DEG, round10, TAU, V, V3 } from \"ts3dutils\"\n\nimport {\n  centerToSideFromSideWidth,\n  fmtdeg,\n  INCH,\n  radiusFromSideWidth,\n} from \"./common\"\nimport { Guide, Measure, SvgPrintContext } from \"./Measure\"\nimport { MeasureAngle } from \"./MeasureAngle\"\nimport * as path from \"./svg\"\nimport { SvgCommonDefs } from \"./SvgCommonDefs\"\n\nexport function PrismBoxSvg({\n  height,\n  width,\n  topLip = 100,\n  bottomLip,\n  theta: thetaDeg,\n  sideWidth,\n  sides,\n  style,\n}\n\n\n\n\n\n\n\n\n) {\n  const shapeAngle = TAU / sides\n  const creaseAngle = shapeAngle / 2\n  const maxBottomLip = sideWidth / Math.tan(creaseAngle)\n  //const bottomLip = maxBottomLip\n  const rightTabWidth = width - sides * sideWidth\n\n  const intersect = Math.tan(creaseAngle) * bottomLip\n\n  const theta = thetaDeg * DEG\n\n  const boxHeight = height - bottomLip - topLip\n  const radius = radiusFromSideWidth(sides, sideWidth)\n  const centerToSide = centerToSideFromSideWidth(sides, sideWidth)\n  const boxWidth = centerToSide + (sides % 2 === 0 ? centerToSide : radius)\n\n  const print = useContext(SvgPrintContext)\n\n  const valley = encodeSVGPath([\n    // bottom lip horizontal\n    {\n      type: SVGPathData.MOVE_TO,\n      relative: false,\n      x: 0,\n      y: height - bottomLip,\n    },\n    { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: width },\n    ...arrayRange(0, sides + 1).flatMap((i) => [\n      // verts in between top and bottom lip\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: i * sideWidth,\n        y: topLip,\n      },\n      {\n        type: SVGPathData.VERT_LINE_TO,\n        relative: false,\n        y: height - bottomLip,\n      },\n      // diagonal segments at the bottom\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: i * sideWidth,\n        y: height - bottomLip,\n      },\n      {\n        type: SVGPathData.LINE_TO,\n        relative: false,\n        x: i * sideWidth + Math.tan(creaseAngle + theta) * bottomLip,\n        y: height,\n      },\n    ]),\n    // top lip\n    {\n      type: SVGPathData.MOVE_TO,\n      relative: false,\n      x: 0,\n      y: topLip,\n    },\n    { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: width },\n  ])\n  const mountain = encodeSVGPath([\n    // verts in bottom lip\n    ...arrayRange(0, sides + 1).flatMap((i) => [\n      path.M(i * sideWidth, height - bottomLip),\n      path.l(Math.sin(theta) * bottomLip, bottomLip),\n    ]),\n    // verts in top lip\n    ...arrayRange(0, sides).flatMap((i) => [\n      path.M((i + 1) * sideWidth, 0),\n      path.V(topLip),\n    ]),\n  ])\n  const boxTop = -boxHeight - 10 - radius\n  const svgViewBox = print\n    ? [0, 0, width, height]\n    : [-10, -10, width + 20, height + 30]\n\n  const firstIntersect = bottomLip * Math.tan(theta)\n  return (\n    React.createElement('svg', {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      style: {\n        fill: \"none\",\n        stroke: \"#123456\",\n        strokeWidth: (2 * INCH) / 300,\n        ...style,\n      },\n      width: svgViewBox[2] + \"mm\",\n      height: svgViewBox[3] + \"mm\",\n      viewBox: svgViewBox.join(\" \"),\n      className: \"adrian\",}\n\n      , React.createElement(SvgCommonDefs, null )\n      , React.createElement('defs', null\n        , React.createElement('clipPath', { id: \"page\",}\n          , React.createElement('rect', { width: width, height: height,} )\n        )\n      )\n\n      , React.createElement('g', { clipPath: \"url(#page)\",}\n        , !print && (\n          React.createElement('rect', { width: rightTabWidth, height: height, className: \"glue\",} )\n        )\n        , React.createElement('rect', { width: width, height: height,} )\n        , React.createElement('path', { d: valley, style: { strokeDasharray: \"1,1\" },} )\n        , React.createElement('path', { d: mountain, style: { strokeDasharray: \"10,2,1,1,1,2\" },} )\n        , arrayRange(0, sides).map((i) => {\n          const pos = V(i * sideWidth, height - bottomLip).plus(\n            V3.polar(radius, 90 * DEG - creaseAngle - theta),\n          )\n\n          return React.createElement('circle', { key: i, cx: pos.x, cy: pos.y, r: 0.5, stroke: \"black\",} )\n        })\n      )\n      , React.createElement(Measure, { from: [0, 0], to: [0, topLip],}, \"topLip\"\n\n      )\n      , React.createElement(Measure, { from: [0, topLip], to: [0, height - bottomLip],}\n        , \"\" + round10(height - topLip - bottomLip, -1)\n      )\n      , React.createElement(Measure, { from: [0, height - bottomLip], to: [0, height],}, \"bottomLip\"\n\n      )\n      , React.createElement(Measure, { from: [0, 0], to: [sideWidth, 0],}, \"sideWidth\"\n\n      )\n      , arrayRange(1, sides).map((i) => (\n        React.createElement(Measure, {\n          key: i,\n          from: [i * sideWidth, 0],\n          to: [(i + 1) * sideWidth, 0],\n          hideRight: true,}\n\n          , \"\" + round10(sideWidth * (i + 1), -1)\n        )\n      ))\n\n      , React.createElement(Measure, { from: [0, height], to: [firstIntersect, height],}\n        , \"\" + round10(firstIntersect, -2)\n      )\n      , arrayRange(0, sides).map((i) => (\n        React.createElement(Measure, {\n          key: i,\n          from: [firstIntersect + i * sideWidth, height],\n          to: [firstIntersect + (i + 1) * sideWidth, height],\n          hideRight: true,}\n\n          , \"\" + round10(firstIntersect + sideWidth * (i + 1), -1)\n        )\n      ))\n\n      , React.createElement(Measure, { from: [sides * sideWidth, 0], to: [width, 0],}\n        , \"\" + round10(rightTabWidth, -1)\n      )\n      , React.createElement(Measure, {\n        from: [sideWidth, height],\n        to: [sideWidth + intersect, height],\n        offset: 1,}\n\n        , \"\" + round10(intersect, -1)\n      )\n      , intersect < sideWidth && (\n        React.createElement(Measure, {\n          from: [sideWidth + intersect, height],\n          to: [sideWidth + sideWidth, height],\n          offset: 1,}\n\n          , \"\" + round10(sideWidth - intersect, -1)\n        )\n      )\n      , React.createElement(MeasureAngle, {\n        center: [sideWidth * 2, height - bottomLip],\n        start: 90 * DEG,\n        toRel: -creaseAngle,}\n\n        , fmtdeg(creaseAngle)\n      )\n      , React.createElement(Guide, { transform: `translate(200, ${boxHeight * 2})`,}\n        , React.createElement('rect', {\n          transform: \"translate(0, -0)\" ,\n          x: -centerToSide,\n          y: -boxHeight - 10 - radius,\n          width: boxWidth,\n          height: boxHeight,\n          style: { fill: \"none\" },}\n        )\n        /* verts */\n        , React.createElement('path', {\n          d: `${arrayRange(2, sides / 2)\n            .map((i) => {\n              const p = V3.polar(\n                radius,\n                (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n              )\n              return \"M\" + p.x + \",\" + boxTop + \" v\" + boxHeight\n            })\n            .join(\" \")} `,}\n        )\n        , React.createElement(Measure, {\n          from: [-centerToSide, boxTop],\n          to: [-centerToSide, boxTop + boxHeight],}\n\n          , \"\" + round10(boxHeight, -1)\n        )\n        , React.createElement(Measure, {\n          from: [-centerToSide, boxTop + boxHeight],\n          to: [-centerToSide + boxWidth, boxTop + boxHeight],}\n\n          , \"\" + round10(boxWidth, -1)\n        )\n        /* polygon base */\n        , React.createElement('path', {\n          d: `${arrayRange(0, sides)\n            .map((i) => {\n              const p = V3.polar(\n                radius,\n                (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n              )\n              return (0 === i ? \"M\" : \"L\") + p.x + \",\" + p.y\n            })\n            .join(\" \")} Z`,\n          style: { fill: \"none\" },}\n        )\n        , React.createElement('path', {\n          d: encodeSVGPath([\n            ...arrayRange(0, sides).flatMap((i) => {\n              const p = V3.polar(\n                radius,\n                (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n              )\n              const r = V3.polar(\n                bottomLip / Math.cos(creaseAngle + theta),\n                (TAU / sides) * i + -TAU / sides / 2 + theta,\n              )\n              return [path.M(p.x, p.y), path.l(r.x, r.y)]\n            }),\n          ]),}\n        )\n      )\n    )\n  )\n}\n","import Lock from \"@mui/icons-material/Lock\"\nimport LockOpen from \"@mui/icons-material/LockOpen\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport Checkbox from \"@mui/material/Checkbox\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Grid from \"@mui/material/Grid\"\nimport IconButton from \"@mui/material/IconButton\"\nimport InputAdornment from \"@mui/material/InputAdornment\"\nimport Link from \"@mui/material/Link\"\nimport { useTheme } from \"@mui/material/styles\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { useCallback, useState } from \"react\"\nimport { round10, TAU } from \"ts3dutils\"\n\nimport { useHashState } from \"../common/useHashState\"\nimport { ExportButtons } from \"./ExportButtons\"\nimport hexPrismBoxJpg from \"./hexPrismBox.jpg\"\nimport { PaperAutocomplete } from \"./PaperAutocomplete\"\nimport { PAPER_SIZE_A4, PaperSizeFromDimensions } from \"./PaperSize\"\nimport { PrismBoxSvg } from \"./PrismBoxSvg\"\n\nexport default () => {\n  const [state, setStateUnchecked] = useHashState({\n    width: PAPER_SIZE_A4[1],\n    height: PAPER_SIZE_A4[0],\n    sides: 6,\n    sideWidth: 45,\n    topLip: 30,\n    bottomLip: 30,\n    theta: 5,\n  })\n  const landscape = state.width > state.height\n  const [width, height] = [state.width, state.height]\n\n  // lockTopLip\n  const topLipMax = Math.floor((height - state.bottomLip - 1) / 2)\n  const [lockTopLip, setLockTopLip] = useState(true)\n\n  // lockBottomLip\n  const shapeAngle = TAU / state.sides\n  const creaseAngle = shapeAngle / 2\n  const bottomLipLockPos = round10(state.sideWidth / Math.tan(creaseAngle), -1)\n  const [lockBottomLip, setLockBottomLip] = useState(false)\n\n  const updateState = useCallback(\n    (partialState) => {\n      setStateUnchecked((s) => {\n        const newState = { ...s, ...partialState }\n        if (lockTopLip && topLipMax !== state.topLip) {\n          newState.topLip = topLipMax\n        }\n        if (lockBottomLip && bottomLipLockPos !== state.bottomLip) {\n          newState.bottomLip = bottomLipLockPos\n        }\n        return newState\n      })\n    },\n    [\n      setStateUnchecked,\n      lockTopLip,\n      topLipMax,\n      state.topLip,\n      state.bottomLip,\n      lockBottomLip,\n      bottomLipLockPos,\n    ],\n  )\n\n  const theme = useTheme()\n\n  return (\n    React.createElement(Grid, { container: true, style: { width: \"100%\" },}\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 10,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          maxHeight: \"100vh\",\n          padding: theme.spacing(2),\n        },}\n\n        , React.createElement(PrismBoxSvg, {\n          ...state,\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            height: \"auto\",\n            margin: \"auto\",\n          },}\n        )\n      )\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          padding: 2,\n          alignItems: \"stretch\",\n          // \"& > *\": { margin: 1 },\n          gap: 2,\n        },}\n\n        , React.createElement(Card, null\n          , React.createElement(CardMedia, {\n            image: hexPrismBoxJpg,\n            title: \"Hexagonal Prism Box\"  ,\n            sx: {\n              height: 0,\n              paddingTop: \"100%\", // 1:1\n            },}\n          )\n          , React.createElement(CardContent, null, \"Helper to build\"\n              , \" \"\n            , React.createElement(Link, { href: \"https://www.paperkawaii.com/video-tutorial-origami-hexagonal-gift-box/\",}, \"this box\"\n\n            ), \". All measurements are in millimeters. To make a lid, you should increase the sideWidth by 1mm and ~halve the paper height.\"\n\n\n          )\n        )\n        , React.createElement(PaperAutocomplete, {\n          label: \"Paper Size\" ,\n          value: PaperSizeFromDimensions(width, height),\n          onChange: (newPaperSize) => {\n            const [minWidth, maxHeight] = newPaperSize\n            updateState(\n              landscape\n                ? { width: maxHeight, height: minWidth }\n                : { width: minWidth, height: maxHeight },\n            )\n          },}\n        )\n        , React.createElement(FormControlLabel, {\n          control: \n            React.createElement(Checkbox, {\n              checked: landscape,\n              onChange: () => {\n                // noinspection JSSuspiciousNameCombination\n                updateState({\n                  width: height,\n                  height: width,\n                })\n              },\n              color: \"primary\",}\n            )\n          ,\n          label: \"Landscape\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 3, max: 16 },\n          value: state.sides,\n          onChange: (e) => updateState({ sides: +e.target.value }),\n          label: \"Sides\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 1 },\n          value: state.sideWidth,\n          onChange: (e) => updateState({ sideWidth: +e.target.value }),\n          InputProps: {\n            endAdornment: React.createElement(InputAdornment, { position: \"end\",}, \"mm\"),\n          },\n          label: \"sideWidth\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 0 },\n          value: state.theta,\n          onChange: (e) => updateState({ theta: +e.target.value }),\n          InputProps: {\n            endAdornment: React.createElement(InputAdornment, { position: \"end\",}, \"mm\"),\n          },\n          label: \"theta\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          disabled: lockTopLip,\n          size: \"small\",\n          type: \"number\",\n          inputProps: {\n            step: 1,\n            min: 0,\n            max: topLipMax,\n          },\n          value: state.topLip,\n          onChange: (e) => updateState({ topLip: +e.target.value }),\n          InputProps: {\n            endAdornment: (\n              React.createElement(React.Fragment, null\n                , React.createElement(InputAdornment, { position: \"end\",}, \"mm\")\n                , React.createElement(IconButton, {\n                  onClick: () => {\n                    setLockTopLip(!lockTopLip)\n                    updateState({})\n                  },\n                  size: \"large\",}\n\n                  , lockTopLip ? React.createElement(Lock, { color: \"primary\",} ) : React.createElement(LockOpen, null )\n                )\n              )\n            ),\n          },\n          label: \"topLip\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          disabled: lockBottomLip,\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 0 },\n          value: state.bottomLip,\n          onChange: (e) => updateState({ bottomLip: +e.target.value }),\n          InputProps: {\n            endAdornment: (\n              React.createElement(React.Fragment, null\n                , React.createElement(InputAdornment, { position: \"end\",}, \"mm\")\n                , React.createElement(IconButton, {\n                  onClick: () => {\n                    setLockBottomLip(!lockBottomLip)\n                    updateState({})\n                  },\n                  size: \"large\",}\n\n                  , lockBottomLip ? React.createElement(Lock, { color: \"primary\",} ) : React.createElement(LockOpen, null )\n                )\n              )\n            ),\n          },\n          label: \"bottomLip\",}\n        )\n        , React.createElement(ExportButtons, {\n          what: React.createElement(PrismBoxSvg, { ...state,} ),\n          baseFileName: \n            `${width}x${height}-${state.sides}x${state.sideWidth}` +\n            `-${state.topLip}-${state.bottomLip}`\n          ,}\n        )\n      )\n    )\n  )\n}\n","import { SVGPathData } from \"svg-pathdata\"\n\n\nexport const V = (y) => ({\n  type: SVGPathData.VERT_LINE_TO,\n  y,\n  relative: false,\n})\n\nexport const S = (x2, y2, x, y) => ({\n  type: SVGPathData.SMOOTH_CURVE_TO,\n  x2,\n  y2,\n  x,\n  y,\n  relative: false,\n})\n\nexport const M = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const m = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: true,\n})\nexport const L = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const l = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: true,\n})\n\nexport const Z = () => ({ type: SVGPathData.CLOSE_PATH })\n"],"names":["parseHash","hash","substring","split","map","part","key","value","decodeURIComponent","reduce","obj","objectToHash","o","Object","entries","encodeURIComponent","join","defaultDeserialize","x","v","NaN","isNaN","e","console","error","defaultSerialize","useHashState","initialState","deserialize","serialize","wait","createInitialState","useCallback","state","mergedState","assign","document","location","log","history","replaceState","undefined","title","setState","useState","updateHashRef","useRef","useEffect","ops","lastAccessLHS","i","length","op","fn","args","call","_optionalChain","_","current","_2","newState","pushState","onHashChange","window","addEventListener","removeEventListener","ExportButtons","what","baseFileName","getPrintSVG","Provider","replace","variant","onClick","svg","async","svgToPdf","blob","author","SvgPrintContext","createContext","Guide","children","props","useContext","className","Measure","from","to","hideRight","offset","Array","isArray","V","d","textBlank","transform","angleXY","style","fill","stroke","fontSize","dominantBaseline","textAnchor","y","MeasureAngle","center","start","toRel","startV","V3","polar","plus","endV","textPos","largeArcFlag","Math","abs","PI","sweepFlag","lhs","rhsFn","PaperAutocomplete","forwardRef","disableClearance","onChange","label","ref","paperSize","a","b","disableClearable","size","freeSolo","renderInput","params","newValue","trim","match","exec","widthStr","heightStr","getOptionLabel","val","width","height","name","options","PAPER_SIZES_A","PAPER_SIZES_C","PAPER_SIZES","PaperSizeFromString","str","byName","find","PaperSizeFromDimensions","sort","PaperSizeToString","PAPER_SIZE_A4","SvgCommonDefs","theme","print","screenStyles","useMemo","palette","text","primary","main","secondary","id","patternUnits","divider","strokeWidth","INCH","fmtdeg","radiusFromSideWidth","sides","sideWidth","sin","sideWithFromRadius","radius","centerToSideFromSideWidth","tan","radiusFromCenterToSide","centerToSide","cos","sideWidthFromCenterToSide","RegularPolygon","startAngle","sideLength","Error","dTpl","RotStep","count","stepDeg","strings","exps","format","result","openInNewTab","url","newWindow","open","opener","PrismBoxSvg","topLip","bottomLip","theta","thetaDeg","creaseAngle","rightTabWidth","intersect","boxHeight","boxWidth","valley","type","MOVE_TO","relative","HORIZ_LINE_TO","flatMap","VERT_LINE_TO","LINE_TO","mountain","boxTop","svgViewBox","firstIntersect","xmlns","viewBox","clipPath","strokeDasharray","pos","cx","cy","r","p","setStateUnchecked","landscape","topLipMax","floor","lockTopLip","setLockTopLip","bottomLipLockPos","lockBottomLip","setLockBottomLip","updateState","partialState","s","useTheme","Grid","container","item","xs","md","display","alignItems","maxHeight","padding","spacing","maxWidth","margin","sx","flexDirection","gap","Card","CardMedia","image","paddingTop","CardContent","Link","href","PaperSize","newPaperSize","minWidth","FormControlLabel","control","Checkbox","checked","color","TextField","inputProps","step","min","max","target","InputProps","endAdornment","InputAdornment","position","disabled","IconButton","Lock","LockOpen","M","L","l","Z","CLOSE_PATH"],"sourceRoot":""}