{"version":3,"file":"paperBox1-index.js","mappings":"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","sources":["/dev/workshop/./src/common/useHashState.ts?","/dev/workshop/./src/paperBox1/ExportButtons.tsx?","/dev/workshop/./src/paperBox1/Measure.tsx?","/dev/workshop/./src/paperBox1/MeasureAngle.tsx?","/dev/workshop/./src/paperBox1/PaperAutocomplete.tsx?","/dev/workshop/./src/paperBox1/common.tsx?","/dev/workshop/./src/paperBox1/PrismBoxSvg.tsx?","/dev/workshop/./src/paperBox1/index.tsx?"],"sourcesContent":["import debounce from \"lodash/debounce\"\nimport mapValues from \"lodash/mapValues\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\nconst parseHash = (hash) => {\n  return !hash\n    ? {}\n    : hash\n        .substring(1)\n        .split(\"&\")\n        .map((part) => {\n          const [key, value] = part.split(\"=\")\n          return [decodeURIComponent(key), decodeURIComponent(value)]\n        })\n        .reduce((obj, [key, value]) => {\n          obj[key] = value\n          return obj\n        }, {} )\n}\nconst objectToHash = (o) => {\n  return (\n    \"#\" +\n    Object.entries(o)\n      .map(\n        ([key, value]) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(value),\n      )\n      .join(\"&\")\n  )\n}\n\nconst defaultDeserialize = (\n  x,\n) =>\n  mapValues(x, (v) => {\n    if (\"true\" === v) {\n      return true\n    } else if (\"false\" === v) {\n      return false\n    } else if (\"NaN\" === v) {\n      return NaN\n    } else if (\"undefined\" === v) {\n      return undefined\n    } else if (\"null\" === v) {\n      return null\n    } else if (\"\" === v) {\n      return \"\"\n    } else if (!isNaN(+v)) {\n      return +v\n    } else {\n      return v\n    }\n  })\nconst defaultSerialize = (x) =>\n  mapValues(x, (v) => \"\" + v)\n\nexport function useHashState(\n  initialState,\n  {\n    deserialize = defaultDeserialize,\n    serialize = defaultSerialize,\n    wait = 1000,\n  } = {},\n) {\n  const createInitialState = useCallback(() => {\n    const state =\n      \"function\" === typeof initialState\n        ? (initialState )()\n        : initialState\n    // hash overrides parameter\n    const mergedState = deserialize(\n      Object.assign(serialize(state), parseHash(document.location.hash)),\n    ) \n    history.pushState(\n      undefined,\n      document.title,\n      objectToHash(serialize(mergedState)),\n    )\n\n    return mergedState\n  }, [deserialize, initialState, serialize])\n  const [state, setState] = useState(createInitialState)\n  const updateHashRef = useRef()\n  if (!updateHashRef.current) {\n    updateHashRef.current = debounce(function (newState) {\n      history.pushState(\n        undefined,\n        document.title,\n        objectToHash(serialize(newState)),\n      )\n    }, wait)\n  }\n  useEffect(() => updateHashRef.current(state), [state])\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setState(createInitialState())\n    }\n    window.addEventListener(\"hashchange\", onHashChange)\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange)\n    }\n  }, [createInitialState])\n  return [state, setState]\n}\n","import Button from \"@mui/material/Button\"\nimport fileDownload from \"js-file-download\"\n\nimport * as React from \"react\"\nimport ReactDOMServer from \"react-dom/server\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function ExportButtons({\n  what,\n  baseFileName,\n}\n\n\n) {\n  const getPrintSVG = () =>\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(SvgPrintContext.Provider, { value: true,}, what),\n    ).replace(/\\s{2,}/g, \" \")\n  const asSVG = () => {\n    const svg = getPrintSVG()\n    fileDownload(svg, baseFileName + \".svg\")\n  }\n  const asTemplatePDF = async () => {\n    const { svgToPdf } = await import(\n      /* webpackChunkName: \"svgToPdf\" */ \"../paperBox1/svgToPdf\"\n    )\n\n    // add your content to the document here, as usual\n    const blob = await svgToPdf({\n      title: baseFileName,\n      author: \"Adrian Leonhard\",\n      svg: getPrintSVG(),\n    })\n\n    fileDownload(blob, baseFileName + \".pdf\")\n  }\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement(Button, { variant: \"contained\", onClick: asSVG,}, \"Download As SVG\"\n\n      )\n      , React.createElement(Button, { variant: \"contained\", onClick: asTemplatePDF,}, \"Template as PDF\"\n\n      )\n    )\n  )\n}\n","import * as React from \"react\"\nimport { createContext, useContext } from \"react\"\nimport { DEG, round10, V, } from \"ts3dutils\"\n\n\nexport const SvgPrintContext = createContext(false)\n\nexport function Guide({\n  children,\n  ...props\n}) {\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  return (\n    React.createElement('g', { className: \"guide\", ...props,}\n      , children\n    )\n  )\n}\nexport function Measure({\n  from,\n  to,\n  children,\n  hideRight = false,\n  offset = 0,\n}\n\n\n\n\n\n) {\n  Array.isArray(from) && (from = V(from))\n  Array.isArray(to) && (to = V(to))\n  const d = from.to(to)\n  const length = d.length()\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  if (length < 0.05) return null\n  children ||= \"\" + round10(length, -1)\n  const textBlank = 3 * children.length\n\n  return (\n    React.createElement('g', {\n      transform: ` translate(${from[0]}, ${from[1]}) rotate(${\n        d.angleXY() / DEG\n      }) translate(0, ${offset * 10})`,\n      className: \"measure\",}\n\n      , !hideRight && (\n        React.createElement('path', {\n          style: { fill: \"none\" },\n          d: `M0,0\n          l0,10\n          M4,3\n          l-4,2\n          l4,2`,}\n        )\n      )\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `\n        M0,5\n        H${(length - textBlank) / 2}\n        M${(length + textBlank) / 2},5\n        H${length}\n        M${length},0\n        l0,10\n        m-4,-7\n        l4,2\n        l-4,2`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: length / 2,\n        y: 5,}\n\n        , children\n      )\n    )\n  )\n}\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { V, V3 } from \"ts3dutils\"\nimport { fmtdeg, } from \"./common\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function MeasureAngle({\n  center,\n  start,\n  toRel,\n  children,\n}\n\n\n\n\n) {\n  Array.isArray(center) && (center = V(center))\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  const radius = 20\n  const startV = V3.polar(radius, start).plus(V(center))\n  const endV = V3.polar(radius, start + toRel).plus(V(center))\n  const textPos = V3.polar(0.7 * radius, start + toRel / 2).plus(V(center))\n  const largeArcFlag = Math.abs(toRel) > Math.PI ? \"1\" : \"0\"\n  const sweepFlag = toRel > 0 ? \"1\" : \"0\"\n  return (\n    React.createElement('g', { className: \"measure\",}\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `M${startV.x},${startV.y} A${radius},${radius},0,${largeArcFlag},${sweepFlag},${endV.x},${endV.y}`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: textPos.x,\n        y: textPos.y,}\n\n        , _nullishCoalesce(children, () => ( fmtdeg(toRel)))\n      )\n    )\n  )\n}\n","import Autocomplete from \"@mui/material/Autocomplete\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { forwardRef, } from \"react\"\nimport { PAPER_SIZES, PaperSizeFromDimensions } from \"./common\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaperAutocomplete = forwardRef(\n  (\n    {\n      disableClearance = false,\n      onChange,\n      value,\n      label,\n    },\n    ref,\n  ) => {\n    let paperSize = null\n    if (value) {\n      const [a, b] = value\n      paperSize = PaperSizeFromDimensions(a, b)\n    }\n    return (\n      React.createElement(Autocomplete, {\n        ref: ref,\n        disableClearable: disableClearance,\n        size: \"small\",\n        freeSolo: true,\n        renderInput: (params) => (\n          React.createElement(TextField, { ...params, label: label, variant: \"outlined\",} )\n        ),\n        value: paperSize,\n        onChange: (e, newValue) => {\n          if (\"string\" === typeof newValue) {\n            if (newValue.trim() === \"\") {\n              if (!disableClearance) {\n                onChange(null)\n              }\n            } else {\n              const match = /(\\d+(?:\\.\\d+)?).*?(\\d+(?:\\.\\d+)?)/.exec(newValue)\n              if (match) {\n                const [, widthStr, heightStr] = match\n                onChange(PaperSizeFromDimensions(+widthStr, +heightStr))\n              }\n            }\n          } else {\n            onChange(newValue)\n          }\n        },\n        getOptionLabel: (val) => {\n          const [width, height, name = \"custom\"] = val\n          return `${name} ${width}x${height}mm`\n        },\n        options: PAPER_SIZES,}\n      )\n    )\n  },\n)\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import * as React from \"react\"\n\nimport { arrayRange, DEG, MINUS, round10, TAU, V3 } from \"ts3dutils\"\n\nexport const INCH = 25.4\nexport const fmtdeg = (x) => \"\" + round10(x / DEG, -1) + \"°\"\n \n\nexport const radiusFromSideWidth = (sides, sideWidth) =>\n  sideWidth / 2 / Math.sin(TAU / sides / 2)\nexport const sideWithFromRadius = (sides, radius) =>\n  radius * 2 * Math.sin(TAU / sides / 2)\nexport const centerToSideFromSideWidth = (\n  sides,\n  sideWidth,\n) => sideWidth / 2 / Math.tan(TAU / sides / 2)\nexport const radiusFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide / Math.cos(TAU / sides / 2)\nexport const sideWidthFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide * 2 * Math.tan(TAU / sides / 2)\n\nexport function RegularPolygon({\n  sides,\n  radius,\n  startAngle = 0,\n  sideLength = undefined,\n  ...props\n}\n\n\n\n\n) {\n  if ((undefined !== sideLength) === (undefined !== radius)) {\n    throw new Error(\"must set either sideLength or radius\")\n  }\n  if (undefined === radius) {\n    radius = radiusFromSideWidth(sides, sideLength)\n  }\n  const { x, y } = V3.polar(radius, startAngle)\n  return (\n    React.createElement('path', {\n      d: dTpl`\n        M${x},${y}\n        ${arrayRange(0, sides).map(\n          (i) => dTpl`L${V3.polar(radius, startAngle + i * (TAU / sides))}`,\n        )}Z`,\n      ...props,}\n    )\n  )\n}\n\nexport function RotStep({\n  id,\n  children,\n  count,\n  stepDeg,\n}\n\n\n\n\n) {\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('g', { id: id,}, children)\n      , arrayRange(0, count - 1).map((i) => (\n        React.createElement('use', {\n          key: i,\n          xlinkHref: \"#\" + id,\n          transform: `rotate(${(i + 1) * stepDeg} 0 0)`,}\n        )\n      ))\n    )\n  )\n}\n\n \n// Always portrait orientation,\nexport const PAPER_SIZES = [\n  [841, 1189, \"A0\"],\n  [594, 841, \"A1\"],\n  [420, 594, \"A2\"],\n  [297, 420, \"A3\"],\n  [210, 297, \"A4\"],\n  [148, 210, \"A5\"],\n  [105, 148, \"A6\"],\n  [74, 105, \"A7\"],\n  [52, 74, \"A8\"],\n  [37, 52, \"A9\"],\n  [26, 37, \"A10\"],\n  [150, 150, \"Origami 15cm\"],\n  [100, 100, \"Origami 10cm\"],\n  [75, 75, \"Origami 7.5cm\"],\n  [215.9, 279.4, \"Letter\"],\n  [215.9, 355.6, \"Legal\"],\n]\n\nexport function PaperSizeFromString(str) {\n  const byName = PAPER_SIZES.find(([, , name]) => name === str)\n  if (byName) return byName\n  const [a, b] = str.split(\"x\")\n  return [+a, +b, \"Custom\"]\n}\nexport function PaperSizeFromDimensions(a, b) {\n  ;[a, b] = [a, b].sort(MINUS)\n  return _nullishCoalesce(PAPER_SIZES.find(([x, y]) => x === a && y === b), () => ( [a, b, \"Custom\"]))\n}\nexport function PaperSizeToString([a, b, name]) {\n  return name === \"Custom\" ? \"\" + a + \"x\" + b : name\n}\n\nexport const PAPER_SIZE_A4 = PAPER_SIZES.find(([, , name]) => name === \"A4\")\n\nexport function dTpl(\n  strings,\n  ...exps\n) {\n  const format = (x) =>\n    \"number\" === typeof x\n      ? \"\" + x\n      : \"string\" === typeof x\n      ? x\n      : Array.isArray(x)\n      ? x.map(format).join(\" \")\n      : x.x + \",\" + x.y\n  let result = strings[0]\n  for (let i = 0; i < exps.length; i++) {\n    result += format(exps[i])\n    result += strings[i + 1]\n  }\n  return result\n}\n\nexport const openInNewTab = (url) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\")\n  if (newWindow) newWindow.opener = null\n}\n","import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { encodeSVGPath, SVGPathData } from \"svg-pathdata\"\nimport { arrayRange, DEG, round10, TAU, V, V3 } from \"ts3dutils\"\n\nimport {\n  centerToSideFromSideWidth,\n  fmtdeg,\n  INCH,\n  radiusFromSideWidth,\n} from \"./common\"\nimport { Measure, SvgPrintContext } from \"./Measure\"\nimport { MeasureAngle } from \"./MeasureAngle\"\n\nexport function PrismBoxSvg({\n  height,\n  width,\n  topLip = 100,\n  bottomLip,\n  theta: thetaDeg,\n  sideWidth,\n  sides,\n  style,\n}\n\n\n\n\n\n\n\n\n) {\n  const shapeAngle = TAU / sides\n  const creaseAngle = shapeAngle / 2\n  const maxBottomLip = sideWidth / Math.tan(creaseAngle)\n  //const bottomLip = maxBottomLip\n  const rightTabWidth = width - sides * sideWidth\n\n  const intersect = Math.tan(creaseAngle) * bottomLip\n\n  const theta = thetaDeg * DEG\n\n  const boxHeight = height - bottomLip - topLip\n  const radius = radiusFromSideWidth(sides, sideWidth)\n  const centerToSide = centerToSideFromSideWidth(sides, sideWidth)\n  const boxWidth = centerToSide + (sides % 2 === 0 ? centerToSide : radius)\n\n  const print = useContext(SvgPrintContext)\n\n  const valley = encodeSVGPath([\n    // bottom lip horizontal\n    {\n      type: SVGPathData.MOVE_TO,\n      relative: false,\n      x: 0,\n      y: height - bottomLip,\n    },\n    { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: width },\n    ...arrayRange(0, sides + 1).flatMap((i) => [\n      // verts in between top and bottom lip\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: i * sideWidth,\n        y: topLip,\n      },\n      {\n        type: SVGPathData.VERT_LINE_TO,\n        relative: false,\n        y: height - bottomLip,\n      },\n      // diagonal segments at the bottom\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: i * sideWidth,\n        y: height - bottomLip,\n      },\n      {\n        type: SVGPathData.LINE_TO,\n        relative: false,\n        x: i * sideWidth + Math.tan(creaseAngle + theta) * bottomLip,\n        y: height,\n      },\n    ]),\n    // top lip\n    {\n      type: SVGPathData.MOVE_TO,\n      relative: false,\n      x: 0,\n      y: topLip,\n    },\n    { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: width },\n  ])\n  const mountain = encodeSVGPath([\n    // verts in bottom lip\n    ...arrayRange(0, sides + 1).flatMap((i) => [\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: i * sideWidth,\n        y: height - bottomLip,\n      },\n      {\n        type: SVGPathData.LINE_TO,\n        relative: true,\n        x: Math.sin(theta) * bottomLip,\n        y: bottomLip,\n      },\n    ]),\n    // verts in top lip\n    ...arrayRange(0, sides).flatMap((i) => [\n      {\n        type: SVGPathData.MOVE_TO,\n        relative: false,\n        x: (i + 1) * sideWidth,\n        y: 0,\n      },\n      {\n        type: SVGPathData.VERT_LINE_TO,\n        relative: false,\n        y: topLip,\n      },\n    ]),\n  ])\n  const boxTop = -boxHeight - 10 - radius\n  const svgViewBox = print\n    ? [0, 0, width, height]\n    : [-10, -10, width + 20, height + 30]\n\n  const firstIntersect = bottomLip * Math.tan(theta)\n  return (\n    React.createElement('svg', {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      style: {\n        fill: \"none\",\n        stroke: \"#123456\",\n        strokeWidth: (2 * INCH) / 300,\n        ...style,\n      },\n      width: svgViewBox[2] + \"mm\",\n      height: svgViewBox[3] + \"mm\",\n      viewBox: svgViewBox.join(\" \"),\n      className: \"adrian\",}\n\n      , React.createElement('defs', null\n        , React.createElement('pattern', { id: \"glue\", patternUnits: \"userSpaceOnUse\", width: \"4\", height: \"4\",}\n          , React.createElement('path', {\n            d: \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\"\n\n              ,\n            style: { stroke: \"#eee\", strokeWidth: 1 },}\n          )\n        )\n        , React.createElement('clipPath', { id: \"page\",}\n          , React.createElement('rect', { width: width, height: height,} )\n        )\n      )\n\n      , React.createElement('g', { clipPath: \"url(#page)\",}\n        , !print && (\n          React.createElement('rect', {\n            width: rightTabWidth,\n            height: height,\n            fill: \"url(#glue)\",\n            stroke: \"none\",}\n          )\n        )\n        , React.createElement('rect', { width: width, height: height,} )\n        , React.createElement('path', { d: valley, style: { strokeDasharray: \"1,1\" },} )\n        , React.createElement('path', { d: mountain, style: { strokeDasharray: \"10,2,1,1,1,2\" },} )\n        , arrayRange(0, sides).map((i) => {\n          const pos = V(i * sideWidth, height - bottomLip).plus(\n            V3.polar(radius, 90 * DEG - creaseAngle - theta),\n          )\n\n          return React.createElement('circle', { key: i, cx: pos.x, cy: pos.y, r: 0.5, stroke: \"black\",} )\n        })\n      )\n      , React.createElement(Measure, { from: [0, 0], to: [0, topLip],}, \"topLip\"\n\n      )\n      , React.createElement(Measure, { from: [0, topLip], to: [0, height - bottomLip],}\n        , \"\" + round10(height - topLip - bottomLip, -1)\n      )\n      , React.createElement(Measure, { from: [0, height - bottomLip], to: [0, height],}, \"bottomLip\"\n\n      )\n      , React.createElement(Measure, { from: [0, 0], to: [sideWidth, 0],}, \"sideWidth\"\n\n      )\n      , arrayRange(1, sides).map((i) => (\n        React.createElement(Measure, {\n          key: i,\n          from: [i * sideWidth, 0],\n          to: [(i + 1) * sideWidth, 0],\n          hideRight: true,}\n\n          , \"\" + round10(sideWidth * (i + 1), -1)\n        )\n      ))\n\n      , React.createElement(Measure, { from: [0, height], to: [firstIntersect, height],}\n        , \"\" + round10(firstIntersect, -2)\n      )\n      , arrayRange(0, sides).map((i) => (\n        React.createElement(Measure, {\n          key: i,\n          from: [firstIntersect + i * sideWidth, height],\n          to: [firstIntersect + (i + 1) * sideWidth, height],\n          hideRight: true,}\n\n          , \"\" + round10(firstIntersect + sideWidth * (i + 1), -1)\n        )\n      ))\n\n      , React.createElement(Measure, { from: [sides * sideWidth, 0], to: [width, 0],}\n        , \"\" + round10(rightTabWidth, -1)\n      )\n      , React.createElement(Measure, {\n        from: [sideWidth, height],\n        to: [sideWidth + intersect, height],\n        offset: 1,}\n\n        , \"\" + round10(intersect, -1)\n      )\n      , intersect < sideWidth && (\n        React.createElement(Measure, {\n          from: [sideWidth + intersect, height],\n          to: [sideWidth + sideWidth, height],\n          offset: 1,}\n\n          , \"\" + round10(sideWidth - intersect, -1)\n        )\n      )\n      , React.createElement(MeasureAngle, {\n        center: [sideWidth * 2, height - bottomLip],\n        start: 90 * DEG,\n        toRel: -creaseAngle,}\n\n        , fmtdeg(creaseAngle)\n      )\n      , !print && (\n        React.createElement('g', {\n          transform: `translate(200, ${boxHeight * 2})`,\n          style: { stroke: \"blue\" },}\n\n          , React.createElement('rect', {\n            transform: \"translate(0, -0)\" ,\n            x: -centerToSide,\n            y: -boxHeight - 10 - radius,\n            width: boxWidth,\n            height: boxHeight,}\n          )\n          /* verts */\n          , React.createElement('path', {\n            d: `${arrayRange(2, sides / 2)\n              .map((i) => {\n                const p = V3.polar(\n                  radius,\n                  (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n                )\n                return \"M\" + p.x + \",\" + boxTop + \" v\" + boxHeight\n              })\n              .join(\" \")} `,}\n          )\n          , React.createElement(Measure, {\n            from: [-centerToSide, boxTop],\n            to: [-centerToSide, boxTop + boxHeight],}\n\n            , \"\" + round10(boxHeight, -1)\n          )\n          , React.createElement(Measure, {\n            from: [-centerToSide, boxTop + boxHeight],\n            to: [-centerToSide + boxWidth, boxTop + boxHeight],}\n\n            , \"\" + round10(boxWidth, -1)\n          )\n          /* polygon base */\n          , React.createElement('path', {\n            d: `${arrayRange(0, sides)\n              .map((i) => {\n                const p = V3.polar(\n                  radius,\n                  (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n                )\n                return (0 === i ? \"M\" : \"L\") + p.x + \",\" + p.y\n              })\n              .join(\" \")} Z`,}\n          )\n          , React.createElement('path', {\n            d: encodeSVGPath([\n              ...arrayRange(0, sides).flatMap((i) => {\n                const p = V3.polar(\n                  radius,\n                  (TAU / sides) * i + (Math.PI - TAU / sides / 2),\n                )\n                const r = V3.polar(\n                  bottomLip / Math.cos(creaseAngle + theta),\n                  (TAU / sides) * i + -TAU / sides / 2 + theta,\n                )\n                return [\n                  {\n                    type: SVGPathData.MOVE_TO,\n                    relative: false,\n                    x: p.x,\n                    y: p.y,\n                  },\n                  {\n                    type: SVGPathData.LINE_TO,\n                    relative: true,\n                    x: r.x,\n                    y: r.y,\n                  },\n                ]\n              }),\n            ]),}\n          )\n        )\n      )\n    )\n  )\n}\n","import Lock from \"@mui/icons-material/Lock\"\nimport LockOpen from \"@mui/icons-material/LockOpen\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport Checkbox from \"@mui/material/Checkbox\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Grid from \"@mui/material/Grid\"\nimport IconButton from \"@mui/material/IconButton\"\nimport InputAdornment from \"@mui/material/InputAdornment\"\nimport Link from \"@mui/material/Link\"\nimport { useTheme } from \"@mui/material/styles\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { useCallback, useState } from \"react\"\nimport { round10, TAU } from \"ts3dutils\"\n\nimport { useHashState } from \"../common/useHashState\"\nimport { PAPER_SIZE_A4, PaperSizeFromDimensions } from \"./common\"\nimport { ExportButtons } from \"./ExportButtons\"\nimport hexPrismBoxJpg from \"./hexPrismBox.jpg\"\nimport { PaperAutocomplete } from \"./PaperAutocomplete\"\nimport { PrismBoxSvg } from \"./PrismBoxSvg\"\n\nexport default () => {\n  const [state, setStateUnchecked] = useHashState({\n    width: PAPER_SIZE_A4[1],\n    height: PAPER_SIZE_A4[0],\n    sides: 6,\n    sideWidth: 45,\n    topLip: 30,\n    bottomLip: 30,\n    theta: 5,\n  })\n  const landscape = state.width > state.height\n  const [width, height] = [state.width, state.height]\n\n  // lockTopLip\n  const topLipMax = Math.floor((height - state.bottomLip - 1) / 2)\n  const [lockTopLip, setLockTopLip] = useState(true)\n\n  // lockBottomLip\n  const shapeAngle = TAU / state.sides\n  const creaseAngle = shapeAngle / 2\n  const bottomLipLockPos = round10(state.sideWidth / Math.tan(creaseAngle), -1)\n  const [lockBottomLip, setLockBottomLip] = useState(false)\n\n  const updateState = useCallback(\n    (partialState) => {\n      setStateUnchecked((s) => {\n        const newState = { ...s, ...partialState }\n        if (lockTopLip && topLipMax !== state.topLip) {\n          newState.topLip = topLipMax\n        }\n        if (lockBottomLip && bottomLipLockPos !== state.bottomLip) {\n          newState.bottomLip = bottomLipLockPos\n        }\n        return newState\n      })\n    },\n    [\n      setStateUnchecked,\n      lockTopLip,\n      topLipMax,\n      state.topLip,\n      state.bottomLip,\n      lockBottomLip,\n      bottomLipLockPos,\n    ],\n  )\n\n  const theme = useTheme()\n\n  return (\n    React.createElement(Grid, { container: true, style: { width: \"100%\" },}\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 10,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          maxHeight: \"100vh\",\n          padding: theme.spacing(2),\n        },}\n\n        , React.createElement(PrismBoxSvg, {\n          ...state,\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            height: \"auto\",\n            margin: \"auto\",\n          },}\n        )\n      )\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          padding: 2,\n          alignItems: \"stretch\",\n          // \"& > *\": { margin: 1 },\n          gap: 2,\n        },}\n\n        , React.createElement(Card, null\n          , React.createElement(CardMedia, {\n            image: hexPrismBoxJpg,\n            title: \"Hexagonal Prism Box\"  ,\n            sx: {\n              height: 0,\n              paddingTop: \"100%\", // 1:1\n            },}\n          )\n          , React.createElement(CardContent, null, \"Helper to build\"\n              , \" \"\n            , React.createElement(Link, { href: \"https://www.paperkawaii.com/video-tutorial-origami-hexagonal-gift-box/\",}, \"this box\"\n\n            ), \". All measurements are in millimeters. To make a lid, you should increase the sideWidth by 1mm and ~halve the paper height.\"\n\n\n          )\n        )\n        , React.createElement(PaperAutocomplete, {\n          label: \"Paper Size\" ,\n          value: PaperSizeFromDimensions(width, height),\n          onChange: (newPaperSize) => {\n            const [minWidth, maxHeight] = newPaperSize\n            updateState(\n              landscape\n                ? { width: maxHeight, height: minWidth }\n                : { width: minWidth, height: maxHeight },\n            )\n          },}\n        )\n        , React.createElement(FormControlLabel, {\n          control: \n            React.createElement(Checkbox, {\n              checked: landscape,\n              onChange: () => {\n                // noinspection JSSuspiciousNameCombination\n                updateState({\n                  width: height,\n                  height: width,\n                })\n              },\n              color: \"primary\",}\n            )\n          ,\n          label: \"Landscape\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 3, max: 16 },\n          value: state.sides,\n          onChange: (e) => updateState({ sides: +e.target.value }),\n          label: \"Sides\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 1 },\n          value: state.sideWidth,\n          onChange: (e) => updateState({ sideWidth: +e.target.value }),\n          InputProps: {\n            endAdornment: React.createElement(InputAdornment, { position: \"end\",}, \"mm\"),\n          },\n          label: \"sideWidth\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 0 },\n          value: state.theta,\n          onChange: (e) => updateState({ theta: +e.target.value }),\n          InputProps: {\n            endAdornment: React.createElement(InputAdornment, { position: \"end\",}, \"mm\"),\n          },\n          label: \"theta\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          disabled: lockTopLip,\n          size: \"small\",\n          type: \"number\",\n          inputProps: {\n            step: 1,\n            min: 0,\n            max: topLipMax,\n          },\n          value: state.topLip,\n          onChange: (e) => updateState({ topLip: +e.target.value }),\n          InputProps: {\n            endAdornment: (\n              React.createElement(React.Fragment, null\n                , React.createElement(InputAdornment, { position: \"end\",}, \"mm\")\n                , React.createElement(IconButton, {\n                  onClick: () => {\n                    setLockTopLip(!lockTopLip)\n                    updateState({})\n                  },\n                  size: \"large\",}\n\n                  , lockTopLip ? React.createElement(Lock, { color: \"primary\",} ) : React.createElement(LockOpen, null )\n                )\n              )\n            ),\n          },\n          label: \"topLip\",}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          disabled: lockBottomLip,\n          size: \"small\",\n          type: \"number\",\n          inputProps: { step: 1, min: 0 },\n          value: state.bottomLip,\n          onChange: (e) => updateState({ bottomLip: +e.target.value }),\n          InputProps: {\n            endAdornment: (\n              React.createElement(React.Fragment, null\n                , React.createElement(InputAdornment, { position: \"end\",}, \"mm\")\n                , React.createElement(IconButton, {\n                  onClick: () => {\n                    setLockBottomLip(!lockBottomLip)\n                    updateState({})\n                  },\n                  size: \"large\",}\n\n                  , lockBottomLip ? React.createElement(Lock, { color: \"primary\",} ) : React.createElement(LockOpen, null )\n                )\n              )\n            ),\n          },\n          label: \"bottomLip\",}\n        )\n        , React.createElement(ExportButtons, {\n          what: React.createElement(PrismBoxSvg, { ...state,} ),\n          baseFileName: \n            `${width}x${height}-${state.sides}x${state.sideWidth}` +\n            `-${state.topLip}-${state.bottomLip}`\n          ,}\n        )\n      )\n    )\n  )\n}\n"],"names":["parseHash","hash","substring","split","map","part","key","value","decodeURIComponent","reduce","obj","objectToHash","o","Object","entries","encodeURIComponent","join","defaultDeserialize","x","v","NaN","isNaN","defaultSerialize","useHashState","initialState","deserialize","serialize","wait","createInitialState","useCallback","state","mergedState","assign","document","location","history","pushState","undefined","title","setState","useState","updateHashRef","useRef","current","newState","useEffect","onHashChange","window","addEventListener","removeEventListener","ExportButtons","what","baseFileName","getPrintSVG","Provider","replace","variant","onClick","svg","async","svgToPdf","blob","author","SvgPrintContext","createContext","Guide","children","props","useContext","className","Measure","from","to","hideRight","offset","Array","isArray","V","d","length","textBlank","transform","angleXY","style","fill","stroke","fontSize","dominantBaseline","textAnchor","y","MeasureAngle","center","start","toRel","startV","V3","polar","plus","endV","textPos","largeArcFlag","Math","abs","PI","sweepFlag","lhs","rhsFn","PaperAutocomplete","forwardRef","disableClearance","onChange","label","ref","paperSize","a","b","disableClearable","size","freeSolo","renderInput","params","e","newValue","trim","match","exec","widthStr","heightStr","getOptionLabel","val","width","height","name","options","INCH","fmtdeg","radiusFromSideWidth","sides","sideWidth","sin","sideWithFromRadius","radius","centerToSideFromSideWidth","tan","radiusFromCenterToSide","centerToSide","cos","sideWidthFromCenterToSide","RegularPolygon","startAngle","sideLength","Error","dTpl","i","RotStep","id","count","stepDeg","xlinkHref","PAPER_SIZES","PaperSizeFromString","str","byName","find","PaperSizeFromDimensions","sort","PaperSizeToString","PAPER_SIZE_A4","strings","exps","format","result","openInNewTab","url","newWindow","open","opener","PrismBoxSvg","topLip","bottomLip","theta","thetaDeg","creaseAngle","rightTabWidth","intersect","boxHeight","boxWidth","print","valley","type","MOVE_TO","relative","HORIZ_LINE_TO","flatMap","VERT_LINE_TO","LINE_TO","mountain","boxTop","svgViewBox","firstIntersect","xmlns","strokeWidth","viewBox","patternUnits","clipPath","strokeDasharray","pos","cx","cy","r","p","setStateUnchecked","landscape","topLipMax","floor","lockTopLip","setLockTopLip","bottomLipLockPos","lockBottomLip","setLockBottomLip","updateState","partialState","s","theme","useTheme","Grid","container","item","xs","md","display","alignItems","maxHeight","padding","spacing","maxWidth","margin","sx","flexDirection","gap","Card","CardMedia","image","paddingTop","CardContent","Link","href","newPaperSize","minWidth","FormControlLabel","control","Checkbox","checked","color","TextField","inputProps","step","min","max","target","InputProps","endAdornment","InputAdornment","position","disabled","IconButton","Lock","LockOpen"],"sourceRoot":""}