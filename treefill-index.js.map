{"version":3,"file":"treefill-index.js","mappings":"iJASA,MAAOA,EAAIC,EAAOC,EAAMC,GAAQ,CAAC,EAAG,EAAG,EAAG,GAmD3B,SAAS,IACtB,MAAM,IAAIC,MAAM,WAElB,C","sources":["/dev/workshop/./src/treefill/index.tsx?"],"sourcesContent":["import * as React from \"react\"\n\nimport { mod, V, V3 } from \"ts3dutils\"\n\n\n\n\n\n\nconst [UP, RIGHT, DOWN, LEFT] = [0, 1, 2, 3]\nconst FILLED = \"FILLED\" \nconst OPEN = \"OPEN\" \n\n\nclass QuadTreeFill {\n  \n    __init() {this.heads = []}\n\n  constructor(  width,   height) {;this.width = width;this.height = height;QuadTreeFill.prototype.__init.call(this);\n    this.grid = new Array(width * height)\n  }\n\n  addHead(head) {\n    this.heads.push(head)\n  }\n\n  check(p) {\n    const { x, y } = p\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return FILLED\n    }\n    return this.grid[y * this.width + x] ? FILLED : OPEN\n  }\n\n  step() {\n    return this.heads.length !== 0\n  }\n\n  turn(dir, d) {\n    return mod(dir + d, 4)\n  }\n\n  mov(pos, dir) {\n    return pos.plus([V3.Y, V3.X, V3.Y.negated(), V3.X.negated()][dir])\n  }\n\n  toSVG() {\n    return null\n  }\n}\n\nfunction build() {\n  const q = new QuadTreeFill(400, 300)\n  q.addHead({ pos: V(200, 0), dir: DOWN })\n  for (let i = 0; i < 1000 && q.step(); i++) {\n    //todo\n  }\n  return q\n}\n\nexport default function () {\n  throw new Error(\"helloooo\")\n  return React.createElement('div', null, \"hi\")\n}\n"],"names":["UP","RIGHT","DOWN","LEFT","Error"],"sourceRoot":""}