(self.webpackChunkworkshop=self.webpackChunkworkshop||[]).push([[244],{4230:(e,n,o)=>{"use strict";o.r(n),o.d(n,{quickhull:()=>p,default:()=>h});var t=o(3376),i=o(9392),s=o(7392),l=o(9526);const r="C:\\Users\\aval\\tsdev\\workshop\\src\\quickhull\\index.tsx";function a(e,n){return null!=e?e:n()}function c(e,n){const o=[];for(let t=0;t<e.length;t++)n(e[t],t,e)&&o.push(t);return o}function f(e,n){return e[0]===n[0]&&e[1]===n[1]||e[0]===n[1]&&e[1]===n[0]}const d=s.$_("orange").gl(),u=s.$_("blue").gl(),g=e=>new Promise(((n,o)=>setTimeout(n,e)));function p(e){const n=(0,t.Nv)(1e3,(()=>t.V3.randomUnit().plus(t.V3.XYZ).times(.5)));(new i.Kj).addIndexBuffer("TRIANGLES").addIndexBuffer("LINES").vertices=n;const o=[];!async function(){let e=(new i.Kj).addIndexBuffer("TRIANGLES").addIndexBuffer("LINES");for(const[s,l]of function*(e){yield["start",{triangles:[]}];const[n,o,i,s]=e,l=[];function r(n,o){const[t,i,s]=l[n].triangle;return function(e,n,o,t){const i=e.to(n).cross(e.to(o));return e.to(t).dot(i)}(e[t],e[i],e[s],o)}let a=0;l.push({triangle:[0,1,2],pointsAboveIndexes:[],fInfex:a++}),l.push({triangle:[1,0,3],pointsAboveIndexes:[],fInfex:a++}),l.push({triangle:[2,1,3],pointsAboveIndexes:[],fInfex:a++}),l.push({triangle:[0,2,3],pointsAboveIndexes:[],fInfex:a++}),console.log("glug",r(0,e[3])),r(0,e[3])>0&&l.forEach((e=>(0,t.qC)(e.triangle,0,1))),yield["selecting first 4 points",{hp:[0,1,2,3]}];for(let n=0;n<4;n++){const o=l.slice(0,n+1).flatMap((e=>e.triangle));yield["creating base tetra",{triangles:o,hf:[n]}];const t=[];for(let o=0;o<e.length;o++)r(n,e[o])>0&&t.push(o);l[n].pointsAboveIndexes=t,yield['finding points "above" facet',{triangles:o,hf:[n],hp:t,hpc:"yes"}]}for(let n=0;n<l.length;n++){const o=l[n];if(console.log("triangle",n,"pointsAbove",o.pointsAboveIndexes.length),yield["finding highest point above facet",{hf:[n],hp:o.pointsAboveIndexes}],0===o.pointsAboveIndexes.length)continue;const i=(0,t.AW)(o.pointsAboveIndexes,(o=>r(n,e[o])));yield["highet point above facet",{hf:[n],hp:[i]}];const s=e[i],u=c(l,((e,n)=>r(n,s)>0));yield["facets visible from highest point",{hf:u,hp:[i]}];const g=[];for(const e of u){const n=e=>{const n=g.findIndex((n=>f(n,e)));-1===n?g.push(e):(0,t.J8)(g,n)};n([l[e].triangle[0],l[e].triangle[1]]),n([l[e].triangle[1],l[e].triangle[2]]),n([l[e].triangle[2],l[e].triangle[0]])}for(const n of g){const o=l.length;l.push({triangle:[i,n[0],n[1]],pointsAboveIndexes:[],fInfex:a++}),l[o].pointsAboveIndexes=(0,t.Tw)(u.flatMap((n=>l[n].pointsAboveIndexes.filter((n=>r(o,e[n])>0))))),yield["creating new facet",{triangles:l.flatMap((e=>e.triangle)),hf:[o]}],yield['finding points "above" new facet',{hf:[o],hp:l[o].pointsAboveIndexes,hpc:"yes"}]}yield["delete old triangles",{hf:u,hfc:d}],console.log("removeIndexes",l.slice(),u),(0,t.hO)(l,u),console.log(l.slice()),n-=u.filter((e=>e<=n)).length,yield["delete old triangles",{triangles:l.flatMap((e=>e.triangle))}],console.log("visibleTriIndexes",u),console.log("facets",l)}return l.flatMap((e=>e.triangle))}(n))l.triangles&&(e=(new i.Kj).addIndexBuffer("TRIANGLES").addIndexBuffer("LINES"),e.vertices=n,e.TRIANGLES=l.triangles,e.computeWireframeFromFlatTriangles(),e.compile()),o.push({mesh:e,description:s,cd:l}),await g(100);console.log("finished doo")}(),console.log(o);let l=0;const r=i.ex.create("\n    uniform mat4 ts_ModelViewProjectionMatrix;\n    attribute vec4 ts_Vertex;\n    uniform float pointSize;\n    varying vec4 foo;\n    void main() {\n      foo = vec4(1.0, 1.0, 1.0, 1.0);\n      gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n      gl_PointSize = pointSize;\n    }\n  ","\n    precision highp float;\n    uniform vec4 color;\n    varying vec4 bar;\n    void main() {\n      gl_FragColor = color;\n      if (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.5) {\n        discard;\n      }\n    }\n  ");e.clearColor(1,1,1,0),e.cullFace(e.BACK),e.matrixMode(e.PROJECTION),e.loadIdentity(),e.perspective(70,e.canvas.width/e.canvas.height,.1,1e3),e.lookAt((0,t.V)(0,-2,1.5),t.V3.O,t.V3.Z),e.matrixMode(e.MODELVIEW),e.pointSize(10),e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),console.log(e.canvas),e.canvas.contentEditable="true",e.canvas.focus(),e.canvas.onkeydown=function(e){console.log("keydown");const n=(0,t.uZ)(l+("j"===e.key?-1:"k"===e.key?1:0),0,o.length-1);n!=l&&(l=n,console.log(l,o[l].description,o[l].cd))};let p=t.V3.O,h=t.M4.IDENTITY;return e.canvas.onmousemove=function(e){console.log("onmousemove");const n=(0,t.V)(e.pageX,e.pageY),o=p.to(n);1&e.buttons&&(h=h.rotateZ(.25*o.x*t.Co),h=h.rotateX(.25*o.y*t.Co)),p=n},e.animate((function(n,t){l+1<o.length&&l++,e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.loadIdentity(),e.multMatrix(h),e.scale(1.5),e.translate(-.5,-.5,-.5);const i=o[l].mesh,c=o[l].cd;e.projectionMatrix.m[11]-=1/(1<<20);for(const n of a(c.hp,(()=>[]))){const o="yes"===c.hpc?"lime":"no"===c.hpc?"red":"blue";r.uniforms({color:s.iv(o).gl(),pointSize:12}).drawBuffers(i.vertexBuffers,void 0,e.POINTS,n,1)}for(const n of a(c.hf,(()=>[])))r.uniforms({color:a(c.hfc,(()=>u))}).draw(i,e.TRIANGLES,3*n,3);e.projectionMatrix.m[11]+=1/(1<<20),r.uniforms({color:s.iv("grey").gl(),pointSize:10}).drawBuffers(i.vertexBuffers,void 0,e.POINTS),r.uniforms({color:[1,1,0,1]}).draw(i,e.LINES),r.uniforms({color:[0,0,0,.5]}).draw(i,e.TRIANGLES)}))}const h=()=>{const e=(0,l.useRef)(null);return(0,l.useEffect)((()=>{const n=i.ZG.create({canvas:e.current});n.addResizeListener(),p(n)}),[]),l.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%"},__self:void 0,__source:{fileName:r,lineNumber:538}},l.createElement("canvas",{ref:e,style:{flexGrow:1},tabIndex:0,__self:void 0,__source:{fileName:r,lineNumber:539}}))}}}]);