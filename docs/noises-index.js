(self.webpackChunkworkshop=self.webpackChunkworkshop||[]).push([[388],{5482:(e,t,n)=>{"use strict";n.r(t),n.d(t,{band:()=>E,default:()=>k});var o=n(6800),r=n(260),a=n(1459),i=n(9975),l=n(9905),c=n(4881),s=n(5270),f=n(7392),u=n(9526),d=n(2182),m=n(9392),v=n(1641);function x(e){let t,n=e[0],o=1;for(;o<e.length;){const r=e[o],a=e[o+1];if(o+=2,("optionalAccess"===r||"optionalCall"===r)&&null==n)return;"access"===r||"optionalAccess"===r?(t=n,n=a(n)):"call"!==r&&"optionalCall"!==r||(n=a(((...e)=>n.call(t,...e))),t=void 0)}return n}const p=(e,t,n,o)=>({type:"vec4",what:[e,t,n,o],etype:"vec4"}),h=(e,t)=>({type:"div",what:[e,t],etype:e.etype}),y=(e,t)=>({type:"sub",what:[e,t],etype:e.etype}),g=(e,t=[])=>{const n=e=>"  ".repeat(e),o=(e,t,n=0)=>e.etype&&t&&e.etype!==t?t+"("+r(e,t,n)+")":r(e,t,n),r=(e,t,r=0)=>{if("number"==typeof e)switch(t){case"float":return Intl.NumberFormat("en-US",{minimumFractionDigits:1}).format(e);case"uint":return e+"u";case"int":return e;default:throw new Error(t)}else switch(e.type){case"sum":return"("+e.what.map((e=>o(e,r+1))).join("\n"+n(r+1)+"+ ")+")";case"neg":return"(-"+o(e.what,t,0)+")";case"div":{const[n,r]=e.what;return"("+o(n,t)+" / "+o(r,t)+")"}case"mul":{const[n,r]=e.what;return"("+o(n,t)+" * "+o(r,t)+")"}case"sub":{const[n,r]=e.what;return"("+o(n,t)+" - "+o(r,t)+")"}case"arg":return e.name;case"mix":const[a,i,l]=e.what;return"mix("+o(a,t,r)+", "+o(i,t,r)+", "+o(l,"float",r)+")";case"glFragment":return n(r)+"glFragment = "+o(e.what,t,r)+";";case"floor":return"floor("+o(e.what,t)+")";case"vec4":return"vec4("+e.what.map((e=>o(e,"float"))).join(", ")+")";default:throw new Error(JSON.stringify(e))}},a=_(e).map(((e,n)=>({type:"arg",name:e,etype:t[n]})));console.log("args",a);const i=e(...a);return i.etype+" "+e.name+"("+_(e).map(((e,n)=>t[n]+" "+e))+") {\nreturn "+o(i,void 0,1)+";\n}\n"};function _(e){if(0===e.length)return[];const t=e.toString();let n;return n=x([t,"access",e=>e.match,"call",e=>e(/(?:async|function)\s*.*?\(([^)]*)\)/),"optionalAccess",e=>e[1]])||x([t,"access",e=>e.match,"call",e=>e(/^\s*\(([^)]*)\)\s*=>/),"optionalAccess",e=>e[1]])||x([t,"access",e=>e.match,"call",e=>e(/^\s*([^=]*)=>/),"optionalAccess",e=>e[1]]),n.split(",").map((function(e){return e.replace(/\/\*.*\*\//,"").trim()})).filter((function(e){return e}))}function b(e,t,n){return h(y(n,e),y(t,e))}function C(...e){return function(t){return{argTypes:e,func:t}}}console.log(g((function(){const e=p(1,0,3,1),t=p(.1,1,0,1);return((e,...t)=>({type:"sum",what:[e,...t],etype:e.etype}))({type:"neg",what:n=e,etype:n.etype},t);var n})));const w=C("float","float","uint","float")((function(e,t,n,o){return((e,t,n)=>({type:"mix",what:[e,t,n],etype:e.etype}))(e,t,h({type:"floor",what:r=((e,t)=>({type:"mul",what:[e,t],etype:e.etype}))(b(e,t,o),n),etype:r.etype},y(n,1)));var r})),M=(C()((function(){})),g(w.func,w.argTypes));console.log(M);const P="C:\\Users\\aval\\tsdev\\workshop\\src\\noises\\index.tsx",V=(0,d.Nv)(512,(()=>d.V3.polar(1,2*(Math.random()-.5)*Math.PI))),S={xOffset:0,yOffset:0,xScale:64,yScale:64,bandCount:2,a:.5},N=(e,t,n)=>{const o=0|e,r=o+1,a=0|t,i=a+1,l=e=>e*e*(3-2*e),c=(e,t,n,o)=>{const r=n-e,a=o-t;return(0,d.en)(V,59*e+t).dot(new d.V3(r,a,0))},s=c(o,a,e,t),f=c(r,a,e,t),u=(0,d.t7)(s,f,n?l(e-o):e-o),m=c(o,i,e,t),v=c(r,i,e,t),x=(0,d.t7)(m,v,n?l(e-o):e-o);return(0,d.t7)(u,x,n?l(t-a):t-a)},E=(e,t,n,o)=>(0,d.t7)(e,t,Math.floor(4*(0,d.kL)(e,t,o))/3);const T=(0,l.Z)((e=>({sidebar:{display:"flex",flexDirection:"column",width:256,padding:e.spacing(1),alignItems:"stretch","& > *":{margin:e.spacing(1)}},media:{height:0,paddingTop:"100%"}})));function I({state:e,prop:t,setStatePartial:n,...o}){return u.createElement(s.Z,{variant:"outlined",size:"small",type:"number",value:e[t],onChange:e=>n({[t]:+e.target.value}),label:t,...o,__self:this,__source:{fileName:P,lineNumber:607}})}const k=()=>{const e=(0,u.useRef)(null),[t,l]=(0,v.q)(S),s=(0,u.useCallback)((e=>l((t=>({...t,...e})))),[l]),x=(0,u.useRef)(),p=(0,u.useRef)(Object.assign({},t)),h=T(),y=(0,c.Z)();return(0,u.useEffect)((()=>{const t=m.ZG.create({canvas:e.current});t.fixCanvasRes(),t.addResizeListener(),x.current=function(e,t,o){let r=!0;const a=512,i=new Uint8Array(512*a),l=new m.xE(a,512,{format:e.RED,type:e.UNSIGNED_BYTE,internalFormat:e.R8}),c=new m.xE(256,256,{format:e.RG,type:e.FLOAT,internalFormat:e.RG32F,data:d.V3.packXY((0,d.Nv)(65536,(()=>d.V3.polar(1,2*(Math.random()-.5)*Math.PI))))}),s=()=>{let e=1/0,t=-1/0;for(let n=0;n<512;n++)for(let l=0;l<a;l++){const c=(0,d.uZ)(.8*(N(o.xOffset+l/o.xScale,o.yOffset+n/o.yScale,r)+.5),0,1),s=Math.random();i[n*a+l]=Math.floor(4*c)/3*255,t=Math.max(t,s),e=Math.min(e,s)}i[0]=0,l.setData(i)};s();const f=m.Kj.plane({detail:128}),u=m.Kj.sphere(0).computeWireframeFromFlatTrianglesClosedMesh().compile();!function(e){const t=[],n=Math.sqrt(3)/2,o=Math.cos(Math.PI/3),r=2*Math.asin(1/Math.sqrt(3));for(let a=-0;a<2;a++)for(let i=-0;i<2;i++)for(let l=-0;l<1;l++){const c=a+(i%2==0?0:o);t.push(e.transform(d.M4.scale(1,.01,.01).translate(c,i*n,l*n)),e.transform(d.M4.scale(1,.01,.01).rotateZ(Math.PI/3).translate(c,i*n,l*n)),e.transform(d.M4.scale(1,.01,.01).rotateZ(Math.PI/3*2).translate(c,i*n,l*n)),e.transform(d.M4.scale(1,.01,.01).rotateZ(Math.PI/2).rotateX((Math.PI-r)/2).translate(c,i*n,l*n)),e.transform(d.M4.scale(1,.01,.01).rotateY(-Math.PI/3*2).rotateX(Math.PI/2-r).translate(c,i*n,l*n)),e.transform(d.M4.scale(1,.01,.01).rotateY(-Math.PI/3).rotateX(Math.PI/2-r).translate(c,i*n,l*n)))}const[a,...i]=t;a.concat(...i)}(m.Kj.rotation([d.V3.Y,d.V3.XY],{anchor:d.V3.O,dir1:d.V3.X},2*Math.PI,3,!0)),console.log(u);const v=m.ex.create("\n      uniform mat4 ts_ModelViewProjectionMatrix;\n      attribute vec4 ts_Vertex;\n      uniform float pointSize;\n      varying vec4 foo;\n      void main() {\n        foo = vec4(1.0, 1.0, 1.0, 1.0);\n        gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n        gl_PointSize = pointSize;\n      }\n    ","\n      precision highp float;\n      uniform vec4 color;\n      varying vec4 bar;\n      void main() {\n        gl_FragColor = color;\n        if (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.5) {\n          discard;\n        }\n      }\n    "),x=(m.ex.create("#version 300 es\n      precision highp float;\n      \n      uniform mat4 ts_ModelViewProjectionMatrix;\n      in vec4 ts_Vertex;\n      uniform float pointSize;\n      uniform vec2 scale;\n      uniform vec2 offset;\n      in vec3 ts_TexCoordUVQ;\n      in vec2 ts_TexCoord;\n      out vec3 coordUVQ;\n      out float n;\n      out vec2 coord;\n      void main() {\n        vec2 texCoordAdjusted = offset + ts_TexCoord * scale;\n        n = 0.0;  \n        gl_Position = ts_ModelViewProjectionMatrix * \n          (ts_Vertex + vec4(0.0, 0.0, n, 0.0));\n        gl_PointSize = pointSize;\n        coordUVQ = ts_TexCoordUVQ;\n        coord = texCoordAdjusted;\n      }\n  ",`#version 300 es\n      precision highp float;\n      \n      ${M}\n      \n      uniform sampler2D texture;\n      uniform vec4 colorPrimary;\n      uniform vec4 colorBg;\n      uniform int bandCount;\n      in float n;\n      in vec2 coord;\n      out vec4 fragColor;\n      void main() {\n        float fraction = (n + 0.5) * 0.5;\n        float banded = floor(fraction * float(bandCount)) / float(bandCount - 1);\n        fragColor = mix(colorBg, colorPrimary, banded);\n        \n        if (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.5) {\n          discard;\n        }\n      }\n    `),m.ex.create("#version 300 es\n      precision highp float;\n      \n      uniform mat4 ts_ModelViewProjectionMatrix;\n      in vec4 ts_Vertex;\n      uniform vec2 scale;\n      uniform vec2 offset;\n      in vec3 ts_TexCoordUVQ;\n      in vec2 ts_TexCoord;\n      out vec3 coordUVQ;\n      out float n;\n      out vec2 coord;\n      void main() {\n        vec2 texCoordAdjusted = offset + ts_TexCoord * scale;\n        gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n        coordUVQ = ts_TexCoordUVQ;\n        coord = texCoordAdjusted;\n      }\n  ",n(4003))),p=(m.ex.create("\n      uniform mat4 ts_ModelViewProjectionMatrix;\n      attribute vec4 ts_Vertex;\n      uniform float pointSize;\n      attribute vec3 ts_TexCoordUVQ;\n      attribute vec2 ts_TexCoord;\n      varying vec4 foo;\n      varying vec3 coordUVQ;\n      varying vec2 coord;\n      void main() {\n        foo = vec4(1.0, 1.0, 1.0, 1.0);\n        gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n        gl_PointSize = pointSize;\n        coordUVQ = ts_TexCoordUVQ;\n        coord = ts_TexCoord;\n      }\n    ","\n      precision highp float;\n      uniform sampler2D texture;\n      uniform vec4 colorPrimary;\n      uniform vec4 colorBg;\n      varying vec4 bar;\n      varying vec3 coordUVQ;\n      varying vec2 coord;\n      void main() {\n        float fraction = texture2D(texture, coord).r;\n        gl_FragColor = mix(colorBg, colorPrimary, fraction);\n        \n        if (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.5) {\n          discard;\n        }\n      }\n    "),{pos:(0,d.V)(.75,0,1),lookDir:(0,d.V)(0,0,-1)});(()=>{if(null!=localStorage.getItem("viewState")){const e=JSON.parse(localStorage.getItem("viewState"));p.pos=d.V3.fromArray(e.pos),p.lookDir=d.V3.fromArray(e.lookDir)}})(),e.clearColor(...t.background),e.cullFace(e.BACK);const h=()=>{e.matrixMode(e.PROJECTION),e.loadIdentity(),e.perspective(70,e.canvas.width/e.canvas.height,.1,1e3),e.lookAt((0,d.V)(.75,0,1),(0,d.V)(.75,0,0),d.V3.Y),e.matrixMode(e.MODELVIEW)};h(),e.pointSize(10),e.disable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);const y={};console.log(e.canvas),e.canvas.contentEditable="true",e.canvas.focus(),e.canvas.onkeydown=function(t){y[t.key]=!0,"o"===t.key&&(r=!r,s()),"2"===t.key&&h(),"1"===t.key&&(e.matrixMode(e.PROJECTION),e.loadIdentity(),e.perspective(70,e.canvas.width/e.canvas.height,.1,1e3),e.lookAt((0,d.V)(0,.5,2.2),d.V3.O,d.V3.Y),e.matrixMode(e.MODELVIEW))},e.canvas.onkeypress=function(e){new d.V3(0,0,0)},e.canvas.onkeyup=function(e){y[e.key]=!1};let g=d.V3.O,_=d.M4.IDENTITY;return e.canvas.onmousemove2=function(e){const t=(0,d.V)(e.pageX,e.pageY),n=g.to(t);1&e.buttons&&(_=_.rotateZ(.25*n.x*d.Co),_=_.rotateX(.25*n.y*d.Co)),g=t},e.canvas.onmousemove=function(e){const t=(0,d.V)(e.pageX,e.pageY),n=g.to(t);if(1&e.buttons){const e=d.M4.rotateY(.25*-n.x*d.Co).rotateX(.25*-n.y*d.Co);p.lookDir=e.transformVector(p.lookDir).unit()}g=t},Object.assign(e.animate((function(n,r){const a=new d.V3(+!!y.w-+!!y.s,+!!y.a-+!!y.d,+!!y.e-+!!y.q+ +!!y[" "]).times(.05);if(!a.likeO()){const e=p.lookDir;p.pos=p.pos.plus(d.M4.forSys(e,d.V3.Y.cross(e).unit()).transformVector(a)),localStorage.setItem("viewState",JSON.stringify({pos:p.pos.toArray(),lookDir:p.lookDir.toArray()}))}e.matrixMode(e.PROJECTION),e.loadIdentity(),e.perspective(70,e.canvas.width/e.canvas.height,.1,1e3),e.lookAt(p.pos,p.pos.plus(p.lookDir),d.V3.Y),e.matrixMode(e.MODELVIEW),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.loadIdentity(),e.pushMatrix(),e.translate(.25,-.5,0),l.bind(0),c.bind(1),x.uniforms({a:o.a,colorPrimary:t.primary,colorSecondary:t.secondary,colorBg:t.background,scale:[o.xScale,o.yScale],offset:[o.xOffset,o.yOffset],bandCount:o.bandCount,highResTimeStamp:n,gradients:1}).draw(f),e.popMatrix(),e.pushMatrix(),e.translate(-.75,0,0),e.scale(.5),e.rotate(-90,1,0,0),x.uniforms({colorPrimary:t.primary,colorBg:t.background,pointSize:12,texture:0}).draw(u),v.uniforms({color:t.primary,pointSize:12}).draw(u,e.LINES),e.popMatrix()})),{redoTex:s})}(t,{background:f.iv(y.palette.background.default).gl(),primary:f.iv(y.palette.primary.main).gl(),secondary:f.iv(y.palette.secondary.main).gl()},p.current).redoTex}),[y.palette.background.default,y.palette.primary.main,y.palette.secondary.main]),(0,u.useEffect)((()=>{Object.assign(p.current,t)}),[t]),u.createElement(a.Z,{container:!0,style:{height:"99%"},__self:void 0,__source:{fileName:P,lineNumber:659}},u.createElement(a.Z,{item:!0,xs:12,md:9,__self:void 0,__source:{fileName:P,lineNumber:660}},u.createElement("div",{style:{height:"100%"},__self:void 0,__source:{fileName:P,lineNumber:661}},u.createElement("canvas",{ref:e,style:{width:"100%",height:"100%"},tabIndex:0,__self:void 0,__source:{fileName:P,lineNumber:662}}))),u.createElement(a.Z,{item:!0,xs:12,md:3,className:h.sidebar,__self:void 0,__source:{fileName:P,lineNumber:669}},u.createElement(o.Z,{__self:void 0,__source:{fileName:P,lineNumber:670}},u.createElement(r.Z,{__self:void 0,__source:{fileName:P,lineNumber:671}},"Test with various noise generation functions.")),u.createElement(I,{state:t,setStatePartial:s,prop:"xOffset",__self:void 0,__source:{fileName:P,lineNumber:675}}),u.createElement(I,{state:t,setStatePartial:s,prop:"yOffset",__self:void 0,__source:{fileName:P,lineNumber:676}}),u.createElement(I,{state:t,setStatePartial:s,prop:"xScale",__self:void 0,__source:{fileName:P,lineNumber:677}}),u.createElement(I,{state:t,setStatePartial:s,prop:"yScale",__self:void 0,__source:{fileName:P,lineNumber:678}}),u.createElement(I,{state:t,setStatePartial:s,prop:"bandCount",__self:void 0,__source:{fileName:P,lineNumber:679}}),u.createElement("div",{__self:void 0,__source:{fileName:P,lineNumber:680}},u.createElement(i.Z,{value:t.a,onChange:(e,t)=>s({a:t}),min:0,max:1,step:.01,__self:void 0,__source:{fileName:P,lineNumber:681}}))))}},1641:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var o=n(6897),r=n.n(o),a=n(508),i=n.n(a),l=n(9526);const c=e=>"#"+Object.entries(e).map((([e,t])=>encodeURIComponent(e)+"="+encodeURIComponent(t))).join("&"),s=e=>i()(e,(e=>"true"===e||"false"!==e&&("NaN"===e?NaN:"undefined"===e?void 0:"null"===e?null:isNaN(+e)?e:+e))),f=e=>i()(e,(e=>""+e));function u(e,{deserialize:t=s,serialize:n=f,wait:o=1e3}={}){const a=(0,l.useCallback)((()=>{const o="function"==typeof e?e():e,r=t(Object.assign(n(o),(a=document.location.hash)?a.substr(1).split("&").map((e=>{const[t,n]=e.split("=");return[decodeURIComponent(t),decodeURIComponent(n)]})).reduce(((e,[t,n])=>(e[t]=n,e)),{}):{}));var a;return history.pushState(void 0,document.title,c(n(r))),r}),[t,e,n]),[i,u]=(0,l.useState)(a),d=(0,l.useRef)();return d.current||(d.current=r()((function(e){history.pushState(void 0,document.title,c(n(e)))}),o)),d.current(i),(0,l.useEffect)((()=>{const e=()=>{u(a())};return window.addEventListener("hashchange",e),()=>{window.removeEventListener("hashchange",e)}}),[a]),[i,u]}},4003:e=>{"use strict";e.exports="#version 300 es\nprecision mediump float;\n#define GLSLIFY 1\n\nfloat banded(float bandCount, float t) {\n  return floor(t * float(bandCount)) / float(bandCount - 1.0);\n}\nfloat banded(int bandCount, float t) {\n  return banded(float(bandCount), t);\n}\n\nbool between(float min, float max, float value) {\n    return min <= value && value <= max;\n}\n\nuniform sampler2D gradients;\n\nfloat dotGridGradient(vec2 cell, vec2 pos) {\n    vec2 d = cell - pos;\n\n    vec2 gradient = texelFetch(gradients, ivec2(cell), 0).xy;\n    return dot(gradient, d);\n}\n\nfloat mixx(float a, float b, float t) {\n     return mix(a, b, smoothstep(0.0, 1.0, t));\n//    return mix(a, b, t);\n}\n\n// resulting range is [-0.68, 0.68]. Use unmix to normalize if necessary.\nfloat perlin2D(vec2 xy) {\n    float x0 = floor(xy.x);\n    float x1 = x0 + 1.0;\n    float y0 = floor(xy.y);\n    float y1 = y0 + 1.0;\n\n    // Interpolate between grid point gradients\n    float n00 = dotGridGradient(vec2(x0, y0), xy);\n    float n10 = dotGridGradient(vec2(x1, y0), xy);\n    float ny0 = mixx(n00, n10, xy.x - x0);\n\n    float n01 = dotGridGradient(vec2(x0, y1), xy);\n    float n11 = dotGridGradient(vec2(x1, y1), xy);\n    float ny1 = mixx(n01, n11, xy.x - x0);\n\n    return mixx(ny0, ny1, xy.y - y0);\n}\n\nfloat test(vec2 xy) {\n    vec2 closestGP = round(xy);\n    return float(distance(closestGP, xy) < 0.5)\n    * float(abs(dotGridGradient(closestGP, xy)) < 0.1);\n}\n\nfloat unmix(float a, float b, float value) {\n  return (value - a) / (b - a);\n}\n\nfloat remix(float fromA, float fromB, float toA, float toB, float value) {\n  return mix(toA, toB, unmix(fromA, fromB, value));\n}\n\nvec4 remix(float fromA, float fromB, vec4 toA, vec4 toB, float value) {\n  return mix(toA, toB, unmix(fromA, fromB, value));\n}\n\nuniform float highResTimeStamp;\n\nfloat waves(vec4 color, vec2 position, vec2 direction) {\n    return sin(dot(position, direction / pow(length(direction), 2.0)) + float(highResTimeStamp) / 200.0);\n}\n\nvec4 visualize(vec4 lowColor, vec4 highColor, float t) {\n  float isLow = float(t < 0.0);\n  float isHigh = float(t > 1.0);\n  float isMid = 1.0 - isLow - isHigh;\n  return lowColor * isLow + isMid * vec4(t, t, t, 1.0) + highColor * isHigh;\n}\n\nvec3 raToHex(vec2 xy) {\n    float hex_t = xy.y / 0.866;\n    float hex_s = xy.x - hex_t / 2.0;\n    return vec3(hex_s, hex_t, -(hex_s + hex_t));\n}\n\nvec2 hex2Ra(vec3 hex) {\n    float y = hex.t * 0.866;\n    float x = hex.s + hex.t / 2.0;\n    return vec2(x, y);\n}\n\nvec3 hexRound(vec3 hex) {\n    vec3 r = floor(hex + 0.5);\n    vec3 diff = abs(r - hex);\n\n    if (diff.x > diff.y && diff.x > diff.z) {\n        r.x = -(r.y + r.z);\n    } else if (diff.y > diff.z) {\n        r.y = -(r.x + r.z);\n    } else {\n        r.z = -(r.x + r.y);\n    }\n\n    return r;\n}\n\nfloat max3(float a, float b, float c) {\n  return max(a, max(b, c));\n}\nfloat max3(vec3 v) {\n  return max(v.x, max(v.y, v.z));\n}\n\nfloat hexSdf(vec3 hex) {\n    return max3(abs(hex.yzx + hex.zxy / 2.0));\n}\n\nuniform sampler2D texture;\nuniform vec4 colorPrimary;\nuniform vec4 colorSecondary;\nuniform vec4 colorBg;\nuniform float a;\nuniform int bandCount;\nin float n;\nin vec2 coord;\nout vec4 fragColor;\n\nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\nconst vec4 blue = vec4(0.0, 0.0, 1.0, 1.0);\nconst vec4 red = vec4(1.0, 0.0, 0.0, 1.0);\n\nvoid main2() {\n    float fraction = (n + 0.5) * 0.5;\n    vec4 waves1 = mix(colorBg, colorPrimary,\n    float(waves(colorPrimary, coord, vec2(0.2, 0.05)) >= 0.7));\n    vec4 waves2 = mix(colorSecondary, colorBg,\n    float(waves(colorPrimary, coord, vec2(0.002, 0.1)) >= 0.7));\n\n    float perl = perlin2D(coord);\n    float perl01 = unmix(-.68, .68, perl);\n    float band = banded(3.0, perl01);\n    float isTop = float(band == 1.0);\n    float isBottom = float(band == 0.0);\n    fragColor = waves2 * isTop\n        + waves2 * isBottom\n        + (1.0 - isTop - isBottom) * mix(colorBg, colorPrimary,\n                banded(float(bandCount), unmix(0.333, 0.666, perl01)));\n//        + vec4(0.0, 0.0, 0.0, 1.0) * float(between(0.0, 0.3, perl));\n    // fragColor = mix(colorBg, colorPrimary, banded(float(bandCount), perl01));\n    // fragColor = visualize(blue, red, perl01);\n\n//    fragColor = mix(colorBg, colorPrimary, unmix(-0.5, 0.5, perl));\n    //fragColor = texelFetch(gradients, ivec2(coord), 0);\n\n}\n\nvoid main() {\n    vec3 hex_pos = raToHex(coord);\n    vec3 hex_center = hexRound(hex_pos);\n    vec2 center = hex2Ra(hex_center);\n    float centerPerl = unmix(-.68, .68, perlin2D(center / 20.0));\n    float isTop = float(centerPerl > a + 0.05);\n    float isBottom = float(centerPerl < a - 0.05);\n    vec4 hexColor = isTop * colorPrimary\n        + isBottom * colorSecondary\n        + (1.0 - isTop - isBottom) * colorBg;\n\n    hexColor = mix(colorBg, colorPrimary, banded(bandCount, centerPerl));\n\n    vec3 hex_d = hex_pos - hex_center;\n    float d = hexSdf(hex_d);\n    float isHex = smoothstep(-0.42, -0.38, -d);\n    fragColor = mix(colorBg, hexColor, isHex);\n}"}}]);