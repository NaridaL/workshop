{"version":3,"file":"paperEnvelope-index.js","mappings":"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","sources":["/dev/workshop/./src/common/useHashState.ts?","/dev/workshop/./src/paperBox1/ExportButtons.tsx?","/dev/workshop/./src/paperBox1/Measure.tsx?","/dev/workshop/./src/paperBox1/PaperAutocomplete.tsx?","/dev/workshop/./src/paperBox1/PaperSize.tsx?","/dev/workshop/./src/paperBox1/SvgCommonDefs.tsx?","/dev/workshop/./src/paperBox1/common.tsx?","/dev/workshop/./src/paperEnvelope/svg.ts?","/dev/workshop/./src/paperEnvelope/EnvelopeSvg.tsx?","/dev/workshop/./src/paperEnvelope/index.tsx?"],"sourcesContent":["import debounce from \"lodash/debounce\"\nimport mapValues from \"lodash/mapValues\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport {\n  PAPER_SIZE_A4,\n\n  PaperSizeFromString,\n  PaperSizeToString,\n} from \"../paperBox1/PaperSize\"\n\nconst parseHash = (hash) => {\n  return !hash\n    ? {}\n    : hash\n        .substring(1)\n        .split(\"&\")\n        .map((part) => {\n          const [key, value] = part.split(\"=\")\n          return [decodeURIComponent(key), decodeURIComponent(value)]\n        })\n        .reduce((obj, [key, value]) => {\n          obj[key] = value\n          return obj\n        }, {} )\n}\nconst objectToHash = (o) => {\n  return (\n    \"#\" +\n    Object.entries(o)\n      .map(\n        ([key, value]) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(value),\n      )\n      .join(\"&\")\n  )\n}\n\nconst defaultDeserialize = (\n  x,\n) =>\n  mapValues(x, (v, key) => {\n    if (\"paperSize\" === key) {\n      try {\n        return PaperSizeFromString(v)\n      } catch (e) {\n        console.error(e)\n        return PAPER_SIZE_A4\n      }\n    } else if (\"true\" === v) {\n      return true\n    } else if (\"false\" === v) {\n      return false\n    } else if (\"NaN\" === v) {\n      return NaN\n    } else if (\"undefined\" === v) {\n      return undefined\n    } else if (\"null\" === v) {\n      return null\n    } else if (\"\" === v) {\n      return \"\"\n    } else if (!isNaN(+v)) {\n      return +v\n    } else {\n      return v\n    }\n  })\nconst defaultSerialize = (x) =>\n  mapValues(x, (v, key) =>\n    key === \"paperSize\" ? PaperSizeToString(v ) : \"\" + v,\n  )\n\nexport function useHashState(\n  initialState,\n  {\n    deserialize = defaultDeserialize,\n    serialize = defaultSerialize,\n    wait = 1000,\n  } = {},\n) {\n  const createInitialState = useCallback(() => {\n    const state =\n      \"function\" === typeof initialState\n        ? (initialState )()\n        : initialState\n    // hash overrides parameter\n    const mergedState = deserialize(\n      Object.assign(serialize(state), parseHash(document.location.hash)),\n    ) \n    history.pushState(\n      undefined,\n      document.title,\n      objectToHash(serialize(mergedState)),\n    )\n\n    return mergedState\n  }, [deserialize, initialState, serialize])\n  const [state, setState] = useState(createInitialState)\n  const updateHashRef = useRef()\n  if (!updateHashRef.current) {\n    updateHashRef.current = debounce(function (newState) {\n      history.pushState(\n        undefined,\n        document.title,\n        objectToHash(serialize(newState)),\n      )\n    }, wait)\n  }\n  useEffect(() => updateHashRef.current(state), [state])\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setState(createInitialState())\n    }\n    window.addEventListener(\"hashchange\", onHashChange)\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange)\n    }\n  }, [createInitialState])\n  return [state, setState]\n}\n","import Button from \"@mui/material/Button\"\nimport fileDownload from \"js-file-download\"\n\nimport * as React from \"react\"\nimport ReactDOMServer from \"react-dom/server\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function ExportButtons({\n  what,\n  baseFileName,\n}\n\n\n) {\n  const getPrintSVG = () =>\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(SvgPrintContext.Provider, { value: true,}, what),\n    ).replace(/\\s{2,}/g, \" \")\n  const asSVG = () => {\n    const svg = getPrintSVG()\n    fileDownload(svg, baseFileName + \".svg\")\n  }\n  const asTemplatePDF = async () => {\n    const { svgToPdf } = await import(\n      /* webpackChunkName: \"svgToPdf\" */ \"../paperBox1/svgToPdf\"\n    )\n\n    // add your content to the document here, as usual\n    const blob = await svgToPdf({\n      title: baseFileName,\n      author: \"Adrian Leonhard\",\n      svg: getPrintSVG(),\n    })\n\n    fileDownload(blob, baseFileName + \".pdf\")\n  }\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement(Button, { variant: \"contained\", onClick: asSVG,}, \"Download As SVG\"\n\n      )\n      , React.createElement(Button, { variant: \"contained\", onClick: asTemplatePDF,}, \"Template as PDF\"\n\n      )\n    )\n  )\n}\n","import * as React from \"react\"\nimport { createContext, useContext } from \"react\"\nimport { DEG, round10, V, } from \"ts3dutils\"\n\n\nexport const SvgPrintContext = createContext(false)\n\nexport function Guide({\n  children,\n  ...props\n}) {\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  return (\n    React.createElement('g', { className: \"guide\", ...props,}\n      , children\n    )\n  )\n}\nexport function Measure({\n  from,\n  to,\n  children,\n  hideRight = false,\n  offset = 0,\n}\n\n\n\n\n\n) {\n  Array.isArray(from) && (from = V(from))\n  Array.isArray(to) && (to = V(to))\n  const d = from.to(to)\n  const length = d.length()\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  if (length < 0.05) return null\n  children ||= \"\" + round10(length, -1)\n  const textBlank = 3 * children.length\n\n  return (\n    React.createElement('g', {\n      transform: ` translate(${from[0]}, ${from[1]}) rotate(${\n        d.angleXY() / DEG\n      }) translate(0, ${offset * 10})`,\n      className: \"measure\",}\n\n      , !hideRight && (\n        React.createElement('path', {\n          style: { fill: \"none\" },\n          d: `M0,0\n          l0,10\n          M4,3\n          l-4,2\n          l4,2`,}\n        )\n      )\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `\n        M0,5\n        H${(length - textBlank) / 2}\n        M${(length + textBlank) / 2},5\n        H${length}\n        M${length},0\n        l0,10\n        m-4,-7\n        l4,2\n        l-4,2`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: length / 2,\n        y: 5,}\n\n        , children\n      )\n    )\n  )\n}\n","import Autocomplete from \"@mui/material/Autocomplete\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { forwardRef, } from \"react\"\nimport { PAPER_SIZES, PaperSizeFromDimensions } from \"./PaperSize\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaperAutocomplete = forwardRef(\n  (\n    {\n      disableClearance = false,\n      onChange,\n      value,\n      label,\n    },\n    ref,\n  ) => {\n    let paperSize = null\n    if (value) {\n      const [a, b] = value\n      paperSize = PaperSizeFromDimensions(a, b)\n    }\n    return (\n      React.createElement(Autocomplete, {\n        ref: ref,\n        disableClearable: disableClearance,\n        size: \"small\",\n        freeSolo: true,\n        renderInput: (params) => (\n          React.createElement(TextField, { ...params, label: label, variant: \"outlined\",} )\n        ),\n        value: paperSize,\n        onChange: (e, newValue) => {\n          if (\"string\" === typeof newValue) {\n            if (newValue.trim() === \"\") {\n              if (!disableClearance) {\n                onChange(null)\n              }\n            } else {\n              const match = /(\\d+(?:\\.\\d+)?)\\D*?(\\d+(?:\\.\\d+)?)?\\D*$/.exec(\n                newValue,\n              )\n              if (match) {\n                const [, widthStr, heightStr] = match\n                onChange(\n                  PaperSizeFromDimensions(+widthStr, +(heightStr || widthStr)),\n                )\n              }\n            }\n          } else {\n            onChange(newValue)\n          }\n        },\n        getOptionLabel: (val) => {\n          const [width, height, name = \"custom\"] = val\n          return `${name} ${width}x${height}mm`\n        },\n        options: PAPER_SIZES,}\n      )\n    )\n  },\n) \n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import { MINUS } from \"ts3dutils\"\n\n \n// Always portrait orientation,\n\n// Always portrait orientation,\nexport const PAPER_SIZES_A = [\n  [841, 1189, \"A0\"],\n  [594, 841, \"A1\"],\n  [420, 594, \"A2\"],\n  [297, 420, \"A3\"],\n  [210, 297, \"A4\"],\n  [148, 210, \"A5\"],\n  [105, 148, \"A6\"],\n  [74, 105, \"A7\"],\n  [52, 74, \"A8\"],\n  [37, 52, \"A9\"],\n  [26, 37, \"A10\"],\n]\n\nexport function PaperSizeEquals([aw, ah], [bw, bh]) {\n  return aw === bw && bh === bw\n}\n\nexport const PAPER_SIZES_B = [\n  [1000, 1414, \"C0\"],\n  [707, 1000, \"C1\"],\n  [500, 707, \"C2\"],\n  [353, 500, \"C3\"],\n  [250, 353, \"C4\"],\n  [176, 250, \"C5\"],\n  [125, 176, \"C6\"],\n  [88, 125, \"C7\"],\n  [62, 88, \"C8\"],\n  [44, 62, \"C9\"],\n  [31, 44, \"C10\"],\n]\n\n// C size envelopes fit A size paper.\nexport const PAPER_SIZES_C = [\n  [917, 1297, \"C0\"],\n  [648, 917, \"C1\"],\n  [458, 648, \"C2\"],\n  [324, 458, \"C3\"],\n  [229, 324, \"C4\"],\n  [162, 229, \"C5\"],\n  [114, 162, \"C6\"],\n  [81, 114, \"C7\"],\n  [57, 81, \"C8\"],\n  [40, 57, \"C9\"],\n  [28, 40, \"C10\"],\n]\nexport const PAPER_SIZES = [\n  ...PAPER_SIZES_A,\n  [150, 150, \"Origami 15cm\"],\n  [100, 100, \"Origami 10cm\"],\n  [75, 75, \"Origami 7.5cm\"],\n  [215.9, 279.4, \"Letter\"],\n  [215.9, 355.6, \"Legal\"],\n]\n\nexport const ALL_PAPER_SIZES = [\n  ...PAPER_SIZES,\n  ...PAPER_SIZES_C,\n  ...PAPER_SIZES_B,\n]\n\nexport function PaperSizeFromString(str) {\n  const byName = PAPER_SIZES.find(([, , name]) => name === str)\n  if (byName) return byName\n  const [a, b] = str.split(\"x\")\n  return [+a, +b, \"Custom\"]\n}\nexport function PaperSizeFromDimensions(a, b) {\n  ;[a, b] = [a, b].sort(MINUS)\n  return _nullishCoalesce(PAPER_SIZES.find(([x, y]) => x === a && y === b), () => ( [a, b, \"Custom\"]))\n}\nexport function PaperSizeToString([a, b, name]) {\n  return name === \"Custom\" ? \"\" + a + \"x\" + b : name\n}\n\nexport const PAPER_SIZE_A4 = PAPER_SIZES_A[4]\n","import * as React from \"react\"\n\n\nexport const SvgCommonDefs = () => (\n  React.createElement(React.Fragment, null\n    , React.createElement('defs', null\n      , React.createElement('pattern', { id: \"glue\", patternUnits: \"userSpaceOnUse\", width: \"4\", height: \"4\",}\n        , React.createElement('path', {\n          d: \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\"\n\n              ,\n          style: { stroke: \"#eee\", strokeWidth: 1 },}\n        )\n      )\n    )\n    , React.createElement('style', null\n      , \".valley {stroke-dasharray: 1,1;} \"\n      , \".outline \"\n      , \".mountain {stroke-dasharray: 10,2,1,1,1,2;} \"\n    )\n  )\n)\n","import * as React from \"react\"\n\nimport { arrayRange, DEG, round10, TAU, V3 } from \"ts3dutils\"\n\nexport const INCH = 25.4\nexport const fmtdeg = (x) => \"\" + round10(x / DEG, -1) + \"°\"\n \n\nexport const radiusFromSideWidth = (sides, sideWidth) =>\n  sideWidth / 2 / Math.sin(TAU / sides / 2)\nexport const sideWithFromRadius = (sides, radius) =>\n  radius * 2 * Math.sin(TAU / sides / 2)\nexport const centerToSideFromSideWidth = (\n  sides,\n  sideWidth,\n) => sideWidth / 2 / Math.tan(TAU / sides / 2)\nexport const radiusFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide / Math.cos(TAU / sides / 2)\nexport const sideWidthFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide * 2 * Math.tan(TAU / sides / 2)\n\nexport function RegularPolygon({\n  sides,\n  radius,\n  startAngle = 0,\n  sideLength = undefined,\n  ...props\n}\n\n\n\n\n) {\n  if ((undefined !== sideLength) === (undefined !== radius)) {\n    throw new Error(\"must set either sideLength or radius\")\n  }\n  if (undefined === radius) {\n    radius = radiusFromSideWidth(sides, sideLength)\n  }\n  const { x, y } = V3.polar(radius, startAngle)\n  return (\n    React.createElement('path', {\n      d: dTpl`\n        M${x},${y}\n        ${arrayRange(0, sides).map(\n          (i) => dTpl`L${V3.polar(radius, startAngle + i * (TAU / sides))}`,\n        )}Z`,\n      ...props,}\n    )\n  )\n}\n\nexport function RotStep({\n  id,\n  children,\n  count,\n  stepDeg,\n}\n\n\n\n\n) {\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('g', { id: id,}, children)\n      , arrayRange(0, count - 1).map((i) => (\n        React.createElement('use', {\n          key: i,\n          xlinkHref: \"#\" + id,\n          transform: `rotate(${(i + 1) * stepDeg} 0 0)`,}\n        )\n      ))\n    )\n  )\n}\n\nexport function dTpl(\n  strings,\n  ...exps\n) {\n  const format = (x) =>\n    \"number\" === typeof x\n      ? \"\" + x\n      : \"string\" === typeof x\n      ? x\n      : Array.isArray(x)\n      ? x.map(format).join(\" \")\n      : x.x + \",\" + x.y\n  let result = strings[0]\n  for (let i = 0; i < exps.length; i++) {\n    result += format(exps[i])\n    result += strings[i + 1]\n  }\n  return result\n}\n\nexport const openInNewTab = (url) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\")\n  if (newWindow) newWindow.opener = null\n}\n","import { SVGPathData } from \"svg-pathdata\"\n\nexport const M = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const m = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: true,\n})\nexport const L = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const l = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: true,\n})\n\nexport const Z = () => ({ type: SVGPathData.CLOSE_PATH })\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import sortBy from \"lodash/sortBy\"\nimport * as React from \"react\"\nimport { useContext } from \"react\"\nimport { SVGPathData } from \"svg-pathdata\"\n\nimport { DEG, } from \"ts3dutils\"\nimport { INCH } from \"../paperBox1/common\"\nimport { Guide, Measure, SvgPrintContext } from \"../paperBox1/Measure\"\nimport {\n  PAPER_SIZE_A4,\n  PAPER_SIZES,\n  PAPER_SIZES_C,\n\n  PaperSizeFromDimensions,\n} from \"../paperBox1/PaperSize\"\nimport { SvgCommonDefs } from \"../paperBox1/SvgCommonDefs\"\nimport claspsSvgString from \"./clasps.inkscape.svg?raw\"\nimport * as path from \"./svg\"\n\nconst claspsSvg = new DOMParser().parseFromString(\n  claspsSvgString,\n  \"image/svg+xml\",\n).documentElement\n\nconst clasps = sortBy(\n  Array.from(claspsSvg.children)\n    .filter((c) => c.tagName === \"g\" && c.id !== \"guides\")\n    .map((c) => {\n      const children = Array.from(c.children)\n      const name = c.getAttribute(\"inkscape:label\")\n      function getPath(inkscapeLabel) {\n        const pathEl = children.find(\n          (c) =>\n            c.tagName === \"path\" &&\n            c.getAttribute(\"inkscape:label\") === inkscapeLabel,\n        )\n        if (_optionalChain([pathEl, 'optionalAccess', _ => _.getAttribute, 'call', _2 => _2(\"transform\")])) {\n          console.error(name, pathEl)\n          throw new Error()\n        }\n        return _nullishCoalesce(_optionalChain([pathEl, 'optionalAccess', _3 => _3.getAttribute, 'call', _4 => _4(\"d\")]), () => ( \"\"))\n      }\n\n      return {\n        name: name,\n        bottomFold: getPath(\"bottomFold\"),\n        bottomCut: getPath(\"bottomCut\"),\n        topCut: getPath(\"topCut\"),\n      }\n    }),\n  (c) => c.name,\n)\nexport const claspNames = clasps.map((c) => c.name)\nexport function EnvelopeDimensions(\n  width,\n  height,\n  overlap,\n  envelopeHeight,\n) {\n  const a = Math.min(width, height)\n  const d = overlap / 2\n  const r2 = d / (1 - Math.cos(45 * DEG))\n  const h = r2 * Math.sin(45 * DEG)\n  // s is the short perpendicular distance from the side to the indent.\n  const s = Math.sin(45 * DEG) * envelopeHeight + d\n  // t is the y-distance from the top to where the diagonal cut at the bottom right starts.\n  const t = Math.sin(45 * DEG) * 2 * envelopeHeight + d\n  const envelopeWidth = Math.SQRT2 * (a - overlap) - envelopeHeight\n  const foldedCenter = a / 2 - Math.SQRT1_2 * envelopeHeight\n  return { a, d, r2, h, s, t, envelopeWidth, foldedCenter }\n}\n\nexport const presetsForOverlap = (overlap) =>\n  [\n    PAPER_SIZES_C[4],\n    PAPER_SIZES_C[5],\n    PAPER_SIZES_C[6],\n    PAPER_SIZES_C[7],\n    PAPER_SIZES_C[8],\n  ].map(([envelopeHeight, envelopeWidth, name]) => {\n    const a = Math.round(\n      (envelopeWidth + envelopeHeight) / Math.SQRT2 + overlap,\n    )\n    return {\n      envelopeHeight: envelopeHeight,\n      overlap: overlap,\n      paperSize: PaperSizeFromDimensions(a, a),\n      name: `${name} ${envelopeHeight}x${envelopeWidth}`,\n    }\n  })\n\nexport function EnvelopeSvg({\n  paperSize,\n  envelopeHeight,\n  overlap,\n  cornerRadius,\n  style,\n  claspIds,\n}\n\n\n\n\n\n\n) {\n  const r = 10\n\n  const [width, height] = paperSize\n\n  const { a, d, r2, h, s, t, foldedCenter } = EnvelopeDimensions(\n    width,\n    height,\n    overlap,\n    envelopeHeight,\n  )\n  const clasp = clasps.filter(\n    (g) => claspIds.includes(\"*\") || claspIds.includes(g.name),\n  )\n\n  const cArc = (r, x, y) => ({\n    type: SVGPathData.ARC,\n    rX: r,\n    rY: r,\n    xRot: 0,\n    lArcFlag: 0,\n    sweepFlag: 1,\n    x: x,\n    y: y,\n    relative: false,\n  })\n\n  const cutOffBottom = false\n  const claspScale = a / 210\n\n  const outline = new SVGPathData([\n    path.M(0, r),\n    // top\n    cArc(r, r, 0),\n    path.L(a - s - h, 0),\n    cArc(r2, a - s, d),\n    cArc(r2, a - s + h, 0),\n    path.L(a - r, 0),\n    // right\n    cArc(r, a, r),\n    path.L(a, s - h),\n    cArc(r2, a - d, s),\n    cArc(r2, a, s + h),\n    // bottom right cut\n    ...(cutOffBottom\n      ? [\n          path.L(a, t - h),\n          cArc(r2, a - d, t),\n          path.L(t, a - d),\n          cArc(r2, t - h, a),\n        ]\n      : [path.L(a, a - r), cArc(r, a - r, a)]),\n    // bottom\n    path.L(s + h, a),\n    cArc(r2, s, a - d),\n    cArc(r2, s - h, a),\n    path.L(r, a),\n    // left\n    cArc(r, 0, a - r),\n    path.L(0, a - s + h),\n    cArc(r2, d, a - s),\n    cArc(r2, 0, a - s - h),\n    path.Z(),\n  ]).encode()\n\n  const valley = new SVGPathData([\n    path.M(a - s, d),\n    path.L(a - d, s),\n    path.L(s, a - d),\n    path.L(d, a - s),\n    { type: SVGPathData.CLOSE_PATH },\n  ]).encode()\n\n  const ref = _nullishCoalesce(PAPER_SIZES.find(([w, _h]) => w < envelopeHeight), () => ( PAPER_SIZE_A4))\n  const [refH, refW, refName] = ref\n  const print = useContext(SvgPrintContext)\n\n  return (\n    React.createElement('svg', {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      style: {\n        fill: \"none\",\n        stroke: \"#123456\",\n        strokeWidth: (2 * INCH) / 300,\n        ...style,\n      },\n      width: width + \"mm\",\n      height: height + \"mm\",\n      viewBox: `0 0 ${width} ${height}`,\n      className: \"adrian\",}\n\n      , React.createElement(SvgCommonDefs, null )\n      , React.createElement('g', null\n        , React.createElement('path', { d: outline, className: \"outline\",} )\n        , React.createElement('path', { d: valley, className: \"valley\", id: \"envelopeFold\",} )\n      )\n      , clasp.map((clasp) => (\n        React.createElement('g', { id: `clasp-${clasp.name}`,}\n          , React.createElement('path', {\n            d: clasp.bottomCut,\n            className: \"outline\",\n            transform: `translate(${a - foldedCenter} ${\n              a - foldedCenter\n            }) rotate(135) scale(${claspScale}) translate(-24 -24)`,}\n          )\n          , React.createElement('path', {\n            d: clasp.topCut,\n            className: \"outline\",\n            transform: `translate(${foldedCenter} ${foldedCenter}) rotate(135) scale(${claspScale}) translate(-24 -24)`,}\n          )\n\n          , React.createElement('path', {\n            d: clasp.bottomFold,\n            className: \"valley\",\n            transform: `translate(${a - foldedCenter} ${\n              a - foldedCenter\n            }) rotate(135) scale(${claspScale}) translate(-24 -24)`,\n            id: \"bottomFold\",}\n          )\n        )\n      ))\n\n      , React.createElement(Guide, {\n        transform: `translate(${a / 2} ${a / 2}) rotate(-45) translate(${\n          -refW / 2\n        } ${-refH / 2})`,}\n\n        , React.createElement('text', { y: refH, style: { fontSize: \"xx-small\" },}\n          , refName\n        )\n        , React.createElement('rect', { width: refW, height: refH, style: { fill: \"none\" },} )\n      )\n      , React.createElement(Measure, { from: [a - s, d], to: [a - d, s],} )\n      , React.createElement(Measure, { from: [d, a - s], to: [a - s, d],} )\n    )\n  )\n}\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import Card from \"@mui/material/Card\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport Divider from \"@mui/material/Divider\"\nimport FormControl from \"@mui/material/FormControl\"\nimport Grid from \"@mui/material/Grid\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Select from \"@mui/material/Select\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { useCallback, useMemo } from \"react\"\nimport { round10 } from \"ts3dutils\"\nimport { useHashState } from \"../common/useHashState\"\nimport { ExportButtons } from \"../paperBox1/ExportButtons\"\nimport { PaperAutocomplete } from \"../paperBox1/PaperAutocomplete\"\nimport { PAPER_SIZE_A4 } from \"../paperBox1/PaperSize\"\nimport {\n  claspNames,\n  EnvelopeDimensions,\n  EnvelopeSvg,\n  presetsForOverlap,\n} from \"./EnvelopeSvg\"\n\nexport default () => {\n  const [state, setState] = useHashState({\n    overlap: 10,\n    envelopeHeight: 118,\n    cornerRadius: 10,\n    paperSize: PAPER_SIZE_A4,\n    claspId: \"Hexagon\",\n  })\n  const setPartialState = useCallback(\n    (update) => setState((s) => ({ ...s, ...update })),\n    [setState],\n  )\n\n  const { envelopeWidth } = EnvelopeDimensions(\n    state.paperSize[0],\n    state.paperSize[1],\n    state.overlap,\n    state.envelopeHeight,\n  )\n\n  const presets = useMemo(\n    () => presetsForOverlap(state.overlap),\n    [state.overlap],\n  )\n\n  return (\n    React.createElement(Grid, { container: true, style: { width: \"100%\" },}\n      , React.createElement(Grid, { item: true, xs: 12, md: 10, padding: 1,}\n        , React.createElement(EnvelopeSvg, {\n          ...state,\n          claspIds: [state.claspId],\n          paperSize: state.paperSize,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n          },}\n        )\n      )\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          padding: 2,\n          alignItems: \"stretch\",\n          // \"& > *\": { margin: 1 },\n          gap: 2,\n        },}\n\n        , React.createElement(Card, null\n          , React.createElement(CardMedia, {\n            image: \"\",\n            title: \"Contemplative Reptile\" ,\n            sx: {\n              height: 0,\n              paddingTop: \"100%\", // 1:1\n            },}\n          )\n        )\n        , React.createElement(PaperAutocomplete, {\n          label: \"Paper Size\" ,\n          value: state.paperSize,\n          disableClearance: true,\n          onChange: (v) => setPartialState({ paperSize: v }),}\n        )\n        , React.createElement(TextField, {\n          label: \"Envelope Height\" ,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 25, step: 1 },\n          value: state.envelopeHeight,\n          onChange: (e) => setPartialState({ envelopeHeight: +e.target.value }),}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          disabled: true,\n          value: round10(envelopeWidth / state.envelopeHeight, -2),\n          label: \"Aspect Ratio\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.cornerRadius,\n          onChange: (e) => setPartialState({ cornerRadius: +e.target.value }),\n          label: \"Corner Radius\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.overlap,\n          onChange: (e) => setPartialState({ overlap: +e.target.value }),\n          label: \"Overlap\",}\n        )\n        , React.createElement(FormControl, { variant: \"outlined\", size: \"small\",}\n          , React.createElement(InputLabel, { id: \"clasp-label\",}, \"Clasp\")\n          , React.createElement(Select, {\n            value: state.claspId,\n            onChange: (e) => setPartialState({ claspId: e.target.value }),\n            labelId: \"clasp-label\",\n            label: \"Clasp\",}\n\n            , claspNames.map((n) => (\n              React.createElement(MenuItem, { value: n, key: n,}\n                , n\n              )\n            ))\n          )\n        ), \" \"\n        , React.createElement(FormControl, { variant: \"outlined\", size: \"small\",}\n          , React.createElement(InputLabel, { id: \"clasp-label\",}, \"Preset\")\n          , React.createElement(Select, {\n            value: \n              _nullishCoalesce(_optionalChain([presets, 'access', _ => _.find, 'call', _2 => _2(\n                (x) =>\n                  x.envelopeHeight === state.envelopeHeight &&\n                  x.paperSize[0] === state.paperSize[0],\n              ), 'optionalAccess', _3 => _3.name]), () => ( \"\"))\n            ,\n            onChange: (e) => {\n              const matchingPreset = presets.find(\n                (p) => p.name === e.target.value,\n              )\n              matchingPreset &&\n                setPartialState({\n                  envelopeHeight: matchingPreset.envelopeHeight,\n                  overlap: matchingPreset.overlap,\n                  paperSize: matchingPreset.paperSize,\n                })\n            },\n            labelId: \"clasp-label\",\n            label: \"Preset\",}\n\n            , presets.map((p) => (\n              React.createElement(MenuItem, { value: p.name, key: p.name,}\n                , p.name\n              )\n            ))\n          )\n        )\n        , React.createElement(Divider, null )\n        , React.createElement(ExportButtons, {\n          baseFileName: `envelope-${state.paperSize[0]}-${state.envelopeHeight}-${state.overlap}-${state.claspId}`,\n          what: \n            React.createElement(EnvelopeSvg, {\n              ...state,\n              paperSize: state.paperSize,\n              claspIds: [state.claspId],}\n            )\n          ,}\n        )\n      )\n    )\n  )\n}\n"],"names":["parseHash","hash","substring","split","map","part","key","value","decodeURIComponent","reduce","obj","objectToHash","o","Object","entries","encodeURIComponent","join","defaultDeserialize","x","v","NaN","isNaN","e","console","error","defaultSerialize","useHashState","initialState","deserialize","serialize","wait","createInitialState","useCallback","state","mergedState","assign","document","location","history","pushState","undefined","title","setState","useState","updateHashRef","useRef","current","newState","useEffect","onHashChange","window","addEventListener","removeEventListener","ExportButtons","what","baseFileName","getPrintSVG","Provider","replace","variant","onClick","svg","async","svgToPdf","blob","author","SvgPrintContext","createContext","Guide","children","props","useContext","className","Measure","from","to","hideRight","offset","Array","isArray","V","d","length","textBlank","transform","angleXY","style","fill","stroke","fontSize","dominantBaseline","textAnchor","y","PaperAutocomplete","forwardRef","disableClearance","onChange","label","ref","paperSize","a","b","disableClearable","size","freeSolo","renderInput","params","newValue","trim","match","exec","widthStr","heightStr","getOptionLabel","val","width","height","name","options","PAPER_SIZES_A","PAPER_SIZES_C","PAPER_SIZES","PaperSizeFromString","str","byName","find","PaperSizeFromDimensions","sort","lhs","rhsFn","PaperSizeToString","PAPER_SIZE_A4","SvgCommonDefs","id","patternUnits","strokeWidth","INCH","fmtdeg","radiusFromSideWidth","sides","sideWidth","Math","sin","sideWithFromRadius","radius","centerToSideFromSideWidth","tan","radiusFromCenterToSide","centerToSide","cos","sideWidthFromCenterToSide","RegularPolygon","startAngle","sideLength","Error","V3","polar","dTpl","i","RotStep","count","stepDeg","xlinkHref","strings","exps","format","result","openInNewTab","url","newWindow","open","opener","M","type","MOVE_TO","relative","L","LINE_TO","_nullishCoalesce","_optionalChain","ops","lastAccessLHS","op","fn","args","call","claspsSvg","DOMParser","parseFromString","documentElement","clasps","filter","c","tagName","getAttribute","getPath","inkscapeLabel","pathEl","_","_2","_3","_4","bottomFold","bottomCut","topCut","claspNames","EnvelopeDimensions","overlap","envelopeHeight","min","r2","h","s","t","envelopeWidth","SQRT2","foldedCenter","SQRT1_2","EnvelopeSvg","cornerRadius","claspIds","r","clasp","g","includes","cArc","ARC","rX","rY","xRot","lArcFlag","sweepFlag","claspScale","outline","CLOSE_PATH","encode","valley","w","_h","refH","refW","refName","xmlns","viewBox","claspId","setPartialState","update","presets","useMemo","presetsForOverlap","round","PaperSize","Grid","container","item","xs","md","padding","sx","display","flexDirection","alignItems","gap","Card","CardMedia","image","paddingTop","TextField","inputProps","step","target","disabled","FormControl","InputLabel","Select","labelId","n","MenuItem","matchingPreset","p","Divider"],"sourceRoot":""}