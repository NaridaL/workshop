{"version":3,"file":"paperEnvelope-index.js","mappings":"gLAUA,MAAMA,EAAaC,GACTA,EAEJA,EACGC,UAAU,GACVC,MAAM,KACNC,KAAKC,IACJ,MAAOC,EAAKC,GAASF,EAAKF,MAAM,KAChC,MAAO,CAACK,mBAAmBF,GAAME,mBAAmBD,GAAM,IAE3DE,QACC,CAACC,GAAMJ,EAAKC,MACVG,EAAIJ,GAAOC,EACJG,IAET,CAAC,GAbL,CAAC,EAgBDC,EAAgBC,GAElB,IACAC,OAAOC,QAAQF,GACZR,KACC,EAAEE,EAAKC,KACLQ,mBAAmBT,GAAO,IAAMS,mBAAmBR,KAEtDS,KAAK,KAINC,EACJC,GAEA,IAAUA,GAAG,CAACC,EAAGb,KACf,GAAI,cAAgBA,EAOb,MAAI,SAAWa,GAEX,UAAYA,IAEZ,QAAUA,EACZC,IACE,cAAgBD,OACzB,EACS,SAAWA,EACb,KACE,KAAOA,EACT,GACGE,OAAOF,GAGVA,GAFCA,GAnBR,IACE,OAAO,QAAoBA,EAC7B,CAAE,MAAOG,GAEP,OADAC,QAAQC,MAAMF,GACP,IACT,CAiBF,IAEEG,EAAoBP,GACxB,IAAUA,GAAG,CAACC,EAAGb,IACP,cAARA,GAAsB,QAAkBa,GAAM,GAAKA,IAGhD,SAASO,EACdC,GACA,YACEC,EAAcX,EAAkB,UAChCY,EAAYJ,EAAgB,KAC5BK,EAAO,KACL,CAAC,GAEL,MAAMC,GAAqB,IAAAC,cAAY,KACrC,MAAMC,EACJ,mBAAsBN,EAClB,IACAA,EAEAO,EAAcN,EAClBf,OAAOsB,OAAON,EAAUI,GAAQjC,EAAUoC,SAASC,SAASpC,QAS9D,OAPAsB,QAAQe,IAAI,gBACZC,QAAQC,kBACNC,EACAL,SAASM,MACT/B,EAAakB,EAAUK,KAGlBA,IACN,CAACN,EAAaD,EAAcE,KACxBI,EAAOU,IAAY,IAAAC,UAASb,GAC7Bc,GAAgB,IAAAC,UAsBtB,OArBA,IAAAC,YAAU,IAtGX,SAAwBC,GAAO,IAAIC,EAA+B1C,EAAQyC,EAAI,GAAQE,EAAI,EAAG,KAAOA,EAAIF,EAAIG,QAAQ,CAAE,MAAMC,EAAKJ,EAAIE,GAAUG,EAAKL,EAAIE,EAAI,GAAY,GAARA,GAAK,GAAe,mBAAPE,GAAkC,iBAAPA,IAAmC,MAAT7C,EAAiB,OAA+B,WAAP6C,GAA0B,mBAAPA,GAA2BH,EAAgB1C,EAAOA,EAAQ8C,EAAG9C,IAA0B,SAAP6C,GAAwB,iBAAPA,IAAyB7C,EAAQ8C,GAAG,IAAIC,IAAS/C,EAAMgD,KAAKN,KAAkBK,KAAQL,OAAgBR,EAAa,CAAE,OAAOlC,CAAO,CAsGjfiD,CAAe,CAACX,EAAe,SAAUY,GAAKA,EAAEC,QAAS,eAAgBC,GAAMA,EAAG1B,MAAU,CAACA,IACxGY,EAAca,UACjBnC,QAAQe,IAAI,aACZO,EAAca,QAAU,KAAS,SAAUE,GACzCrB,QAAQsB,eACNpB,EACAL,SAASM,MACT/B,EAAakB,EAAU+B,IAE3B,GAAG9B,KAGL,IAAAiB,YAAU,KACR,MAAMe,EAAe,KACnBnB,EAASZ,IAAoB,EAG/B,OADAgC,OAAOC,iBAAiB,aAAcF,GAC/B,KACLC,OAAOE,oBAAoB,aAAcH,EAAY,CACvD,GACC,CAAC/B,IACG,CAACE,EAAOU,EACjB,C,iGCrHO,SAASuB,GAAc,KAC5BC,EAAI,aACJC,IAKA,MAAMC,EAAc,IAClB,uBACE,gBAAoB,KAAgBC,SAAU,CAAE/D,OAAO,GAAQ4D,IAC/DI,QAAQ,UAAW,KAmBvB,OACE,gBAAoB,WAAgB,KAChC,gBAAoB,IAAQ,CAAEC,QAAS,YAAaC,QApB5C,KACZ,MAAMC,EAAML,IACZ,IAAaK,EAAKN,EAAe,OAAM,GAkBmC,mBAGtE,gBAAoB,IAAQ,CAAEI,QAAS,YAAaC,QAnBpCE,UACpB,MAAM,SAAEC,SAAmB,sDAKrBC,QAAaD,EAAS,CAC1BlC,MAAO0B,EACPU,OAAQ,kBACRJ,IAAKL,MAGP,IAAaQ,EAAMT,EAAe,OAAM,GAO0C,mBAKtF,C,6ECzCO,MAAMW,GAAkB,IAAAC,gBAAc,GAEtC,SAASC,GAAM,SACpBC,KACGC,IAGH,OADmB,IAAAC,YAAWL,GACP,KAErB,gBAAoB,IAAK,CAAEM,UAAW,WAAYF,GAC9CD,EAGR,CACO,SAASI,GAAQ,KACtBC,EAAI,GACJC,EAAE,SACFN,EAAQ,EACRO,EAAC,UACDC,GAAY,EAAK,OACjBC,EAAS,IASTC,MAAMC,QAAQN,KAAUA,GAAO,IAAAO,GAAEP,IACjCK,MAAMC,QAAQL,KAAQA,GAAK,IAAAM,GAAEN,IAC7B,MAAMO,EAAIR,EAAKC,GAAGA,GACZrC,EAAS4C,EAAE5C,SAEjB,IADmB,IAAAiC,YAAWL,GACd,OAAO,KACvB,GAAI5B,EAAS,IAAM,OAAO,KAC1B+B,KAAcO,EAAI,IAAM,KAAM,QAAQtC,GAAS,GAC/C,MAAM6C,EAAY,EAAId,EAAS/B,OAE/B,OACE,gBAAoB,IAAK,CACvB8C,UAAW,cAAcV,EAAK,OAAOA,EAAK,cACxCQ,EAAEG,UAAY,sBACW,GAATP,KAClBN,UAAW,YAERK,GACD,gBAAoB,OAAQ,CAC1BS,MAAO,CAAEC,KAAM,QACfL,EAAG,2EAOL,gBAAoB,OAAQ,CAC5BI,MAAO,CAAEC,KAAM,QACfL,EAAG,6BAEC5C,EAAS6C,GAAa,gBACtB7C,EAAS6C,GAAa,iBACvB7C,eACAA,oEAMH,gBAAoB,OAAQ,CAC5BgD,MAAO,CACLE,OAAQ,OACRC,SAAU,EACVC,iBAAkB,SAClBC,WAAY,UAEdtF,EAAGiC,EAAS,EACZsD,EAAG,GAEDvB,GAIV,C,6ECnEO,MAAMwB,GAAoB,IAAAC,aAC/B,EAEIC,oBAAmB,EACnBC,WACAtG,QACAuG,SAEFC,KAEA,IAAIC,EAAY,KAChB,GAAIzG,EAAO,CACT,MAAO0G,EAAGC,GAAK3G,EACfyG,GAAY,QAAwBC,EAAGC,EACzC,CACA,OACE,gBAAoB,IAAc,CAChCH,IAAKA,EACLI,iBAAkBP,EAClBQ,KAAM,QACNC,UAAU,EACVC,YAAcC,GACZ,gBAAoB,IAAW,IAAKA,EAAQT,MAAOA,EAAOtC,QAAS,aAErEjE,MAAOyG,EACPH,SAAU,CAACvF,EAAGkG,KACZ,GAAI,iBAAoBA,EACtB,GAAwB,KAApBA,EAASC,OACNb,GACHC,EAAS,UAEN,CACL,MAAMa,EAAQ,0CAA0CC,KACtDH,GAEF,GAAIE,EAAO,CACT,MAAO,CAAEE,EAAUC,GAAaH,EAChCb,GACE,SAAyBe,IAAYC,GAAaD,IAEtD,CACF,MAEAf,EAASW,EACX,EAEFM,eAAiBC,IACf,MAAOC,EAAOC,EAAQC,EAAO,UAAYH,EACzC,MAAO,GAAGG,KAAQF,KAASC,KAAM,EAEnCE,QAAS,MAEb,G,8FCnEG,MAAMC,EAAgB,CAC3B,CAAC,IAAK,KAAM,MACZ,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,GAAI,IAAK,MACV,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,QAsBEC,EAAgB,CAC3B,CAAC,IAAK,KAAM,MACZ,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,GAAI,IAAK,MACV,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,QAEEC,EAAc,IACtBF,EACH,CAAC,IAAK,IAAK,gBACX,CAAC,IAAK,IAAK,gBACX,CAAC,GAAI,GAAI,iBACT,CAAC,MAAO,MAAO,UACf,CAAC,MAAO,MAAO,UASV,SAASG,EAAoBC,GAClC,MAAMC,EAASH,EAAYI,MAAK,EAAE,CAAE,CAAER,KAAUA,IAASM,IACzD,GAAIC,EAAQ,OAAOA,EACnB,MAAOxB,EAAGC,GAAKsB,EAAIrI,MAAM,KACzB,MAAO,EAAE8G,GAAIC,EAAG,SAClB,CACO,SAASyB,EAAwB1B,EAAGC,GAEzC,OADED,EAAGC,GAAK,CAACD,EAAGC,GAAG0B,KAAK,MA1E4B,OAAzBC,EA2EDP,EAAYI,MAAK,EAAExH,EAAGuF,KAAOvF,IAAM+F,GAAKR,IAAMS,KA3EL2B,EA2ES,KAAM,CAAG5B,EAAGC,EAAG,UA3EH4B,GAAvF,IAA0BD,CA4E3B,CACO,SAASE,GAAmB9B,EAAGC,EAAGgB,IACvC,MAAgB,WAATA,EAAyBjB,EAAI,IAAMC,EAAIgB,CAChD,CAEO,MAAMc,EAAgBZ,EAAc,E,sHCzEpC,MAAMa,EAAgB,KAC3B,MAAMC,GAAQ,SACRC,GAAQ,IAAA/D,YAAW,MACnBgE,GAAe,IAAAC,UACnB,IAAM,yBACYH,EAAMI,QAAQC,KAAKC,6CACT,IAAI,6CACD,IAAO,2CACT,IAAK,4CACJ,IAAM,2CACP,IAAK,uDAE1BN,EAAMI,QAAQE,QAAQC,kBACxBP,EAAMI,QAAQE,QAAQC,2DAGpBP,EAAMI,QAAQI,UAAUD,kBAC1BP,EAAMI,QAAQI,UAAUD,8FAO9B,CAACP,IAEH,OACE,gBAAoB,WAAgB,KAChC,gBAAoB,OAAQ,KAC1B,gBAAoB,UAAW,CAAES,GAAI,OAAQC,aAAc,iBAAkB5B,MAAO,IAAKC,OAAQ,KAC/F,gBAAoB,OAAQ,CAC5BlC,EAAG,oCAGHI,MAAO,CAAEE,OAAQ6C,EAAMI,QAAQO,QAASC,YAAa,OAIzD,gBAAoB,QAAS,KAAM,8QAUlCX,GAAS,gBAAoB,QAAS,KAAMC,GAEnD,C,oJC5CK,SAASW,EAAE7I,GAChB,MAAO,CAAE8I,KAAM,KAAYC,cAAeC,UAAU,EAAOhJ,EAAGA,EAChE,CAEO,SAASiJ,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLC,SAAUH,EACVI,GAAIP,EACJQ,GAAIP,EACJH,UAAU,EACVM,UAAWA,EACXR,KAAM,KAAYa,IAClB3J,EAAGuJ,EAAEvJ,EACL4J,KAAM,EACNrE,EAAGgE,EAAEhE,EAET,CAEO,MAAMsE,EAAI,CACfC,EACAC,EACAC,EACAC,EACAjK,EACAuF,KACG,CACHuD,KAAM,KAAYoB,SAClBJ,KACAC,KACAC,KACAC,KACAjK,IACAuF,IACAyD,UAAU,IAGCpE,EAAKW,IAAM,CACtBuD,KAAM,KAAYqB,aAClB5E,IACAyD,UAAU,IAcL,SAASoB,EAAEC,EAAIC,GACpB,MAAOtK,EAAGuF,QAAYhE,IAAP+I,EAAmB,CAAC,EAAMtK,EAAG,EAAMuF,GAAK,CAAC8E,EAAIC,GAC5D,MAAO,CAAExB,KAAM,KAAYyB,QAASvK,IAAGuF,IAAGyD,UAAU,EACtD,CAWO,SAASwB,EAAEH,EAAIC,GACpB,MAAOtK,EAAGuF,QAAYhE,IAAP+I,EAAmB,CAAC,EAAMtK,EAAG,EAAMuF,GAAK,CAAC8E,EAAIC,GAC5D,MAAO,CAAExB,KAAM,KAAY2B,QAASzK,IAAGuF,IAAGyD,UAAU,EACtD,CAEO,MAAM0B,EAAI,CAAC1K,EAAGuF,KAAM,CACzBuD,KAAM,KAAY2B,QAClBzK,IACAuF,IACAyD,UAAU,IAGC2B,EAAI,KAAM,CAAG7B,KAAM,KAAY8B,aAE/BC,EAAS,IAAIC,KACxB,MAAMC,EAAU,GAChB,IAAIC,EAAQ,EACVC,EAAQ,EACV,IAAK,MAAMC,KAAKJ,EAAM,CACpB,GAAI,mBAAsBI,EACxB,IAAK,MAAMC,KAAMD,EAAEF,EAAOC,GACxBF,EAAQK,KAAKD,QAGfJ,EAAQK,KAAKF,GAEf,MAAMG,EAAQ,IAAKN,GACf,MAAOM,IAAOL,EAAQK,EAAMrL,GAC5B,MAAOqL,IAAOJ,EAAQI,EAAM9F,EAClC,CACA,OAAO,IAAI,KAAYwF,GAASO,MAAM,GAAGT,QAAO,EAI3C,SAASU,EAAOC,EAAKxL,EAAGuF,GAC7B,MAAO,CAACkG,EAAOC,KACb,MAAMC,GAAO,IAAA/G,GAAG6G,EAAOC,GACjBE,GAAK,IAAAhH,GAAG5E,EAAGuF,GACXsG,EAAOF,EAAKrH,GAAGsH,GAAIE,SAASN,GAC5BO,GAAK,IAAAnH,GAAGgH,EAAG5L,EAAI6L,EAAKtG,EAAGqG,EAAGrG,EAAIsG,EAAK7L,GACzC,MAAO,CAACwK,EAAEoB,EAAGI,MAAMH,IAAQ5C,EAAEuC,EAAKA,EAAK,EAAG,EAAG,EAAGO,GAAG,CAEvD,C,gQClIC,SAASE,EAAiBtE,EAAKC,GAAS,OAAW,MAAPD,EAAsBA,EAAqBC,GAAW,CAAE,SAAStF,EAAeR,GAAO,IAAIC,EAA+B1C,EAAQyC,EAAI,GAAQE,EAAI,EAAG,KAAOA,EAAIF,EAAIG,QAAQ,CAAE,MAAMC,EAAKJ,EAAIE,GAAUG,EAAKL,EAAIE,EAAI,GAAY,GAARA,GAAK,GAAe,mBAAPE,GAAkC,iBAAPA,IAAmC,MAAT7C,EAAiB,OAA+B,WAAP6C,GAA0B,mBAAPA,GAA2BH,EAAgB1C,EAAOA,EAAQ8C,EAAG9C,IAA0B,SAAP6C,GAAwB,iBAAPA,IAAyB7C,EAAQ8C,GAAG,IAAIC,IAAS/C,EAAMgD,KAAKN,KAAkBK,KAAQL,OAAgBR,EAAa,CAAE,OAAOlC,CAAO,CAmBvmB,MAAM6M,GAAY,IAAIC,WAAYC,gB,qvgBAEhC,iBACAC,gBAEIC,EAAS,IACb5H,MAAML,KAAK6H,EAAUlI,UAClBuI,QAAQrB,GAAoB,MAAdA,EAAEsB,SAA4B,WAATtB,EAAEzC,KACrCvJ,KAAKgM,IACJ,MAAMlH,EAAWU,MAAML,KAAK6G,EAAElH,UACxBgD,EAAOkE,EAAEuB,aAAa,kBAC5B,SAASC,EAAQC,GACf,MAAMC,EAAS5I,EAASwD,MACrB0D,GACe,SAAdA,EAAEsB,SACFtB,EAAEuB,aAAa,oBAAsBE,IAEzC,GAAIrK,EAAe,CAACsK,EAAQ,iBAAkBrK,GAAKA,EAAEkK,aAAc,OAAQhK,GAAMA,EAAG,eAElF,MADApC,QAAQC,MAAM0G,EAAM4F,GACd,IAAIC,MAAM,mBAAmBF,QAAoB3F,MAEzD,OAAOiF,EAAiB3J,EAAe,CAACsK,EAAQ,iBAAkBE,GAAMA,EAAGL,aAAc,OAAQM,GAAMA,EAAG,QAAQ,IAAM,IAC1H,CAEA,MAAO,CACL/F,KAAMA,EACNgG,WAAYN,EAAQ,cACpBO,UAAWP,EAAQ,aACnBQ,OAAQR,EAAQ,UAClB,KAEHxB,GAAMA,EAAElE,OAEEmG,EAAab,EAAOpN,KAAKgM,GAAMA,EAAElE,OACvC,SAASoG,EACdtG,EACAC,EACAsG,EACAC,GAEA,MAAMvH,EAAIwH,KAAKC,IAAI1G,EAAOC,GACpBlC,EAAIwI,EAAU,EACdI,EAAK5I,GAAK,EAAI0I,KAAKG,IAAI,GAAK,OAQlC,MAAO,CAAE3H,EAAGlB,IAAG4I,KAAIE,EAPTF,EAAKF,KAAKK,IAAI,GAAK,MAOPC,EALZN,KAAKK,IAAI,GAAK,MAAON,EAAiBzI,EAKvBiJ,EAHM,EAArBP,KAAKK,IAAI,GAAK,MAAWN,EAAiBzI,EAGxBkJ,cAFNR,KAAKS,OAASjI,EAAIsH,GAAWC,EAERW,aADtBlI,EAAI,EAAIwH,KAAKW,QAAUZ,EAE9C,CAqBO,SAASa,GAAY,UAC1BrI,EAAS,eACTwH,EAAc,QACdD,EAAO,aACPe,EAAY,MACZnJ,EAAK,SACLoJ,IASA,MAAMC,EAAI,IAEHxH,EAAOC,GAAUjB,GAElB,EAAEC,EAAC,EAAElB,EAAC,GAAE4I,EAAE,EAAEE,EAAC,EAAEE,EAAC,EAAEC,EAAC,aAAEG,GAAiBb,EAC1CtG,EACAC,EACAsG,EACAC,GAEIiB,EAAQjC,EAAOC,QAClBiC,GAAMH,EAASI,SAAS,MAAQJ,EAASI,SAASD,EAAExH,QAGjD0H,EAAO,CAACJ,EAAGtO,EAAGuF,KAAM,CACxBuD,KAAM,KAAYa,IAClBF,GAAI6E,EACJ5E,GAAI4E,EACJ1E,KAAM,EACNJ,SAAU,EACVF,UAAW,EACXtJ,EAAGA,EACHuF,EAAGA,EACHyD,UAAU,IAIN2F,EAAa5I,EAAI,IAEjB6I,EAAU,IAAI,KAAY,CAC9B,IAAO,EAAGN,GAEVI,EAAKJ,EAAGA,EAAG,GACX,IAAOvI,EAAI8H,EAAIF,EAAG,GAClBe,EAAKjB,EAAI1H,EAAI8H,EAAGhJ,GAChB6J,EAAKjB,EAAI1H,EAAI8H,EAAIF,EAAG,GACpB,IAAO5H,EAAIuI,EAAG,GAEdI,EAAKJ,EAAGvI,EAAGuI,GACX,IAAOvI,EAAG8H,EAAIF,GACde,EAAKjB,EAAI1H,EAAIlB,EAAGgJ,GAChBa,EAAKjB,EAAI1H,EAAG8H,EAAIF,GASX,IAAO5H,EAAGA,EAAIuI,GAAII,EAAKJ,EAAGvI,EAAIuI,EAAGvI,GAEtC,IAAO8H,EAAIF,EAAG5H,GACd2I,EAAKjB,EAAII,EAAG9H,EAAIlB,GAChB6J,EAAKjB,EAAII,EAAIF,EAAG5H,GAChB,IAAOuI,EAAGvI,GAEV2I,EAAKJ,EAAG,EAAGvI,EAAIuI,GACf,IAAO,EAAGvI,EAAI8H,EAAIF,GAClBe,EAAKjB,EAAI5I,EAAGkB,EAAI8H,GAChBa,EAAKjB,EAAI,EAAG1H,EAAI8H,EAAIF,GACpB,QACC9C,SAEGgE,EAAO,IAAI,KAAY,CAC3B,IAAO9I,EAAI,EAAIlB,EAAGgJ,EAAIF,GACtBe,EAAKjB,EAAI1H,EAAIlB,EAAGgJ,GAChBa,EAAKjB,EAAI1H,EAAG8H,EAAIF,GAChB,IAAO5H,EAAG,EAAI8H,GACda,EAAKjB,EAAI1H,EAAI,EAAIlB,EAAG,EAAIgJ,EAAIF,GAC5B,QACC9C,SAEGiE,EAAS,IAAI,KAAY,CAC7B,IAAO/I,EAAI8H,EAAGhJ,GACd,IAAOkB,EAAIlB,EAAGgJ,GACd,IAAOA,EAAG9H,EAAIlB,GACd,IAAOA,EAAGkB,EAAI8H,GACd,QACChD,SAEGhF,EAAMoG,EAAiB,KAAYzE,MAAK,EAAEuH,EAAGC,KAAQD,EAAIzB,KAAiB,IAAQ,EAAa,MAC9F2B,EAAMC,EAAMC,GAAWtJ,EAG9B,OAFc,IAAA3B,YAAW,MAGvB,gBAAoB,MAAO,CACzBkL,MAAO,6BACPnK,MAAOA,EACP6B,MAAOA,EAAQ,KACfC,OAAQA,EAAS,KACjBsI,QAAS,OAAOvI,KAASC,IACzB5C,UAAW,UAET,gBAAoB4D,EAAA,EAAe,MACnC,gBAAoB,IAAK,KACvB,gBAAoB,OAAQ,CAAElD,EAAG+J,EAASzK,UAAW,QACrD,gBAAoB,OAAQ,CAAEU,EAAGiK,EAAQ3K,UAAW,SAAUsE,GAAI,kBAEpE8F,EAAMrP,KAAKqP,GACX,gBAAoB,IAAK,CAAE9F,GAAI,SAAS8F,EAAMvH,QAC1C,gBAAoB,OAAQ,CAC5BnC,EAAG0J,EAAMtB,UACT9I,UAAW,MACXY,UAAW,aAAagB,EAAIkI,KAC1BlI,EAAIkI,wBACiBU,0BAEvB,gBAAoB,OAAQ,CAC5B9J,EAAG0J,EAAMrB,OACT/I,UAAW,MACXY,UAAW,aAAakJ,KAAgBA,wBAAmCU,0BAG3E,gBAAoB,OAAQ,CAC5B9J,EAAG0J,EAAMvB,WACT7I,UAAW,SACXY,UAAW,aAAagB,EAAIkI,KAC1BlI,EAAIkI,wBACiBU,wBACvBlG,GAAI,kBAKR,gBAAoB,KAAO,CAC3B1D,UAAW,aAAagB,EAAI,KAAKA,EAAI,6BAClCmJ,EAAO,MACLD,EAAO,MAEV,gBAAoB,OAAQ,CAAE1J,EAAG0J,EAAMhK,MAAO,CAAEG,SAAU,aACxD+J,GAEF,gBAAoB,OAAQ,CAAErI,MAAOoI,EAAMnI,OAAQkI,EAAMhK,MAAO,CAAEC,KAAM,WAE1E,gBAAoB,KAAO,KACzB,gBAAoB,OAAQ,CAAEL,EAAGgK,EAAM1K,UAAW,SAClD,gBAAoB,OAAQ,CAAEU,EAAGgK,EAAM1K,UAAW,OAAQY,UAAW,yBAEvE,gBAAoBX,EAAA,GAAS,CAAEC,KAAM,CAAC0B,EAAI8H,EAAGhJ,GAAIP,GAAI,CAACyB,EAAIlB,EAAGgJ,KAC7D,gBAAoBzJ,EAAA,GAAS,CAAEC,KAAM,CAACQ,EAAGkB,EAAI8H,GAAIvJ,GAAI,CAACyB,EAAI8H,EAAGhJ,KAGrE,CCzPqG,SAAS,EAAe/C,GAAO,IAAIC,EAA+B1C,EAAQyC,EAAI,GAAQE,EAAI,EAAG,KAAOA,EAAIF,EAAIG,QAAQ,CAAE,MAAMC,EAAKJ,EAAIE,GAAUG,EAAKL,EAAIE,EAAI,GAAY,GAARA,GAAK,GAAe,mBAAPE,GAAkC,iBAAPA,IAAmC,MAAT7C,EAAiB,OAA+B,WAAP6C,GAA0B,mBAAPA,GAA2BH,EAAgB1C,EAAOA,EAAQ8C,EAAG9C,IAA0B,SAAP6C,GAAwB,iBAAPA,IAAyB7C,EAAQ8C,GAAG,IAAIC,IAAS/C,EAAMgD,KAAKN,KAAkBK,KAAQL,OAAgBR,EAAa,CAAE,OAAOlC,CAAO,CAuBvmB,aACE,MAAO0B,EAAOU,IAAY,EAAAjB,EAAA,GAAa,CACrC6M,QAAS,GACTC,eAAgB,IAChBc,aAAc,GACdtI,UAAW,KACXwJ,QAAS,YAELC,GAAkB,IAAAzO,cACrB0O,GAAW/N,GAAUoM,IAAM,IAAMA,KAAM2B,OACxC,CAAC/N,KAGG,cAAEsM,GAAkBX,EACxBrM,EAAM+E,UAAU,GAChB/E,EAAM+E,UAAU,GAChB/E,EAAMsM,QACNtM,EAAMuM,gBAGFmC,GAAU,IAAAtH,UACd,KAAMuH,OD4BwBrC,EC5BNtM,EAAMsM,QD6BhC,CACE,KAAc,GACd,KAAc,GACd,KAAc,GACd,KAAc,GACd,KAAc,IACdnO,KAAI,EAAEoO,EAAgBS,EAAe/G,MACrC,MAAMjB,EAAIwH,KAAKjC,OACZyC,EAAgBT,GAAkBC,KAAKS,MAAQX,GAElD,MAAO,CACLC,eAAgBA,EAChBD,QAASA,EACTvH,WAAW,EAAA6J,EAAA,IAAwB5J,EAAGA,GACtCiB,KAAM,GAAGA,KAAQsG,KAAkBS,IACrC,IAhB6B,IAACV,CC5BQ,GACtC,CAACtM,EAAMsM,UAGT,OACE,gBAAoBuC,EAAA,GAAM,CAAEC,WAAW,EAAM5K,MAAO,CAAE6B,MAAO,SACzD,gBAAoB8I,EAAA,GAAM,CAAEE,MAAM,EAAMC,GAAI,GAAIC,GAAI,GAAIC,QAAS,GAC/D,gBAAoB9B,EAAa,IAC9BpN,EACHsN,SAAU,CAACtN,EAAMuO,SACjBxJ,UAAW/E,EAAM+E,UACjBb,MAAO,CACL6B,MAAO,OACPC,OAAQ,WAIZ,gBAAoB6I,EAAA,GAAM,CAC1BE,MAAM,EACNC,GAAI,GACJC,GAAI,EACJE,GAAI,CACFC,QAAS,OACTC,cAAe,SACftJ,MAAO,OACPmJ,QAAS,EACTI,WAAY,UAEZC,IAAK,IAGL,gBAAoBC,EAAA,EAAM,KACxB,gBAAoBC,EAAA,EAAW,CAC/BC,MAAO,GACPjP,MAAO,wBACP0O,GAAI,CACFnJ,OAAQ,EACR2J,WAAY,WAIhB,gBAAoBlL,EAAA,EAAmB,CACvCI,MAAO,aACPvG,MAAO0B,EAAM+E,UACbJ,kBAAkB,EAClBC,SAAW1F,GAAMsP,EAAgB,CAAEzJ,UAAW7F,MAE9C,gBAAoB0Q,EAAA,EAAW,CAC/B/K,MAAO,kBACPtC,QAAS,WACT4C,KAAM,QACN4C,KAAM,SACN8H,WAAY,CAAEpD,IAAK,GAAIqD,KAAM,GAC7BxR,MAAO0B,EAAMuM,eACb3H,SAAWvF,GAAMmP,EAAgB,CAAEjC,gBAAiBlN,EAAE0Q,OAAOzR,UAE7D,gBAAoBsR,EAAA,EAAW,CAC/BrN,QAAS,WACT4C,KAAM,QACN4C,KAAM,SACNiI,UAAU,EACV1R,OAAO,QAAQ0O,EAAgBhN,EAAMuM,gBAAiB,GACtD1H,MAAO,iBAEP,gBAAoB+K,EAAA,EAAW,CAC/BrN,QAAS,WACT4C,KAAM,QACN4C,KAAM,SACN8H,WAAY,CAAEpD,IAAK,EAAGqD,KAAM,GAC5BxR,MAAO0B,EAAMqN,aACbzI,SAAWvF,GAAMmP,EAAgB,CAAEnB,cAAehO,EAAE0Q,OAAOzR,QAC3DuG,MAAO,kBAEP,gBAAoB+K,EAAA,EAAW,CAC/BrN,QAAS,WACT4C,KAAM,QACN4C,KAAM,SACN8H,WAAY,CAAEpD,IAAK,EAAGqD,KAAM,GAC5BxR,MAAO0B,EAAMsM,QACb1H,SAAWvF,GAAMmP,EAAgB,CAAElC,SAAUjN,EAAE0Q,OAAOzR,QACtDuG,MAAO,YAEP,gBAAoBoL,EAAA,EAAa,CAAE1N,QAAS,WAAY4C,KAAM,SAC5D,gBAAoB+K,EAAA,EAAY,CAAExI,GAAI,eAAiB,SACvD,gBAAoByI,EAAA,EAAQ,CAC5B7R,MAAO0B,EAAMuO,QACb3J,SAAWvF,GAAMmP,EAAgB,CAAED,QAASlP,EAAE0Q,OAAOzR,QACrD8R,QAAS,cACTvL,MAAO,SAELuH,EAAWjO,KAAKkS,GAChB,gBAAoBC,EAAA,EAAU,CAAEhS,MAAO+R,EAAGhS,IAAKgS,GAC3CA,OAIP,IACD,gBAAoBJ,EAAA,EAAa,CAAE1N,QAAS,WAAY4C,KAAM,SAC5D,gBAAoB+K,EAAA,EAAY,CAAExI,GAAI,eAAiB,UACvD,gBAAoByI,EAAA,EAAQ,CAC5B7R,OAhJesI,EAiJI,EAAe,CAAC8H,EAAS,SAAUlN,GAAKA,EAAEiF,KAAM,OAAQ/E,GAAMA,GAC5EzC,GACCA,EAAEsN,iBAAmBvM,EAAMuM,gBAC3BtN,EAAE8F,UAAU,KAAO/E,EAAM+E,UAAU,KACpC,iBAAkBgH,GAAMA,EAAG9F,OAAQ,IAAM,GArJN,MAAPW,EAAsBA,EAqJT,IAE9ChC,SAAWvF,IACT,MAAMkR,EAAiB7B,EAAQjI,MAC5B+B,GAAMA,EAAEvC,OAAS5G,EAAE0Q,OAAOzR,QAE7BiS,GACE/B,EAAgB,CACdjC,eAAgBgE,EAAehE,eAC/BD,QAASiE,EAAejE,QACxBvH,UAAWwL,EAAexL,WAC3B,EAELqL,QAAS,cACTvL,MAAO,UAEL6J,EAAQvQ,KAAKqK,GACb,gBAAoB8H,EAAA,EAAU,CAAEhS,MAAOkK,EAAEvC,KAAM5H,IAAKmK,EAAEvC,MAClDuC,EAAEvC,UAKV,gBAAoBuK,EAAA,EAAS,MAC7B,gBAAoBvO,EAAA,EAAe,CACnCE,aAAc,YAAYnC,EAAM+E,UAAU,MAAM/E,EAAMuM,kBAAkBvM,EAAMsM,WAAWtM,EAAMuO,UAC/FrM,KACE,gBAAoBkL,EAAa,IAC5BpN,EACH+E,UAAW/E,EAAM+E,UACjBuI,SAAU,CAACtN,EAAMuO,eAnL9B,IAA0B3H,CA0L1B,C","sources":["/dev/workshop/./src/common/useHashState.ts?","/dev/workshop/./src/paperBox1/ExportButtons.tsx?","/dev/workshop/./src/paperBox1/Measure.tsx?","/dev/workshop/./src/paperBox1/PaperAutocomplete.tsx?","/dev/workshop/./src/paperBox1/PaperSize.tsx?","/dev/workshop/./src/paperBox1/SvgCommonDefs.tsx?","/dev/workshop/./src/paperBox1/svg.ts?","/dev/workshop/./src/paperEnvelope/EnvelopeSvg.tsx?","/dev/workshop/./src/paperEnvelope/index.tsx?"],"sourcesContent":[" function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import debounce from \"lodash/debounce\"\nimport mapValues from \"lodash/mapValues\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport {\n  PAPER_SIZE_A4,\n\n  PaperSizeFromString,\n  PaperSizeToString,\n} from \"../paperBox1/PaperSize\"\n\nconst parseHash = (hash) => {\n  return !hash\n    ? {}\n    : hash\n        .substring(1)\n        .split(\"&\")\n        .map((part) => {\n          const [key, value] = part.split(\"=\")\n          return [decodeURIComponent(key), decodeURIComponent(value)]\n        })\n        .reduce(\n          (obj, [key, value]) => {\n            obj[key] = value\n            return obj\n          },\n          {} ,\n        )\n}\nconst objectToHash = (o) => {\n  return (\n    \"#\" +\n    Object.entries(o)\n      .map(\n        ([key, value]) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(value),\n      )\n      .join(\"&\")\n  )\n}\n\nconst defaultDeserialize = (\n  x,\n) =>\n  mapValues(x, (v, key) => {\n    if (\"paperSize\" === key) {\n      try {\n        return PaperSizeFromString(v)\n      } catch (e) {\n        console.error(e)\n        return PAPER_SIZE_A4\n      }\n    } else if (\"true\" === v) {\n      return true\n    } else if (\"false\" === v) {\n      return false\n    } else if (\"NaN\" === v) {\n      return NaN\n    } else if (\"undefined\" === v) {\n      return undefined\n    } else if (\"null\" === v) {\n      return null\n    } else if (\"\" === v) {\n      return \"\"\n    } else if (!isNaN(+v)) {\n      return +v\n    } else {\n      return v\n    }\n  })\nconst defaultSerialize = (x) =>\n  mapValues(x, (v, key) =>\n    key === \"paperSize\" ? PaperSizeToString(v ) : \"\" + v,\n  )\n\nexport function useHashState(\n  initialState,\n  {\n    deserialize = defaultDeserialize,\n    serialize = defaultSerialize,\n    wait = 1000,\n  } = {},\n) {\n  const createInitialState = useCallback(() => {\n    const state =\n      \"function\" === typeof initialState\n        ? (initialState )()\n        : initialState\n    // hash overrides parameter\n    const mergedState = deserialize(\n      Object.assign(serialize(state), parseHash(document.location.hash)),\n    ) \n    console.log(\"replaceState\")\n    history.replaceState(\n      undefined,\n      document.title,\n      objectToHash(serialize(mergedState)),\n    )\n\n    return mergedState\n  }, [deserialize, initialState, serialize])\n  const [state, setState] = useState(createInitialState)\n  const updateHashRef = useRef()\n  useEffect(() => _optionalChain([updateHashRef, 'access', _ => _.current, 'optionalCall', _2 => _2(state)]), [state])\n  if (!updateHashRef.current) {\n    console.log(\"pushState\")\n    updateHashRef.current = debounce(function (newState) {\n      history.pushState(\n        undefined,\n        document.title,\n        objectToHash(serialize(newState)),\n      )\n    }, wait)\n  }\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setState(createInitialState())\n    }\n    window.addEventListener(\"hashchange\", onHashChange)\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange)\n    }\n  }, [createInitialState])\n  return [state, setState]\n}\n","import Button from \"@mui/material/Button\"\nimport fileDownload from \"js-file-download\"\n\nimport * as React from \"react\"\nimport ReactDOMServer from \"react-dom/server\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function ExportButtons({\n  what,\n  baseFileName,\n}\n\n\n) {\n  const getPrintSVG = () =>\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(SvgPrintContext.Provider, { value: true,}, what),\n    ).replace(/\\s{2,}/g, \" \")\n  const asSVG = () => {\n    const svg = getPrintSVG()\n    fileDownload(svg, baseFileName + \".svg\")\n  }\n  const asTemplatePDF = async () => {\n    const { svgToPdf } = await import(\n      /* webpackChunkName: \"svgToPdf\" */ \"../paperBox1/svgToPdf\"\n    )\n\n    // add your content to the document here, as usual\n    const blob = await svgToPdf({\n      title: baseFileName,\n      author: \"Adrian Leonhard\",\n      svg: getPrintSVG(),\n    })\n\n    fileDownload(blob, baseFileName + \".pdf\")\n  }\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement(Button, { variant: \"contained\", onClick: asSVG,}, \"Download As SVG\"\n\n      )\n      , React.createElement(Button, { variant: \"contained\", onClick: asTemplatePDF,}, \"Template as PDF\"\n\n      )\n    )\n  )\n}\n","import * as React from \"react\"\nimport { createContext, useContext } from \"react\"\nimport { DEG, round10, V, } from \"ts3dutils\"\n\n\nexport const SvgPrintContext = createContext(false)\n\nexport function Guide({\n  children,\n  ...props\n}) {\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  return (\n    React.createElement('g', { className: \"guide\", ...props,}\n      , children\n    )\n  )\n}\nexport function Measure({\n  from,\n  to,\n  children,\n  R,\n  hideRight = false,\n  offset = 0,\n}\n\n\n\n\n\n\n) {\n  Array.isArray(from) && (from = V(from))\n  Array.isArray(to) && (to = V(to))\n  const d = from.to(to)\n  const length = d.length()\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  if (length < 0.05) return null\n  children ||= (R ? \"R\" : \"\") + round10(length, -1)\n  const textBlank = 3 * children.length\n\n  return (\n    React.createElement('g', {\n      transform: ` translate(${from[0]}, ${from[1]}) rotate(${\n        d.angleXY() / DEG\n      }) translate(0, ${offset * 10})`,\n      className: \"measure\",}\n\n      , !hideRight && (\n        React.createElement('path', {\n          style: { fill: \"none\" },\n          d: `M0,0\n          l0,10\n          M4,3\n          l-4,2\n          l4,2`,}\n        )\n      )\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `\n        M0,5\n        H${(length - textBlank) / 2}\n        M${(length + textBlank) / 2},5\n        H${length}\n        M${length},0\n        l0,10\n        m-4,-7\n        l4,2\n        l-4,2`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: length / 2,\n        y: 5,}\n\n        , children\n      )\n    )\n  )\n}\n","import Autocomplete from \"@mui/material/Autocomplete\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { forwardRef, } from \"react\"\nimport { PAPER_SIZES, PaperSizeFromDimensions } from \"./PaperSize\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaperAutocomplete = forwardRef(\n  (\n    {\n      disableClearance = false,\n      onChange,\n      value,\n      label,\n    },\n    ref,\n  ) => {\n    let paperSize = null\n    if (value) {\n      const [a, b] = value\n      paperSize = PaperSizeFromDimensions(a, b)\n    }\n    return (\n      React.createElement(Autocomplete, {\n        ref: ref,\n        disableClearable: disableClearance,\n        size: \"small\",\n        freeSolo: true,\n        renderInput: (params) => (\n          React.createElement(TextField, { ...params, label: label, variant: \"outlined\",} )\n        ),\n        value: paperSize,\n        onChange: (e, newValue) => {\n          if (\"string\" === typeof newValue) {\n            if (newValue.trim() === \"\") {\n              if (!disableClearance) {\n                onChange(null)\n              }\n            } else {\n              const match = /(\\d+(?:\\.\\d+)?)\\D*?(\\d+(?:\\.\\d+)?)?\\D*$/.exec(\n                newValue,\n              )\n              if (match) {\n                const [, widthStr, heightStr] = match\n                onChange(\n                  PaperSizeFromDimensions(+widthStr, +(heightStr || widthStr)),\n                )\n              }\n            }\n          } else {\n            onChange(newValue)\n          }\n        },\n        getOptionLabel: (val) => {\n          const [width, height, name = \"custom\"] = val\n          return `${name} ${width}x${height}mm`\n        },\n        options: PAPER_SIZES,}\n      )\n    )\n  },\n) \n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import { MINUS } from \"ts3dutils\"\n\n \n// Always portrait orientation,\n\n// Always portrait orientation,\nexport const PAPER_SIZES_A = [\n  [841, 1189, \"A0\"],\n  [594, 841, \"A1\"],\n  [420, 594, \"A2\"],\n  [297, 420, \"A3\"],\n  [210, 297, \"A4\"],\n  [148, 210, \"A5\"],\n  [105, 148, \"A6\"],\n  [74, 105, \"A7\"],\n  [52, 74, \"A8\"],\n  [37, 52, \"A9\"],\n  [26, 37, \"A10\"],\n]\n\nexport function PaperSizeEquals([aw, ah], [bw, bh]) {\n  return aw === bw && bh === bw\n}\n\nexport const PAPER_SIZES_B = [\n  [1000, 1414, \"C0\"],\n  [707, 1000, \"C1\"],\n  [500, 707, \"C2\"],\n  [353, 500, \"C3\"],\n  [250, 353, \"C4\"],\n  [176, 250, \"C5\"],\n  [125, 176, \"C6\"],\n  [88, 125, \"C7\"],\n  [62, 88, \"C8\"],\n  [44, 62, \"C9\"],\n  [31, 44, \"C10\"],\n]\n\n// C size envelopes fit A size paper.\nexport const PAPER_SIZES_C = [\n  [917, 1297, \"C0\"],\n  [648, 917, \"C1\"],\n  [458, 648, \"C2\"],\n  [324, 458, \"C3\"],\n  [229, 324, \"C4\"],\n  [162, 229, \"C5\"],\n  [114, 162, \"C6\"],\n  [81, 114, \"C7\"],\n  [57, 81, \"C8\"],\n  [40, 57, \"C9\"],\n  [28, 40, \"C10\"],\n]\nexport const PAPER_SIZES = [\n  ...PAPER_SIZES_A,\n  [150, 150, \"Origami 15cm\"],\n  [100, 100, \"Origami 10cm\"],\n  [75, 75, \"Origami 7.5cm\"],\n  [215.9, 279.4, \"Letter\"],\n  [215.9, 355.6, \"Legal\"],\n]\n\nexport const ALL_PAPER_SIZES = [\n  ...PAPER_SIZES,\n  ...PAPER_SIZES_C,\n  ...PAPER_SIZES_B,\n]\n\nexport function PaperSizeFromString(str) {\n  const byName = PAPER_SIZES.find(([, , name]) => name === str)\n  if (byName) return byName\n  const [a, b] = str.split(\"x\")\n  return [+a, +b, \"Custom\"]\n}\nexport function PaperSizeFromDimensions(a, b) {\n  ;[a, b] = [a, b].sort(MINUS)\n  return _nullishCoalesce(PAPER_SIZES.find(([x, y]) => x === a && y === b), () => ( [a, b, \"Custom\"]))\n}\nexport function PaperSizeToString([a, b, name]) {\n  return name === \"Custom\" ? \"\" + a + \"x\" + b : name\n}\n\nexport const PAPER_SIZE_A4 = PAPER_SIZES_A[4]\n","\nimport { blue, green, orange, pink, red } from \"@mui/material/colors\"\nimport { useTheme } from \"@mui/material/styles\"\nimport * as React from \"react\"\nimport { useContext, useMemo } from \"react\"\nimport { SvgPrintContext } from \"./Measure\"\n\n\nexport const SvgCommonDefs = () => {\n  const theme = useTheme()\n  const print = useContext(SvgPrintContext)\n  const screenStyles = useMemo(\n    () => `\n.adrian * { stroke: ${theme.palette.text.primary}; }\n.adrian .red-stroke { stroke: ${red[500]}; }\n.adrian .orange-stroke { stroke: ${orange[500]}; }\n.adrian .blue-stroke { stroke: ${blue[500]}; }\n.adrian .green-stroke { stroke: ${green[500]}; }\n.adrian .pink-stroke { stroke: ${pink[500]}; }\n.adrian .measure, *.measure * {\n  stroke: ${theme.palette.primary.main};\n  fill: ${theme.palette.primary.main};\n}\n.adrian .guide, .adrian .guide * {\n  stroke: ${theme.palette.secondary.main};\n  fill: ${theme.palette.secondary.main};\n}\n.adrian .glue, .adrian .guide .glue {\n  stroke: none;\n  fill: url(#glue);\n}\n`,\n    [theme],\n  )\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('defs', null\n        , React.createElement('pattern', { id: \"glue\", patternUnits: \"userSpaceOnUse\", width: \"4\", height: \"4\",}\n          , React.createElement('path', {\n            d: \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\"\n\n                ,\n            style: { stroke: theme.palette.divider, strokeWidth: 1 },}\n          )\n        )\n      )\n      , React.createElement('style', null, `\n      .adrian * {\n        stroke: black;\n        stroke-width: .05mm;\n        fill: none;\n      }\n      .mountain, .mountain * { stroke-dasharray: 10,2,1,1,1,2; }\n      .valley, .valley * { stroke-dasharray: 1,1; }\n      .cut, .cut * { stroke: 1; }\n      `)\n      , !print && React.createElement('style', null, screenStyles)\n    )\n  )\n}\n","import last from \"lodash/last\"\nimport { SVGPathData } from \"svg-pathdata\"\n\n\n\n\n\n\n\n\n\n\nimport { V as VV } from \"ts3dutils\"\n\nexport function H(x) {\n  return { type: SVGPathData.HORIZ_LINE_TO, relative: false, x: x }\n}\n\nexport function A(\n  rx,\n  ry,\n  xAxisRotation,\n  largeArcFlag,\n  sweepFlag,\n  p,\n) {\n  return {\n    lArcFlag: largeArcFlag,\n    rX: rx,\n    rY: ry,\n    relative: false,\n    sweepFlag: sweepFlag,\n    type: SVGPathData.ARC,\n    x: p.x,\n    xRot: 0,\n    y: p.y,\n  }\n}\n\nexport const C = (\n  x1,\n  y1,\n  x2,\n  y2,\n  x,\n  y,\n) => ({\n  type: SVGPathData.CURVE_TO,\n  x1,\n  y1,\n  x2,\n  y2,\n  x,\n  y,\n  relative: false,\n})\n\nexport const V = (y) => ({\n  type: SVGPathData.VERT_LINE_TO,\n  y,\n  relative: false,\n})\n\nexport const S = (x2, y2, x, y) => ({\n  type: SVGPathData.SMOOTH_CURVE_TO,\n  x2,\n  y2,\n  x,\n  y,\n  relative: false,\n})\n\n\n\nexport function M(a1, a2) {\n  const [x, y] = a2 === undefined ? [(a1 ).x, (a1 ).y] : [a1, a2]\n  return { type: SVGPathData.MOVE_TO, x, y, relative: false }\n}\n\nexport const m = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: true,\n})\n\n\n\nexport function L(a1, a2) {\n  const [x, y] = a2 === undefined ? [(a1 ).x, (a1 ).y] : [a1, a2]\n  return { type: SVGPathData.LINE_TO, x, y, relative: false }\n}\n\nexport const l = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: true,\n})\n\nexport const Z = () => ({ type: SVGPathData.CLOSE_PATH })\n\nexport const encode = (...path) => {\n  const modPath = []\n  let lastX = 0,\n    lastY = 0\n  for (const c of path) {\n    if (\"function\" === typeof c) {\n      for (const c2 of c(lastX, lastY)) {\n        modPath.push(c2)\n      }\n    } else {\n      modPath.push(c)\n    }\n    const lastC = last(modPath)\n    if (\"x\" in lastC) lastX = lastC.x\n    if (\"y\" in lastC) lastY = lastC.y\n  }\n  return new SVGPathData(modPath).round(3).encode()\n}\n \n\nexport function Corner(rad, x, y) {\n  return (prevX, prevY) => {\n    const prev = VV(prevX, prevY)\n    const p1 = VV(x, y)\n    const dir1 = prev.to(p1).toLength(rad)\n    const p2 = VV(p1.x + dir1.y, p1.y - dir1.x)\n    return [L(p1.minus(dir1)), A(rad, rad, 0, 0, 0, p2)]\n  }\n}\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import sortBy from \"lodash/sortBy\"\nimport * as React from \"react\"\nimport { useContext } from \"react\"\nimport { SVGPathData } from \"svg-pathdata\"\n\nimport { DEG, } from \"ts3dutils\"\n\nimport { Guide, Measure, SvgPrintContext } from \"../paperBox1/Measure\"\nimport {\n  PAPER_SIZE_A4,\n  PAPER_SIZES,\n  PAPER_SIZES_C,\n\n  PaperSizeFromDimensions,\n} from \"../paperBox1/PaperSize\"\nimport * as path from \"../paperBox1/svg\"\nimport { SvgCommonDefs } from \"../paperBox1/SvgCommonDefs\"\nimport claspsSvgString from \"./clasps.inkscape.svg?raw\"\n\nconst claspsSvg = new DOMParser().parseFromString(\n  claspsSvgString,\n  \"image/svg+xml\",\n).documentElement\n\nconst clasps = sortBy(\n  Array.from(claspsSvg.children)\n    .filter((c) => c.tagName === \"g\" && c.id !== \"guides\")\n    .map((c) => {\n      const children = Array.from(c.children)\n      const name = c.getAttribute(\"inkscape:label\")\n      function getPath(inkscapeLabel) {\n        const pathEl = children.find(\n          (c) =>\n            c.tagName === \"path\" &&\n            c.getAttribute(\"inkscape:label\") === inkscapeLabel,\n        )\n        if (_optionalChain([pathEl, 'optionalAccess', _ => _.getAttribute, 'call', _2 => _2(\"transform\")])) {\n          console.error(name, pathEl)\n          throw new Error(`Can't find path ${inkscapeLabel} in ${name}!`)\n        }\n        return _nullishCoalesce(_optionalChain([pathEl, 'optionalAccess', _3 => _3.getAttribute, 'call', _4 => _4(\"d\")]), () => ( \"\"))\n      }\n\n      return {\n        name: name,\n        bottomFold: getPath(\"bottomFold\"),\n        bottomCut: getPath(\"bottomCut\"),\n        topCut: getPath(\"topCut\"),\n      }\n    }),\n  (c) => c.name,\n)\nexport const claspNames = clasps.map((c) => c.name)\nexport function EnvelopeDimensions(\n  width,\n  height,\n  overlap,\n  envelopeHeight,\n) {\n  const a = Math.min(width, height)\n  const d = overlap / 2\n  const r2 = d / (1 - Math.cos(45 * DEG))\n  const h = r2 * Math.sin(45 * DEG)\n  // s is the short perpendicular distance from the side to the indent.\n  const s = Math.sin(45 * DEG) * envelopeHeight + d\n  // t is the y-distance from the top to where the diagonal cut at the bottom right starts.\n  const t = Math.sin(45 * DEG) * 2 * envelopeHeight + d\n  const envelopeWidth = Math.SQRT2 * (a - overlap) - envelopeHeight\n  const foldedCenter = a / 2 - Math.SQRT1_2 * envelopeHeight\n  return { a, d, r2, h, s, t, envelopeWidth, foldedCenter }\n}\n\nexport const presetsForOverlap = (overlap) =>\n  [\n    PAPER_SIZES_C[4],\n    PAPER_SIZES_C[5],\n    PAPER_SIZES_C[6],\n    PAPER_SIZES_C[7],\n    PAPER_SIZES_C[8],\n  ].map(([envelopeHeight, envelopeWidth, name]) => {\n    const a = Math.round(\n      (envelopeWidth + envelopeHeight) / Math.SQRT2 + overlap,\n    )\n    return {\n      envelopeHeight: envelopeHeight,\n      overlap: overlap,\n      paperSize: PaperSizeFromDimensions(a, a),\n      name: `${name} ${envelopeHeight}x${envelopeWidth}`,\n    }\n  })\n\nexport function EnvelopeSvg({\n  paperSize,\n  envelopeHeight,\n  overlap,\n  cornerRadius,\n  style,\n  claspIds,\n}\n\n\n\n\n\n\n) {\n  const r = 10\n\n  const [width, height] = paperSize\n\n  const { a, d, r2, h, s, t, foldedCenter } = EnvelopeDimensions(\n    width,\n    height,\n    overlap,\n    envelopeHeight,\n  )\n  const clasp = clasps.filter(\n    (g) => claspIds.includes(\"*\") || claspIds.includes(g.name),\n  )\n\n  const cArc = (r, x, y) => ({\n    type: SVGPathData.ARC,\n    rX: r,\n    rY: r,\n    xRot: 0,\n    lArcFlag: 0,\n    sweepFlag: 1,\n    x: x,\n    y: y,\n    relative: false,\n  })\n\n  const cutOffBottom = false\n  const claspScale = a / 210\n\n  const outline = new SVGPathData([\n    path.M(0, r),\n    // top\n    cArc(r, r, 0),\n    path.L(a - s - h, 0),\n    cArc(r2, a - s, d),\n    cArc(r2, a - s + h, 0),\n    path.L(a - r, 0),\n    // right\n    cArc(r, a, r),\n    path.L(a, s - h),\n    cArc(r2, a - d, s),\n    cArc(r2, a, s + h),\n    // bottom right cut\n    ...(cutOffBottom\n      ? [\n          path.L(a, t - h),\n          cArc(r2, a - d, t),\n          path.L(t, a - d),\n          cArc(r2, t - h, a),\n        ]\n      : [path.L(a, a - r), cArc(r, a - r, a)]),\n    // bottom\n    path.L(s + h, a),\n    cArc(r2, s, a - d),\n    cArc(r2, s - h, a),\n    path.L(r, a),\n    // left\n    cArc(r, 0, a - r),\n    path.L(0, a - s + h),\n    cArc(r2, d, a - s),\n    cArc(r2, 0, a - s - h),\n    path.Z(),\n  ]).encode()\n\n  const glue = new SVGPathData([\n    path.M(a - 2 * d, s + h),\n    cArc(r2, a - d, s),\n    cArc(r2, a, s + h),\n    path.L(a, 2 * s),\n    cArc(r2, a - 2 * d, 2 * s - h),\n    path.Z(),\n  ]).encode()\n\n  const valley = new SVGPathData([\n    path.M(a - s, d),\n    path.L(a - d, s),\n    path.L(s, a - d),\n    path.L(d, a - s),\n    path.Z(),\n  ]).encode()\n\n  const ref = _nullishCoalesce(PAPER_SIZES.find(([w, _h]) => w < envelopeHeight), () => ( PAPER_SIZE_A4))\n  const [refH, refW, refName] = ref\n  const print = useContext(SvgPrintContext)\n\n  return (\n    React.createElement('svg', {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      style: style,\n      width: width + \"mm\",\n      height: height + \"mm\",\n      viewBox: `0 0 ${width} ${height}`,\n      className: \"adrian\",}\n\n      , React.createElement(SvgCommonDefs, null )\n      , React.createElement('g', null\n        , React.createElement('path', { d: outline, className: \"cut\",} )\n        , React.createElement('path', { d: valley, className: \"valley\", id: \"envelopeFold\",} )\n      )\n      , clasp.map((clasp) => (\n        React.createElement('g', { id: `clasp-${clasp.name}`,}\n          , React.createElement('path', {\n            d: clasp.bottomCut,\n            className: \"cut\",\n            transform: `translate(${a - foldedCenter} ${\n              a - foldedCenter\n            }) rotate(135) scale(${claspScale}) translate(-24 -24)`,}\n          )\n          , React.createElement('path', {\n            d: clasp.topCut,\n            className: \"cut\",\n            transform: `translate(${foldedCenter} ${foldedCenter}) rotate(135) scale(${claspScale}) translate(-24 -24)`,}\n          )\n\n          , React.createElement('path', {\n            d: clasp.bottomFold,\n            className: \"valley\",\n            transform: `translate(${a - foldedCenter} ${\n              a - foldedCenter\n            }) rotate(135) scale(${claspScale}) translate(-24 -24)`,\n            id: \"bottomFold\",}\n          )\n        )\n      ))\n\n      , React.createElement(Guide, {\n        transform: `translate(${a / 2} ${a / 2}) rotate(-45) translate(${\n          -refW / 2\n        } ${-refH / 2})`,}\n\n        , React.createElement('text', { y: refH, style: { fontSize: \"xx-small\" },}\n          , refName\n        )\n        , React.createElement('rect', { width: refW, height: refH, style: { fill: \"none\" },} )\n      )\n      , React.createElement(Guide, null\n        , React.createElement('path', { d: glue, className: \"glue\",} )\n        , React.createElement('path', { d: glue, className: \"glue\", transform: \"matrix(0 1 1 0 0 0)\"     ,} )\n      )\n      , React.createElement(Measure, { from: [a - s, d], to: [a - d, s],} )\n      , React.createElement(Measure, { from: [d, a - s], to: [a - s, d],} )\n    )\n  )\n}\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import Card from \"@mui/material/Card\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport Divider from \"@mui/material/Divider\"\nimport FormControl from \"@mui/material/FormControl\"\nimport Grid from \"@mui/material/Grid\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Select from \"@mui/material/Select\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { useCallback, useMemo } from \"react\"\nimport { round10 } from \"ts3dutils\"\nimport { useHashState } from \"../common/useHashState\"\nimport { ExportButtons } from \"../paperBox1/ExportButtons\"\nimport { PaperAutocomplete } from \"../paperBox1/PaperAutocomplete\"\nimport { PAPER_SIZE_A4 } from \"../paperBox1/PaperSize\"\nimport {\n  claspNames,\n  EnvelopeDimensions,\n  EnvelopeSvg,\n  presetsForOverlap,\n} from \"./EnvelopeSvg\"\n\nexport default () => {\n  const [state, setState] = useHashState({\n    overlap: 10,\n    envelopeHeight: 118,\n    cornerRadius: 10,\n    paperSize: PAPER_SIZE_A4,\n    claspId: \"Hexagon\",\n  })\n  const setPartialState = useCallback(\n    (update) => setState((s) => ({ ...s, ...update })),\n    [setState],\n  )\n\n  const { envelopeWidth } = EnvelopeDimensions(\n    state.paperSize[0],\n    state.paperSize[1],\n    state.overlap,\n    state.envelopeHeight,\n  )\n\n  const presets = useMemo(\n    () => presetsForOverlap(state.overlap),\n    [state.overlap],\n  )\n\n  return (\n    React.createElement(Grid, { container: true, style: { width: \"100%\" },}\n      , React.createElement(Grid, { item: true, xs: 12, md: 10, padding: 1,}\n        , React.createElement(EnvelopeSvg, {\n          ...state,\n          claspIds: [state.claspId],\n          paperSize: state.paperSize,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n          },}\n        )\n      )\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          padding: 2,\n          alignItems: \"stretch\",\n          // \"& > *\": { margin: 1 },\n          gap: 2,\n        },}\n\n        , React.createElement(Card, null\n          , React.createElement(CardMedia, {\n            image: \"\",\n            title: \"Contemplative Reptile\" ,\n            sx: {\n              height: 0,\n              paddingTop: \"100%\", // 1:1\n            },}\n          )\n        )\n        , React.createElement(PaperAutocomplete, {\n          label: \"Paper Size\" ,\n          value: state.paperSize,\n          disableClearance: true,\n          onChange: (v) => setPartialState({ paperSize: v }),}\n        )\n        , React.createElement(TextField, {\n          label: \"Envelope Height\" ,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 25, step: 1 },\n          value: state.envelopeHeight,\n          onChange: (e) => setPartialState({ envelopeHeight: +e.target.value }),}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          disabled: true,\n          value: round10(envelopeWidth / state.envelopeHeight, -2),\n          label: \"Aspect Ratio\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.cornerRadius,\n          onChange: (e) => setPartialState({ cornerRadius: +e.target.value }),\n          label: \"Corner Radius\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.overlap,\n          onChange: (e) => setPartialState({ overlap: +e.target.value }),\n          label: \"Overlap\",}\n        )\n        , React.createElement(FormControl, { variant: \"outlined\", size: \"small\",}\n          , React.createElement(InputLabel, { id: \"clasp-label\",}, \"Clasp\")\n          , React.createElement(Select, {\n            value: state.claspId,\n            onChange: (e) => setPartialState({ claspId: e.target.value }),\n            labelId: \"clasp-label\",\n            label: \"Clasp\",}\n\n            , claspNames.map((n) => (\n              React.createElement(MenuItem, { value: n, key: n,}\n                , n\n              )\n            ))\n          )\n        ), \" \"\n        , React.createElement(FormControl, { variant: \"outlined\", size: \"small\",}\n          , React.createElement(InputLabel, { id: \"clasp-label\",}, \"Preset\")\n          , React.createElement(Select, {\n            value: \n              _nullishCoalesce(_optionalChain([presets, 'access', _ => _.find, 'call', _2 => _2(\n                (x) =>\n                  x.envelopeHeight === state.envelopeHeight &&\n                  x.paperSize[0] === state.paperSize[0],\n              ), 'optionalAccess', _3 => _3.name]), () => ( \"\"))\n            ,\n            onChange: (e) => {\n              const matchingPreset = presets.find(\n                (p) => p.name === e.target.value,\n              )\n              matchingPreset &&\n                setPartialState({\n                  envelopeHeight: matchingPreset.envelopeHeight,\n                  overlap: matchingPreset.overlap,\n                  paperSize: matchingPreset.paperSize,\n                })\n            },\n            labelId: \"clasp-label\",\n            label: \"Preset\",}\n\n            , presets.map((p) => (\n              React.createElement(MenuItem, { value: p.name, key: p.name,}\n                , p.name\n              )\n            ))\n          )\n        )\n        , React.createElement(Divider, null )\n        , React.createElement(ExportButtons, {\n          baseFileName: `envelope-${state.paperSize[0]}-${state.envelopeHeight}-${state.overlap}-${state.claspId}`,\n          what: \n            React.createElement(EnvelopeSvg, {\n              ...state,\n              paperSize: state.paperSize,\n              claspIds: [state.claspId],}\n            )\n          ,}\n        )\n      )\n    )\n  )\n}\n"],"names":["parseHash","hash","substring","split","map","part","key","value","decodeURIComponent","reduce","obj","objectToHash","o","Object","entries","encodeURIComponent","join","defaultDeserialize","x","v","NaN","isNaN","e","console","error","defaultSerialize","useHashState","initialState","deserialize","serialize","wait","createInitialState","useCallback","state","mergedState","assign","document","location","log","history","replaceState","undefined","title","setState","useState","updateHashRef","useRef","useEffect","ops","lastAccessLHS","i","length","op","fn","args","call","_optionalChain","_","current","_2","newState","pushState","onHashChange","window","addEventListener","removeEventListener","ExportButtons","what","baseFileName","getPrintSVG","Provider","replace","variant","onClick","svg","async","svgToPdf","blob","author","SvgPrintContext","createContext","Guide","children","props","useContext","className","Measure","from","to","R","hideRight","offset","Array","isArray","V","d","textBlank","transform","angleXY","style","fill","stroke","fontSize","dominantBaseline","textAnchor","y","PaperAutocomplete","forwardRef","disableClearance","onChange","label","ref","paperSize","a","b","disableClearable","size","freeSolo","renderInput","params","newValue","trim","match","exec","widthStr","heightStr","getOptionLabel","val","width","height","name","options","PAPER_SIZES_A","PAPER_SIZES_C","PAPER_SIZES","PaperSizeFromString","str","byName","find","PaperSizeFromDimensions","sort","lhs","rhsFn","PaperSizeToString","PAPER_SIZE_A4","SvgCommonDefs","theme","print","screenStyles","useMemo","palette","text","primary","main","secondary","id","patternUnits","divider","strokeWidth","H","type","HORIZ_LINE_TO","relative","A","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","p","lArcFlag","rX","rY","ARC","xRot","C","x1","y1","x2","y2","CURVE_TO","VERT_LINE_TO","M","a1","a2","MOVE_TO","L","LINE_TO","l","Z","CLOSE_PATH","encode","path","modPath","lastX","lastY","c","c2","push","lastC","round","Corner","rad","prevX","prevY","prev","p1","dir1","toLength","p2","minus","_nullishCoalesce","claspsSvg","DOMParser","parseFromString","documentElement","clasps","filter","tagName","getAttribute","getPath","inkscapeLabel","pathEl","Error","_3","_4","bottomFold","bottomCut","topCut","claspNames","EnvelopeDimensions","overlap","envelopeHeight","Math","min","r2","cos","h","sin","s","t","envelopeWidth","SQRT2","foldedCenter","SQRT1_2","EnvelopeSvg","cornerRadius","claspIds","r","clasp","g","includes","cArc","claspScale","outline","glue","valley","w","_h","refH","refW","refName","xmlns","viewBox","claspId","setPartialState","update","presets","presetsForOverlap","PaperSize","Grid","container","item","xs","md","padding","sx","display","flexDirection","alignItems","gap","Card","CardMedia","image","paddingTop","TextField","inputProps","step","target","disabled","FormControl","InputLabel","Select","labelId","n","MenuItem","matchingPreset","Divider"],"sourceRoot":""}