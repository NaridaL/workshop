{"version":3,"file":"paperEnvelope-index.js","mappings":"sKAIA,MAAMA,EAAaC,GACTA,EAEJA,EACGC,UAAU,GACVC,MAAM,KACNC,KAAKC,IACJ,MAAOC,EAAKC,GAASF,EAAKF,MAAM,KAChC,MAAO,CAACK,mBAAmBF,GAAME,mBAAmBD,GAAM,IAE3DE,QAAO,CAACC,GAAMJ,EAAKC,MAClBG,EAAIJ,GAAOC,EACJG,IACN,CAAC,GAXN,CAAC,EAaDC,EAAgBC,GAElB,IACAC,OAAOC,QAAQF,GACZR,KACC,EAAEE,EAAKC,KACLQ,mBAAmBT,GAAO,IAAMS,mBAAmBR,KAEtDS,KAAK,KAINC,EACJC,GAEA,IAAUA,GAAIC,GACR,SAAWA,GAEJ,UAAYA,IAEZ,QAAUA,EACZC,IACE,cAAgBD,OACzB,EACS,SAAWA,EACb,KACE,KAAOA,EACT,GACGE,OAAOF,GAGVA,GAFCA,KAKRG,EAAoBJ,GACxB,IAAUA,GAAIC,GAAM,GAAKA,IAEpB,SAASI,EACdC,GACA,YACEC,EAAcR,EAAkB,UAChCS,EAAYJ,EAAgB,KAC5BK,EAAO,KACL,CAAC,GAEL,MAAMC,GAAqB,IAAAC,cAAY,KACrC,MAAMC,EACJ,mBAAsBN,EAClB,IACAA,EAEAO,EAAcN,EAClBZ,OAAOmB,OAAON,EAAUI,GAAQ9B,EAAUiC,SAASC,SAASjC,QAQ9D,OANAkC,QAAQC,eACNC,EACAJ,SAASK,MACT3B,EAAae,EAAUK,KAGlBA,IACN,CAACN,EAAaD,EAAcE,KACxBI,EAAOS,IAAY,IAAAC,UAASZ,GAC7Ba,GAAgB,IAAAC,UAqBtB,OApBKD,EAAcE,UACjBF,EAAcE,QAAU,KAAS,SAAUC,GACzCT,QAAQC,eACNC,EACAJ,SAASK,MACT3B,EAAae,EAAUkB,IAE3B,GAAGjB,KAEL,IAAAkB,YAAU,IAAMJ,EAAcE,QAAQb,IAAQ,CAACA,KAE/C,IAAAe,YAAU,KACR,MAAMC,EAAe,KACnBP,EAASX,IAAoB,EAG/B,OADAmB,OAAOC,iBAAiB,aAAcF,GAC/B,KACLC,OAAOE,oBAAoB,aAAcH,EAAY,CACvD,GACC,CAAClB,IACG,CAACE,EAAOS,EACjB,C,iGCjGO,SAASW,GAAc,KAC5BC,EAAI,aACJC,IAKA,MAAMC,EAAc,IAClB,uBACE,gBAAoB,KAAgBC,SAAU,CAAE/C,OAAO,GAAQ4C,IAC/DI,QAAQ,UAAW,KAmBvB,OACE,gBAAoB,WAAgB,KAChC,gBAAoB,IAAQ,CAAEC,QAAS,YAAaC,QApB5C,KACZ,MAAMC,EAAML,IACZ,IAAaK,EAAKN,EAAe,OAAM,GAkBmC,mBAGtE,gBAAoB,IAAQ,CAAEI,QAAS,YAAaC,QAnBpCE,UACpB,MAAM,SAAEC,SAAmB,sDAKrBC,QAAaD,EAAS,CAC1BtB,MAAOc,EACPU,OAAQ,kBACRJ,IAAKL,MAGP,IAAaQ,EAAMT,EAAe,OAAM,GAO0C,mBAKtF,C,6ECzCO,MAAMW,GAAkB,IAAAC,gBAAc,GAEtC,SAASC,GAAM,SACpBC,KACGC,IAGH,OADmB,IAAAC,YAAWL,GACP,KAErB,gBAAoB,IAAK,CAAEM,UAAW,WAAYF,GAC9CD,EAGR,CACO,SAASI,GAAQ,KACtBC,EAAI,GACJC,EAAE,SACFN,EAAQ,UACRO,GAAY,EAAK,OACjBC,EAAS,IAQTC,MAAMC,QAAQL,KAAUA,GAAO,IAAAM,GAAEN,IACjCI,MAAMC,QAAQJ,KAAQA,GAAK,IAAAK,GAAEL,IAC7B,MAAMM,EAAIP,EAAKC,GAAGA,GACZO,EAASD,EAAEC,SAEjB,IADmB,IAAAX,YAAWL,GACd,OAAO,KACvB,GAAIgB,EAAS,IAAM,OAAO,KAC1Bb,IAAa,IAAK,QAAQa,GAAS,GACnC,MAAMC,EAAY,EAAId,EAASa,OAE/B,OACE,gBAAoB,IAAK,CACvBE,UAAW,cAAcV,EAAK,OAAOA,EAAK,cACxCO,EAAEI,UAAY,sBACW,GAATR,KAClBL,UAAW,YAERI,GACD,gBAAoB,OAAQ,CAC1BU,MAAO,CAAEC,KAAM,QACfN,EAAG,2EAOL,gBAAoB,OAAQ,CAC5BK,MAAO,CAAEC,KAAM,QACfN,EAAG,6BAECC,EAASC,GAAa,gBACtBD,EAASC,GAAa,iBACvBD,eACAA,oEAMH,gBAAoB,OAAQ,CAC5BI,MAAO,CACLE,OAAQ,OACRC,SAAU,EACVC,iBAAkB,SAClBC,WAAY,UAEdtE,EAAG6D,EAAS,EACZU,EAAG,GAEDvB,GAIV,C,6EClEO,MAAMwB,GAAoB,IAAAC,aAC/B,EAEIC,oBAAmB,EACnBC,WACAtF,QACAuF,SAEFC,KAEA,IAAIC,EAAY,KAChB,GAAIzF,EAAO,CACT,MAAO0F,EAAGC,GAAK3F,EACfyF,GAAY,QAAwBC,EAAGC,EACzC,CACA,OACE,gBAAoB,IAAc,CAChCH,IAAKA,EACLI,iBAAkBP,EAClBQ,KAAM,QACNC,UAAU,EACVC,YAAcC,GACZ,gBAAoB,IAAW,IAAKA,EAAQT,MAAOA,EAAOtC,QAAS,aAErEjD,MAAOyF,EACPH,SAAU,CAACW,EAAGC,KACZ,GAAI,iBAAoBA,EACtB,GAAwB,KAApBA,EAASC,OACNd,GACHC,EAAS,UAEN,CACL,MAAMc,EAAQ,oCAAoCC,KAAKH,GACvD,GAAIE,EAAO,CACT,MAAO,CAAEE,EAAUC,GAAaH,EAChCd,GAAS,SAAyBgB,GAAWC,GAC/C,CACF,MAEAjB,EAASY,EACX,EAEFM,eAAiBC,IACf,MAAOC,EAAOC,EAAQC,EAAO,UAAYH,EACzC,MAAO,GAAGG,KAAQF,KAASC,KAAM,EAEnCE,QAAS,MAEb,G,gDCjEG,MAAMC,EAAgB,IAC3B,gBAAoB,WAAgB,KAChC,gBAAoB,OAAQ,KAC1B,gBAAoB,UAAW,CAAEC,GAAI,OAAQC,aAAc,iBAAkBN,MAAO,IAAKC,OAAQ,KAC/F,gBAAoB,OAAQ,CAC5BpC,EAAG,oCAGHK,MAAO,CAAEE,OAAQ,OAAQmC,YAAa,OAI1C,gBAAoB,QAAS,KAC3B,oCACA,YACA,gD,kMCdD,MAAMC,EAAO,KACPC,EAAUxG,IAAW,QAAQA,EAAI,MAAM,GAAK,IAG5CyG,EAAsB,CAACC,EAAOC,IACzCA,EAAY,EAAIC,KAAKC,IAAI,KAAMH,EAAQ,GAC5BI,EAAqB,CAACJ,EAAOK,IAC/B,EAATA,EAAaH,KAAKC,IAAI,KAAMH,EAAQ,GACzBM,EAA4B,CACvCN,EACAC,IACGA,EAAY,EAAIC,KAAKK,IAAI,KAAMP,EAAQ,GAC/BQ,EAAyB,CACpCR,EACAS,IACGA,EAAeP,KAAKQ,IAAI,KAAMV,EAAQ,GAC9BW,EAA4B,CACvCX,EACAS,IACkB,EAAfA,EAAmBP,KAAKK,IAAI,KAAMP,EAAQ,GAExC,SAASY,GAAe,MAC7BZ,EAAK,OACLK,EAAM,WACNQ,EAAa,EAAC,WACdC,KACGvE,IAOH,QAAK9B,IAAcqG,SAAiBrG,IAAc4F,GAChD,MAAM,IAAIU,MAAM,6CAEdtG,IAAc4F,IAChBA,EAASN,EAAoBC,EAAOc,IAEtC,MAAM,EAAExH,EAAC,EAAEuE,GAAM,EAAAmD,GAAGC,MAAMZ,EAAQQ,GAClC,OACE,gBAAoB,OAAQ,CAC1B3D,EAAGgE,CAAI;WACF5H,KAAKuE;WACN,QAAW,EAAGmC,GAAOxH,KACpB2I,GAAMD,CAAI,IAAI,EAAAF,GAAGC,MAAMZ,EAAQQ,EAAaM,GAAK,KAAMnB,cAEzDzD,GAGT,CAEO,SAAS6E,GAAQ,GACtB1B,EAAE,SACFpD,EAAQ,MACR+E,EAAK,QACLC,IAOA,OACE,gBAAoB,WAAgB,KAChC,gBAAoB,IAAK,CAAE5B,GAAIA,GAAMpD,IACrC,QAAW,EAAG+E,EAAQ,GAAG7I,KAAK2I,GAC9B,gBAAoB,MAAO,CACzBzI,IAAKyI,EACLI,UAAW,IAAM7B,EACjBrC,UAAW,WAAW8D,EAAI,GAAKG,aAKzC,CAIO,MAAME,EAAc,CACzB,CAAC,IAAK,KAAM,MACZ,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,IAAK,IAAK,MACX,CAAC,GAAI,IAAK,MACV,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,MACT,CAAC,GAAI,GAAI,OACT,CAAC,IAAK,IAAK,gBACX,CAAC,IAAK,IAAK,gBACX,CAAC,GAAI,GAAI,iBACT,CAAC,MAAO,MAAO,UACf,CAAC,MAAO,MAAO,UAGV,SAASC,EAAoBC,GAClC,MAAMC,EAASH,EAAYI,MAAK,EAAE,CAAE,CAAErC,KAAUA,IAASmC,IACzD,GAAIC,EAAQ,OAAOA,EACnB,MAAOtD,EAAGC,GAAKoD,EAAInJ,MAAM,KACzB,MAAO,EAAE8F,GAAIC,EAAG,SAClB,CACO,SAASuD,EAAwBxD,EAAGC,GAEzC,OADED,EAAGC,GAAK,CAACD,EAAGC,GAAGwD,KAAK,MA7G4B,OAAzBC,EA8GDP,EAAYI,MAAK,EAAEtI,EAAGuE,KAAOvE,IAAM+E,GAAKR,IAAMS,KA9GLyD,EA8GS,KAAM,CAAG1D,EAAGC,EAAG,UA9GH0D,GAAvF,IAA0BD,CA+G3B,CACO,SAASE,GAAmB5D,EAAGC,EAAGiB,IACvC,MAAgB,WAATA,EAAyBlB,EAAI,IAAMC,EAAIiB,CAChD,CAEO,MAAM2C,EAAgBV,EAAYI,MAAK,EAAE,CAAE,CAAErC,KAAmB,OAATA,IAEvD,SAAS2B,EACdiB,KACGC,GAEH,MAAMC,EAAU/I,GACd,iBAAoBA,EAChB,GAAKA,EACL,iBAAoBA,EACpBA,EACAyD,MAAMC,QAAQ1D,GACdA,EAAEd,IAAI6J,GAAQjJ,KAAK,KACnBE,EAAEA,EAAI,IAAMA,EAAEuE,EACpB,IAAIyE,EAASH,EAAQ,GACrB,IAAK,IAAIhB,EAAI,EAAGA,EAAIiB,EAAKjF,OAAQgE,IAC/BmB,GAAUD,EAAOD,EAAKjB,IACtBmB,GAAUH,EAAQhB,EAAI,GAExB,OAAOmB,CACT,CAEO,MAAMC,EAAgBC,IAC3B,MAAMC,EAAYtH,OAAOuH,KAAKF,EAAK,SAAU,uBACzCC,IAAWA,EAAUE,OAAS,M,sQC1IvBC,EAAI,CAACtJ,EAAGuE,KAAM,CACzBgF,KAAM,KAAYC,QAClBxJ,IACAuE,IACAkF,UAAU,IAQCC,EAAI,CAAC1J,EAAGuE,KAAM,CACzBgF,KAAM,KAAYI,QAClB3J,IACAuE,IACAkF,UAAU,IClBX,SAASG,EAAiBnB,EAAKC,GAAS,OAAW,MAAPD,EAAsBA,EAAqBC,GAAW,CAAE,SAASmB,EAAeC,GAAO,IAAIC,EAA+B1K,EAAQyK,EAAI,GAAQjC,EAAI,EAAG,KAAOA,EAAIiC,EAAIjG,QAAQ,CAAE,MAAMmG,EAAKF,EAAIjC,GAAUoC,EAAKH,EAAIjC,EAAI,GAAY,GAARA,GAAK,GAAe,mBAAPmC,GAAkC,iBAAPA,IAAmC,MAAT3K,EAAiB,OAA+B,WAAP2K,GAA0B,mBAAPA,GAA2BD,EAAgB1K,EAAOA,EAAQ4K,EAAG5K,IAA0B,SAAP2K,GAAwB,iBAAPA,IAAyB3K,EAAQ4K,GAAG,IAAIC,IAAS7K,EAAM8K,KAAKJ,KAAkBG,KAAQH,OAAgB5I,EAAa,CAAE,OAAO9B,CAAO,CAiBvmB,MAAM+K,GAAY,IAAIC,WAAYC,gB,06fAEhC,iBACAC,gBAEIC,EAAS,IACb/G,MAAMJ,KAAK+G,EAAUpH,UAClByH,QAAQC,GAAoB,MAAdA,EAAEC,SAA4B,WAATD,EAAEtE,KACrClH,KAAKwL,IACJ,MAAM1H,EAAWS,MAAMJ,KAAKqH,EAAE1H,UACxBiD,EAAOyE,EAAEE,aAAa,kBAC5B,SAASC,EAAQC,GACf,MAAMC,EAAS/H,EAASsF,MACrBoC,GACe,SAAdA,EAAEC,SACFD,EAAEE,aAAa,oBAAsBE,IAEzC,GAAIjB,EAAe,CAACkB,EAAQ,iBAAkBC,GAAKA,EAAEJ,aAAc,OAAQK,GAAMA,EAAG,eAElF,MADAC,QAAQC,MAAMlF,EAAM8E,GACd,IAAItD,MAEZ,OAAOmC,EAAiBC,EAAe,CAACkB,EAAQ,iBAAkBK,GAAMA,EAAGR,aAAc,OAAQS,GAAMA,EAAG,QAAQ,IAAM,IAC1H,CAEA,MAAO,CACLpF,KAAMA,EACNqF,WAAYT,EAAQ,cACpBU,UAAWV,EAAQ,aACnBW,OAAQX,EAAQ,UAClB,KAEHH,GAAMA,EAAEzE,OAEEwF,EAAajB,EAAOtL,KAAKwL,GAAMA,EAAEzE,OACvC,SAASyF,EACd3F,EACAC,EACA2F,EACAC,GAEA,MAAM7G,EAAI6B,KAAKiF,IAAI9F,EAAOC,GACpBpC,EAAI+H,EAAU,EACdG,EAAKlI,GAAK,EAAIgD,KAAKQ,IAAI,GAAK,OAC5B2E,EAAID,EAAKlF,KAAKC,IAAI,GAAK,MAEvBmF,EAAIpF,KAAKC,IAAI,GAAK,MAAO+E,EAAiBhI,EAKhD,MAAO,CAAEmB,EAAGnB,IAAGkI,KAAIC,IAAGC,IAAGC,EAHM,EAArBrF,KAAKC,IAAI,GAAK,MAAW+E,EAAiBhI,EAGxBsI,cAFNtF,KAAKC,IAAI,GAAK,OAAQ9B,EAAInB,EAAIoI,GAAK,EAEdG,aADtBpH,EAAI,EAAI6B,KAAKwF,QAAUR,EAE9C,CAEO,SAASS,GAAY,UAC1BvH,EAAS,eACT8G,EAAc,QACdD,EAAO,aACPW,EAAY,MACZrI,EAAK,QACLsI,EAAU,aASV,MAAMC,EAAI,IAEHzG,EAAOC,GAAUlB,GAElB,EAAEC,EAAC,EAAEnB,EAAC,GAAEkI,EAAE,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,aAAEE,GAAiBT,EAC1C3F,EACAC,EACA2F,EACAC,GAEIa,EAAQjC,EAAOlC,MAAMoE,GAAMA,EAAEzG,OAASsG,IAEtCI,EAAO,CAACH,EAAGxM,EAAGuE,KAAM,CACxBgF,KAAM,KAAYqD,IAClBC,GAAIL,EACJM,GAAIN,EACJO,KAAM,EACNC,SAAU,EACVC,UAAW,EACXjN,EAAGA,EACHuE,EAAGA,EACHkF,UAAU,IAINyD,EAAanI,EAAI,IAEjBoI,EAAU,IAAI,KAAY,CAC9B,EAAO,EAAGX,GAEVG,EAAKH,EAAGA,EAAG,GACX,EAAOzH,EAAIiH,EAAID,EAAG,GAClBY,EAAKb,EAAI/G,EAAIiH,EAAGpI,GAChB+I,EAAKb,EAAI/G,EAAIiH,EAAID,EAAG,GACpB,EAAOhH,EAAIyH,EAAG,GAEdG,EAAKH,EAAGzH,EAAGyH,GACX,EAAOzH,EAAGiH,EAAID,GACdY,EAAKb,EAAI/G,EAAInB,EAAGoI,GAChBW,EAAKb,EAAI/G,EAAGiH,EAAID,GASX,EAAOhH,EAAGA,EAAIyH,GAAIG,EAAKH,EAAGzH,EAAIyH,EAAGzH,GAEtC,EAAOiH,EAAID,EAAGhH,GACd4H,EAAKb,EAAIE,EAAGjH,EAAInB,GAChB+I,EAAKb,EAAIE,EAAID,EAAGhH,GAChB,EAAOyH,EAAGzH,GAEV4H,EAAKH,EAAG,EAAGzH,EAAIyH,GACf,EAAO,EAAGzH,EAAIiH,EAAID,GAClBY,EAAKb,EAAIlI,EAAGmB,EAAIiH,GAChBW,EAAKb,EAAI,EAAG/G,EAAIiH,EAAID,GDpHD,CAAGxC,KAAM,KAAY6D,cCsHvCC,SAEGC,EAAS,IAAI,KAAY,CAC7B,EAAOvI,EAAIiH,EAAGpI,GACd,EAAOmB,EAAInB,EAAGoI,GACd,EAAOA,EAAGjH,EAAInB,GACd,EAAOA,EAAGmB,EAAIiH,GACd,CAAEzC,KAAM,KAAY6D,cACnBC,SAEGxI,EAAM+E,EAAiB,KAAYtB,MAAK,EAAEiF,EAAGC,KAAQD,EAAI3B,KAAiB,IAAQ,EAAa,MAC9F6B,EAAMC,EAAMC,GAAW9I,EAG9B,OAFc,IAAA3B,YAAW,MAGvB,gBAAoB,MAAO,CACzB0K,MAAO,6BACP3J,MAAO,CACLC,KAAM,OACNC,OAAQ,UACRmC,YAAc,EAAI,KAAQ,OACvBrC,GAEL8B,MAAOA,EAAQ,KACfC,OAAQA,EAAS,KACjB6H,QAAS,OAAO9H,KAASC,IACzB7C,UAAW,UAET,gBAAoBgD,EAAA,EAAe,MACnC,gBAAoB,OAAQ,CAAEvC,EAAGuJ,EAAShK,UAAW,YACrD,gBAAoB,OAAQ,CAAES,EAAG0J,EAAQnK,UAAW,WACpD,gBAAoB,IAAK,CACzBY,UAAW,aAAagB,EAAIoH,KAC1BpH,EAAIoH,wBACiBe,yBAErB,gBAAoB,OAAQ,CAAE/J,UAAW,SAAUS,EAAG6I,EAAMnB,aAC5D,gBAAoB,OAAQ,CAAEnI,UAAW,UAAWS,EAAG6I,EAAMlB,aAE/D,gBAAoB,OAAQ,CAC5BpI,UAAW,UACXY,UAAW,aAAaoI,KAAgBA,wBAAmCe,wBAC3EtJ,EAAG6I,EAAMjB,SAET,gBAAoB,KAAO,CAC3BzH,UAAW,aAAagB,EAAI,KAAKA,EAAI,6BAClC2I,EAAO,MACLD,EAAO,MAEV,gBAAoB,OAAQ,CAAElJ,EAAGkJ,EAAMxJ,MAAO,CAAEG,SAAU,aACxDuJ,GAEF,gBAAoB,OAAQ,CAAE5H,MAAO2H,EAAM1H,OAAQyH,EAAMxJ,MAAO,CAAEC,KAAM,WAE1E,gBAAoBd,EAAA,GAAS,CAAEC,KAAM,CAAC0B,EAAIiH,EAAGpI,GAAIN,GAAI,CAACyB,EAAInB,EAAGoI,KAC7D,gBAAoB5I,EAAA,GAAS,CAAEC,KAAM,CAACO,EAAGmB,EAAIiH,GAAI1I,GAAI,CAACyB,EAAIiH,EAAGpI,KAGrE,CCpLA,aACE,MAAOhD,EAAOS,IAAY,EAAAhB,EAAA,GAAa,CACrCsL,QAAS,GACTC,eAAgB,IAChBU,aAAc,GACdxH,WAAW,QAAkB,MAC7ByH,QAAS,YAELuB,GAAkB,IAAAnN,cACrBoN,GAAW1M,GAAU2K,IAAM,IAAMA,KAAM+B,OACxC,CAAC1M,IAEGyD,GAAY,QAAoBlE,EAAMkE,YAEtC,cAAEoH,GAAkBR,EACxB5G,EAAU,GACVA,EAAU,GACVlE,EAAM+K,QACN/K,EAAMgL,gBAGFoC,GAAQ,EAAAC,EAAA,KAEd,OACE,gBAAoBC,EAAA,GAAM,CAAEC,WAAW,EAAMlK,MAAO,CAAE8B,MAAO,SACzD,gBAAoBmI,EAAA,GAAM,CAAEE,MAAM,EAAMC,GAAI,GAAIC,GAAI,IAClD,gBAAoBjC,EAAa,IAC9BzL,EACHkE,UAAWA,EACXb,MAAO,CACL8B,MAAO,OACPC,OAAQ,OACRuI,OAAQP,EAAMQ,QAAQ,OAI1B,gBAAoBN,EAAA,GAAM,CAC1BE,MAAM,EACNC,GAAI,GACJC,GAAI,EACJG,GAAI,CACFC,QAAS,OACTC,cAAe,SACf5I,MAAO,OACP6I,QAAS,EACTC,WAAY,UAEZC,IAAK,IAGL,gBAAoBC,EAAA,EAAM,KACxB,gBAAoBC,EAAA,EAAW,CAC/BC,MAAO,GACP7N,MAAO,wBACPqN,GAAI,CACFzI,OAAQ,EACRkJ,WAAY,WAIhB,gBAAoB1K,EAAA,EAAmB,CACvCI,MAAO,aACPvF,MAAOyF,EACPJ,kBAAkB,EAClBC,SAAW1E,GAAM6N,EAAgB,CAAEhJ,WAAW,QAAkB7E,OAEhE,gBAAoBkP,EAAA,EAAW,CAC/BvK,MAAO,kBACPtC,QAAS,WACT4C,KAAM,QACNqE,KAAM,SACN6F,WAAY,CAAEvD,IAAK,GAAIwD,KAAM,GAC7BhQ,MAAOuB,EAAMgL,eACbjH,SAAWW,GAAMwI,EAAgB,CAAElC,gBAAiBtG,EAAEgK,OAAOjQ,UAE7D,gBAAoB8P,EAAA,EAAW,CAC/B7M,QAAS,WACT4C,KAAM,QACNqE,KAAM,SACNgG,UAAU,EACVlQ,OAAO,QAAQ6M,EAAgBtL,EAAMgL,gBAAiB,GACtDhH,MAAO,iBAEP,gBAAoBuK,EAAA,EAAW,CAC/B7M,QAAS,WACT4C,KAAM,QACNqE,KAAM,SACN6F,WAAY,CAAEvD,IAAK,EAAGwD,KAAM,GAC5BhQ,MAAOuB,EAAM0L,aACb3H,SAAWW,GAAMwI,EAAgB,CAAExB,cAAehH,EAAEgK,OAAOjQ,QAC3DuF,MAAO,kBAEP,gBAAoBuK,EAAA,EAAW,CAC/B7M,QAAS,WACT4C,KAAM,QACNqE,KAAM,SACN6F,WAAY,CAAEvD,IAAK,EAAGwD,KAAM,GAC5BhQ,MAAOuB,EAAM+K,QACbhH,SAAWW,GAAMwI,EAAgB,CAAEnC,SAAUrG,EAAEgK,OAAOjQ,QACtDuF,MAAO,YAEP,gBAAoB4K,EAAA,EAAa,CAAElN,QAAS,WAAY4C,KAAM,SAC5D,gBAAoBuK,EAAA,EAAY,CAAErJ,GAAI,eAAiB,SACvD,gBAAoBsJ,EAAA,EAAQ,CAC5BrQ,MAAOuB,EAAM2L,QACb5H,SAAWW,GAAMwI,EAAgB,CAAEvB,QAASjH,EAAEgK,OAAOjQ,QACrDsQ,QAAS,cACT/K,MAAO,SAEL6G,EAAWvM,KAAK0Q,GAChB,gBAAoBC,EAAA,EAAU,CAAExQ,MAAOuQ,EAAGxQ,IAAKwQ,GAC3CA,OAKR,gBAAoBE,EAAA,EAAS,MAC7B,gBAAoB9N,EAAA,EAAe,CACnCE,aAAc,YAAY4C,EAAU,MAAMlE,EAAMgL,kBAAkBhL,EAAM+K,UACxE1J,KAAM,gBAAoBoK,EAAa,IAAKzL,EAAOkE,UAAWA,OAKvE,C","sources":["/dev/workshop/./src/common/useHashState.ts?","/dev/workshop/./src/paperBox1/ExportButtons.tsx?","/dev/workshop/./src/paperBox1/Measure.tsx?","/dev/workshop/./src/paperBox1/PaperAutocomplete.tsx?","/dev/workshop/./src/paperBox1/SvgCommonDefs.tsx?","/dev/workshop/./src/paperBox1/common.tsx?","/dev/workshop/./src/paperEnvelope/svg.ts?","/dev/workshop/./src/paperEnvelope/EnvelopeSvg.tsx?","/dev/workshop/./src/paperEnvelope/index.tsx?"],"sourcesContent":["import debounce from \"lodash/debounce\"\nimport mapValues from \"lodash/mapValues\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\nconst parseHash = (hash) => {\n  return !hash\n    ? {}\n    : hash\n        .substring(1)\n        .split(\"&\")\n        .map((part) => {\n          const [key, value] = part.split(\"=\")\n          return [decodeURIComponent(key), decodeURIComponent(value)]\n        })\n        .reduce((obj, [key, value]) => {\n          obj[key] = value\n          return obj\n        }, {} )\n}\nconst objectToHash = (o) => {\n  return (\n    \"#\" +\n    Object.entries(o)\n      .map(\n        ([key, value]) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(value),\n      )\n      .join(\"&\")\n  )\n}\n\nconst defaultDeserialize = (\n  x,\n) =>\n  mapValues(x, (v) => {\n    if (\"true\" === v) {\n      return true\n    } else if (\"false\" === v) {\n      return false\n    } else if (\"NaN\" === v) {\n      return NaN\n    } else if (\"undefined\" === v) {\n      return undefined\n    } else if (\"null\" === v) {\n      return null\n    } else if (\"\" === v) {\n      return \"\"\n    } else if (!isNaN(+v)) {\n      return +v\n    } else {\n      return v\n    }\n  })\nconst defaultSerialize = (x) =>\n  mapValues(x, (v) => \"\" + v)\n\nexport function useHashState(\n  initialState,\n  {\n    deserialize = defaultDeserialize,\n    serialize = defaultSerialize,\n    wait = 1000,\n  } = {},\n) {\n  const createInitialState = useCallback(() => {\n    const state =\n      \"function\" === typeof initialState\n        ? (initialState )()\n        : initialState\n    // hash overrides parameter\n    const mergedState = deserialize(\n      Object.assign(serialize(state), parseHash(document.location.hash)),\n    ) \n    history.pushState(\n      undefined,\n      document.title,\n      objectToHash(serialize(mergedState)),\n    )\n\n    return mergedState\n  }, [deserialize, initialState, serialize])\n  const [state, setState] = useState(createInitialState)\n  const updateHashRef = useRef()\n  if (!updateHashRef.current) {\n    updateHashRef.current = debounce(function (newState) {\n      history.pushState(\n        undefined,\n        document.title,\n        objectToHash(serialize(newState)),\n      )\n    }, wait)\n  }\n  useEffect(() => updateHashRef.current(state), [state])\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setState(createInitialState())\n    }\n    window.addEventListener(\"hashchange\", onHashChange)\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange)\n    }\n  }, [createInitialState])\n  return [state, setState]\n}\n","import Button from \"@mui/material/Button\"\nimport fileDownload from \"js-file-download\"\n\nimport * as React from \"react\"\nimport ReactDOMServer from \"react-dom/server\"\nimport { SvgPrintContext } from \"./Measure\"\n\nexport function ExportButtons({\n  what,\n  baseFileName,\n}\n\n\n) {\n  const getPrintSVG = () =>\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(SvgPrintContext.Provider, { value: true,}, what),\n    ).replace(/\\s{2,}/g, \" \")\n  const asSVG = () => {\n    const svg = getPrintSVG()\n    fileDownload(svg, baseFileName + \".svg\")\n  }\n  const asTemplatePDF = async () => {\n    const { svgToPdf } = await import(\n      /* webpackChunkName: \"svgToPdf\" */ \"../paperBox1/svgToPdf\"\n    )\n\n    // add your content to the document here, as usual\n    const blob = await svgToPdf({\n      title: baseFileName,\n      author: \"Adrian Leonhard\",\n      svg: getPrintSVG(),\n    })\n\n    fileDownload(blob, baseFileName + \".pdf\")\n  }\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement(Button, { variant: \"contained\", onClick: asSVG,}, \"Download As SVG\"\n\n      )\n      , React.createElement(Button, { variant: \"contained\", onClick: asTemplatePDF,}, \"Template as PDF\"\n\n      )\n    )\n  )\n}\n","import * as React from \"react\"\nimport { createContext, useContext } from \"react\"\nimport { DEG, round10, V, } from \"ts3dutils\"\n\n\nexport const SvgPrintContext = createContext(false)\n\nexport function Guide({\n  children,\n  ...props\n}) {\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  return (\n    React.createElement('g', { className: \"guide\", ...props,}\n      , children\n    )\n  )\n}\nexport function Measure({\n  from,\n  to,\n  children,\n  hideRight = false,\n  offset = 0,\n}\n\n\n\n\n\n) {\n  Array.isArray(from) && (from = V(from))\n  Array.isArray(to) && (to = V(to))\n  const d = from.to(to)\n  const length = d.length()\n  const isSvgPrint = useContext(SvgPrintContext)\n  if (isSvgPrint) return null\n  if (length < 0.05) return null\n  children ||= \"\" + round10(length, -1)\n  const textBlank = 3 * children.length\n\n  return (\n    React.createElement('g', {\n      transform: ` translate(${from[0]}, ${from[1]}) rotate(${\n        d.angleXY() / DEG\n      }) translate(0, ${offset * 10})`,\n      className: \"measure\",}\n\n      , !hideRight && (\n        React.createElement('path', {\n          style: { fill: \"none\" },\n          d: `M0,0\n          l0,10\n          M4,3\n          l-4,2\n          l4,2`,}\n        )\n      )\n      , React.createElement('path', {\n        style: { fill: \"none\" },\n        d: `\n        M0,5\n        H${(length - textBlank) / 2}\n        M${(length + textBlank) / 2},5\n        H${length}\n        M${length},0\n        l0,10\n        m-4,-7\n        l4,2\n        l-4,2`,}\n      )\n      , React.createElement('text', {\n        style: {\n          stroke: \"none\",\n          fontSize: 4,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n        },\n        x: length / 2,\n        y: 5,}\n\n        , children\n      )\n    )\n  )\n}\n","import Autocomplete from \"@mui/material/Autocomplete\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { forwardRef, } from \"react\"\nimport { PAPER_SIZES, PaperSizeFromDimensions } from \"./common\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaperAutocomplete = forwardRef(\n  (\n    {\n      disableClearance = false,\n      onChange,\n      value,\n      label,\n    },\n    ref,\n  ) => {\n    let paperSize = null\n    if (value) {\n      const [a, b] = value\n      paperSize = PaperSizeFromDimensions(a, b)\n    }\n    return (\n      React.createElement(Autocomplete, {\n        ref: ref,\n        disableClearable: disableClearance,\n        size: \"small\",\n        freeSolo: true,\n        renderInput: (params) => (\n          React.createElement(TextField, { ...params, label: label, variant: \"outlined\",} )\n        ),\n        value: paperSize,\n        onChange: (e, newValue) => {\n          if (\"string\" === typeof newValue) {\n            if (newValue.trim() === \"\") {\n              if (!disableClearance) {\n                onChange(null)\n              }\n            } else {\n              const match = /(\\d+(?:\\.\\d+)?).*?(\\d+(?:\\.\\d+)?)/.exec(newValue)\n              if (match) {\n                const [, widthStr, heightStr] = match\n                onChange(PaperSizeFromDimensions(+widthStr, +heightStr))\n              }\n            }\n          } else {\n            onChange(newValue)\n          }\n        },\n        getOptionLabel: (val) => {\n          const [width, height, name = \"custom\"] = val\n          return `${name} ${width}x${height}mm`\n        },\n        options: PAPER_SIZES,}\n      )\n    )\n  },\n)\n","import * as React from \"react\"\n\n\nexport const SvgCommonDefs = () => (\n  React.createElement(React.Fragment, null\n    , React.createElement('defs', null\n      , React.createElement('pattern', { id: \"glue\", patternUnits: \"userSpaceOnUse\", width: \"4\", height: \"4\",}\n        , React.createElement('path', {\n          d: \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\"\n\n              ,\n          style: { stroke: \"#eee\", strokeWidth: 1 },}\n        )\n      )\n    )\n    , React.createElement('style', null\n      , \".valley {stroke-dasharray: 1,1;} \"\n      , \".outline \"\n      , \".mountain {stroke-dasharray: 10,2,1,1,1,2;} \"\n    )\n  )\n)\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }import * as React from \"react\"\n\nimport { arrayRange, DEG, MINUS, round10, TAU, V3 } from \"ts3dutils\"\n\nexport const INCH = 25.4\nexport const fmtdeg = (x) => \"\" + round10(x / DEG, -1) + \"°\"\n \n\nexport const radiusFromSideWidth = (sides, sideWidth) =>\n  sideWidth / 2 / Math.sin(TAU / sides / 2)\nexport const sideWithFromRadius = (sides, radius) =>\n  radius * 2 * Math.sin(TAU / sides / 2)\nexport const centerToSideFromSideWidth = (\n  sides,\n  sideWidth,\n) => sideWidth / 2 / Math.tan(TAU / sides / 2)\nexport const radiusFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide / Math.cos(TAU / sides / 2)\nexport const sideWidthFromCenterToSide = (\n  sides,\n  centerToSide,\n) => centerToSide * 2 * Math.tan(TAU / sides / 2)\n\nexport function RegularPolygon({\n  sides,\n  radius,\n  startAngle = 0,\n  sideLength = undefined,\n  ...props\n}\n\n\n\n\n) {\n  if ((undefined !== sideLength) === (undefined !== radius)) {\n    throw new Error(\"must set either sideLength or radius\")\n  }\n  if (undefined === radius) {\n    radius = radiusFromSideWidth(sides, sideLength)\n  }\n  const { x, y } = V3.polar(radius, startAngle)\n  return (\n    React.createElement('path', {\n      d: dTpl`\n        M${x},${y}\n        ${arrayRange(0, sides).map(\n          (i) => dTpl`L${V3.polar(radius, startAngle + i * (TAU / sides))}`,\n        )}Z`,\n      ...props,}\n    )\n  )\n}\n\nexport function RotStep({\n  id,\n  children,\n  count,\n  stepDeg,\n}\n\n\n\n\n) {\n  return (\n    React.createElement(React.Fragment, null\n      , React.createElement('g', { id: id,}, children)\n      , arrayRange(0, count - 1).map((i) => (\n        React.createElement('use', {\n          key: i,\n          xlinkHref: \"#\" + id,\n          transform: `rotate(${(i + 1) * stepDeg} 0 0)`,}\n        )\n      ))\n    )\n  )\n}\n\n \n// Always portrait orientation,\nexport const PAPER_SIZES = [\n  [841, 1189, \"A0\"],\n  [594, 841, \"A1\"],\n  [420, 594, \"A2\"],\n  [297, 420, \"A3\"],\n  [210, 297, \"A4\"],\n  [148, 210, \"A5\"],\n  [105, 148, \"A6\"],\n  [74, 105, \"A7\"],\n  [52, 74, \"A8\"],\n  [37, 52, \"A9\"],\n  [26, 37, \"A10\"],\n  [150, 150, \"Origami 15cm\"],\n  [100, 100, \"Origami 10cm\"],\n  [75, 75, \"Origami 7.5cm\"],\n  [215.9, 279.4, \"Letter\"],\n  [215.9, 355.6, \"Legal\"],\n]\n\nexport function PaperSizeFromString(str) {\n  const byName = PAPER_SIZES.find(([, , name]) => name === str)\n  if (byName) return byName\n  const [a, b] = str.split(\"x\")\n  return [+a, +b, \"Custom\"]\n}\nexport function PaperSizeFromDimensions(a, b) {\n  ;[a, b] = [a, b].sort(MINUS)\n  return _nullishCoalesce(PAPER_SIZES.find(([x, y]) => x === a && y === b), () => ( [a, b, \"Custom\"]))\n}\nexport function PaperSizeToString([a, b, name]) {\n  return name === \"Custom\" ? \"\" + a + \"x\" + b : name\n}\n\nexport const PAPER_SIZE_A4 = PAPER_SIZES.find(([, , name]) => name === \"A4\")\n\nexport function dTpl(\n  strings,\n  ...exps\n) {\n  const format = (x) =>\n    \"number\" === typeof x\n      ? \"\" + x\n      : \"string\" === typeof x\n      ? x\n      : Array.isArray(x)\n      ? x.map(format).join(\" \")\n      : x.x + \",\" + x.y\n  let result = strings[0]\n  for (let i = 0; i < exps.length; i++) {\n    result += format(exps[i])\n    result += strings[i + 1]\n  }\n  return result\n}\n\nexport const openInNewTab = (url) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\")\n  if (newWindow) newWindow.opener = null\n}\n","import { SVGPathData } from \"svg-pathdata\"\n\nexport const M = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const m = (x, y) => ({\n  type: SVGPathData.MOVE_TO,\n  x,\n  y,\n  relative: true,\n})\nexport const L = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: false,\n})\nexport const l = (x, y) => ({\n  type: SVGPathData.LINE_TO,\n  x,\n  y,\n  relative: true,\n})\n\nexport const Z = () => ({ type: SVGPathData.CLOSE_PATH })\n"," function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }import sortBy from \"lodash/sortBy\"\nimport * as React from \"react\"\nimport { useContext } from \"react\"\nimport { SVGPathData } from \"svg-pathdata\"\n\nimport { DEG } from \"ts3dutils\"\nimport {\n  INCH,\n  PAPER_SIZE_A4,\n  PAPER_SIZES,\n\n} from \"../paperBox1/common\"\nimport { Guide, Measure, SvgPrintContext } from \"../paperBox1/Measure\"\nimport { SvgCommonDefs } from \"../paperBox1/SvgCommonDefs\"\nimport claspsSvgString from \"./clasps.inkscape.svg?raw\"\nimport * as path from \"./svg\"\n\nconst claspsSvg = new DOMParser().parseFromString(\n  claspsSvgString,\n  \"image/svg+xml\",\n).documentElement\n\nconst clasps = sortBy(\n  Array.from(claspsSvg.children)\n    .filter((c) => c.tagName === \"g\" && c.id !== \"guides\")\n    .map((c) => {\n      const children = Array.from(c.children)\n      const name = c.getAttribute(\"inkscape:label\")\n      function getPath(inkscapeLabel) {\n        const pathEl = children.find(\n          (c) =>\n            c.tagName === \"path\" &&\n            c.getAttribute(\"inkscape:label\") === inkscapeLabel,\n        )\n        if (_optionalChain([pathEl, 'optionalAccess', _ => _.getAttribute, 'call', _2 => _2(\"transform\")])) {\n          console.error(name, pathEl)\n          throw new Error()\n        }\n        return _nullishCoalesce(_optionalChain([pathEl, 'optionalAccess', _3 => _3.getAttribute, 'call', _4 => _4(\"d\")]), () => ( \"\"))\n      }\n\n      return {\n        name: name,\n        bottomFold: getPath(\"bottomFold\"),\n        bottomCut: getPath(\"bottomCut\"),\n        topCut: getPath(\"topCut\"),\n      }\n    }),\n  (c) => c.name,\n)\nexport const claspNames = clasps.map((c) => c.name)\nexport function EnvelopeDimensions(\n  width,\n  height,\n  overlap,\n  envelopeHeight,\n) {\n  const a = Math.min(width, height)\n  const d = overlap / 2\n  const r2 = d / (1 - Math.cos(45 * DEG))\n  const h = r2 * Math.sin(45 * DEG)\n  // s is the short perpendicular distance from the side to the indent.\n  const s = Math.sin(45 * DEG) * envelopeHeight + d\n  // t is the y-distance from the top to where the diagonal cut at the bottom right starts.\n  const t = Math.sin(45 * DEG) * 2 * envelopeHeight + d\n  const envelopeWidth = Math.sin(45 * DEG) * (a - d - s) * 2\n  const foldedCenter = a / 2 - Math.SQRT1_2 * envelopeHeight\n  return { a, d, r2, h, s, t, envelopeWidth, foldedCenter }\n}\n\nexport function EnvelopeSvg({\n  paperSize,\n  envelopeHeight,\n  overlap,\n  cornerRadius,\n  style,\n  claspId = \"Hex Slot\",\n}\n\n\n\n\n\n\n) {\n  const r = 10\n\n  const [width, height] = paperSize\n\n  const { a, d, r2, h, s, t, foldedCenter } = EnvelopeDimensions(\n    width,\n    height,\n    overlap,\n    envelopeHeight,\n  )\n  const clasp = clasps.find((g) => g.name === claspId)\n\n  const cArc = (r, x, y) => ({\n    type: SVGPathData.ARC,\n    rX: r,\n    rY: r,\n    xRot: 0,\n    lArcFlag: 0,\n    sweepFlag: 1,\n    x: x,\n    y: y,\n    relative: false,\n  })\n\n  const cutOffBottom = false\n  const claspScale = a / 210\n\n  const outline = new SVGPathData([\n    path.M(0, r),\n    // top\n    cArc(r, r, 0),\n    path.L(a - s - h, 0),\n    cArc(r2, a - s, d),\n    cArc(r2, a - s + h, 0),\n    path.L(a - r, 0),\n    // right\n    cArc(r, a, r),\n    path.L(a, s - h),\n    cArc(r2, a - d, s),\n    cArc(r2, a, s + h),\n    // bottom right cut\n    ...(cutOffBottom\n      ? [\n          path.L(a, t - h),\n          cArc(r2, a - d, t),\n          path.L(t, a - d),\n          cArc(r2, t - h, a),\n        ]\n      : [path.L(a, a - r), cArc(r, a - r, a)]),\n    // bottom\n    path.L(s + h, a),\n    cArc(r2, s, a - d),\n    cArc(r2, s - h, a),\n    path.L(r, a),\n    // left\n    cArc(r, 0, a - r),\n    path.L(0, a - s + h),\n    cArc(r2, d, a - s),\n    cArc(r2, 0, a - s - h),\n    path.Z(),\n  ]).encode()\n\n  const valley = new SVGPathData([\n    path.M(a - s, d),\n    path.L(a - d, s),\n    path.L(s, a - d),\n    path.L(d, a - s),\n    { type: SVGPathData.CLOSE_PATH },\n  ]).encode()\n\n  const ref = _nullishCoalesce(PAPER_SIZES.find(([w, _h]) => w < envelopeHeight), () => ( PAPER_SIZE_A4))\n  const [refH, refW, refName] = ref\n  const print = useContext(SvgPrintContext)\n\n  return (\n    React.createElement('svg', {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      style: {\n        fill: \"none\",\n        stroke: \"#123456\",\n        strokeWidth: (2 * INCH) / 300,\n        ...style,\n      },\n      width: width + \"mm\",\n      height: height + \"mm\",\n      viewBox: `0 0 ${width} ${height}`,\n      className: \"adrian\",}\n\n      , React.createElement(SvgCommonDefs, null )\n      , React.createElement('path', { d: outline, className: \"outline\",} )\n      , React.createElement('path', { d: valley, className: \"valley\",} )\n      , React.createElement('g', {\n        transform: `translate(${a - foldedCenter} ${\n          a - foldedCenter\n        }) rotate(135) scale(${claspScale}) translate(-24 -24)`,}\n\n        , React.createElement('path', { className: \"valley\", d: clasp.bottomFold,} )\n        , React.createElement('path', { className: \"outline\", d: clasp.bottomCut,} )\n      )\n      , React.createElement('path', {\n        className: \"outline\",\n        transform: `translate(${foldedCenter} ${foldedCenter}) rotate(135) scale(${claspScale}) translate(-24 -24)`,\n        d: clasp.topCut,}\n      )\n      , React.createElement(Guide, {\n        transform: `translate(${a / 2} ${a / 2}) rotate(-45) translate(${\n          -refW / 2\n        } ${-refH / 2})`,}\n\n        , React.createElement('text', { y: refH, style: { fontSize: \"xx-small\" },}\n          , refName\n        )\n        , React.createElement('rect', { width: refW, height: refH, style: { fill: \"none\" },} )\n      )\n      , React.createElement(Measure, { from: [a - s, d], to: [a - d, s],} )\n      , React.createElement(Measure, { from: [d, a - s], to: [a - s, d],} )\n    )\n  )\n}\n","import Card from \"@mui/material/Card\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport Divider from \"@mui/material/Divider\"\nimport FormControl from \"@mui/material/FormControl\"\nimport Grid from \"@mui/material/Grid\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Select from \"@mui/material/Select\"\nimport { useTheme } from \"@mui/material/styles\"\nimport TextField from \"@mui/material/TextField\"\nimport * as React from \"react\"\nimport { useCallback } from \"react\"\nimport { round10 } from \"ts3dutils\"\nimport { useHashState } from \"../common/useHashState\"\nimport {\n  PAPER_SIZE_A4,\n  PaperSizeFromString,\n  PaperSizeToString,\n} from \"../paperBox1/common\"\nimport { ExportButtons } from \"../paperBox1/ExportButtons\"\nimport { PaperAutocomplete } from \"../paperBox1/PaperAutocomplete\"\nimport { claspNames, EnvelopeDimensions, EnvelopeSvg } from \"./EnvelopeSvg\"\n\nexport default () => {\n  const [state, setState] = useHashState({\n    overlap: 10,\n    envelopeHeight: 118,\n    cornerRadius: 10,\n    paperSize: PaperSizeToString(PAPER_SIZE_A4),\n    claspId: \"Hexagon\",\n  })\n  const setPartialState = useCallback(\n    (update) => setState((s) => ({ ...s, ...update })),\n    [setState],\n  )\n  const paperSize = PaperSizeFromString(state.paperSize)\n\n  const { envelopeWidth } = EnvelopeDimensions(\n    paperSize[0],\n    paperSize[1],\n    state.overlap,\n    state.envelopeHeight,\n  )\n\n  const theme = useTheme()\n\n  return (\n    React.createElement(Grid, { container: true, style: { width: \"100%\" },}\n      , React.createElement(Grid, { item: true, xs: 12, md: 10,}\n        , React.createElement(EnvelopeSvg, {\n          ...state,\n          paperSize: paperSize,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            margin: theme.spacing(1),\n          },}\n        )\n      )\n      , React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          padding: 2,\n          alignItems: \"stretch\",\n          // \"& > *\": { margin: 1 },\n          gap: 2,\n        },}\n\n        , React.createElement(Card, null\n          , React.createElement(CardMedia, {\n            image: \"\",\n            title: \"Contemplative Reptile\" ,\n            sx: {\n              height: 0,\n              paddingTop: \"100%\", // 1:1\n            },}\n          )\n        )\n        , React.createElement(PaperAutocomplete, {\n          label: \"Paper Size\" ,\n          value: paperSize,\n          disableClearance: true,\n          onChange: (v) => setPartialState({ paperSize: PaperSizeToString(v) }),}\n        )\n        , React.createElement(TextField, {\n          label: \"Envelope Height\" ,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 25, step: 1 },\n          value: state.envelopeHeight,\n          onChange: (e) => setPartialState({ envelopeHeight: +e.target.value }),}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          disabled: true,\n          value: round10(envelopeWidth / state.envelopeHeight, -2),\n          label: \"Aspect Ratio\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.cornerRadius,\n          onChange: (e) => setPartialState({ cornerRadius: +e.target.value }),\n          label: \"Corner Radius\" ,}\n        )\n        , React.createElement(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          inputProps: { min: 0, step: 1 },\n          value: state.overlap,\n          onChange: (e) => setPartialState({ overlap: +e.target.value }),\n          label: \"Overlap\",}\n        )\n        , React.createElement(FormControl, { variant: \"outlined\", size: \"small\",}\n          , React.createElement(InputLabel, { id: \"clasp-label\",}, \"Clasp\")\n          , React.createElement(Select, {\n            value: state.claspId,\n            onChange: (e) => setPartialState({ claspId: e.target.value }),\n            labelId: \"clasp-label\",\n            label: \"Clasp\",}\n\n            , claspNames.map((n) => (\n              React.createElement(MenuItem, { value: n, key: n,}\n                , n\n              )\n            ))\n          )\n        )\n        , React.createElement(Divider, null )\n        , React.createElement(ExportButtons, {\n          baseFileName: `envelope-${paperSize[0]}-${state.envelopeHeight}-${state.overlap}`,\n          what: React.createElement(EnvelopeSvg, { ...state, paperSize: paperSize,} ),}\n        )\n      )\n    )\n  )\n}\n"],"names":["parseHash","hash","substring","split","map","part","key","value","decodeURIComponent","reduce","obj","objectToHash","o","Object","entries","encodeURIComponent","join","defaultDeserialize","x","v","NaN","isNaN","defaultSerialize","useHashState","initialState","deserialize","serialize","wait","createInitialState","useCallback","state","mergedState","assign","document","location","history","pushState","undefined","title","setState","useState","updateHashRef","useRef","current","newState","useEffect","onHashChange","window","addEventListener","removeEventListener","ExportButtons","what","baseFileName","getPrintSVG","Provider","replace","variant","onClick","svg","async","svgToPdf","blob","author","SvgPrintContext","createContext","Guide","children","props","useContext","className","Measure","from","to","hideRight","offset","Array","isArray","V","d","length","textBlank","transform","angleXY","style","fill","stroke","fontSize","dominantBaseline","textAnchor","y","PaperAutocomplete","forwardRef","disableClearance","onChange","label","ref","paperSize","a","b","disableClearable","size","freeSolo","renderInput","params","e","newValue","trim","match","exec","widthStr","heightStr","getOptionLabel","val","width","height","name","options","SvgCommonDefs","id","patternUnits","strokeWidth","INCH","fmtdeg","radiusFromSideWidth","sides","sideWidth","Math","sin","sideWithFromRadius","radius","centerToSideFromSideWidth","tan","radiusFromCenterToSide","centerToSide","cos","sideWidthFromCenterToSide","RegularPolygon","startAngle","sideLength","Error","V3","polar","dTpl","i","RotStep","count","stepDeg","xlinkHref","PAPER_SIZES","PaperSizeFromString","str","byName","find","PaperSizeFromDimensions","sort","lhs","rhsFn","PaperSizeToString","PAPER_SIZE_A4","strings","exps","format","result","openInNewTab","url","newWindow","open","opener","M","type","MOVE_TO","relative","L","LINE_TO","_nullishCoalesce","_optionalChain","ops","lastAccessLHS","op","fn","args","call","claspsSvg","DOMParser","parseFromString","documentElement","clasps","filter","c","tagName","getAttribute","getPath","inkscapeLabel","pathEl","_","_2","console","error","_3","_4","bottomFold","bottomCut","topCut","claspNames","EnvelopeDimensions","overlap","envelopeHeight","min","r2","h","s","t","envelopeWidth","foldedCenter","SQRT1_2","EnvelopeSvg","cornerRadius","claspId","r","clasp","g","cArc","ARC","rX","rY","xRot","lArcFlag","sweepFlag","claspScale","outline","CLOSE_PATH","encode","valley","w","_h","refH","refW","refName","xmlns","viewBox","setPartialState","update","theme","useTheme","Grid","container","item","xs","md","margin","spacing","sx","display","flexDirection","padding","alignItems","gap","Card","CardMedia","image","paddingTop","TextField","inputProps","step","target","disabled","FormControl","InputLabel","Select","labelId","n","MenuItem","Divider"],"sourceRoot":""}