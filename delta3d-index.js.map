{"version":3,"file":"delta3d-index.js","mappings":"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","sources":["/dev/workshop/./src/delta3d/index.tsx?"],"sourcesContent":["import * as chroma from \"chroma.ts\"\nimport * as React from \"react\"\nimport { useEffect, useRef } from \"react\"\nimport { DEG, M4, PI, TAU, V, V3 } from \"ts3dutils\"\nimport { Buffer, Mesh, Shader, TSGLContext } from \"tsgl\"\n\nconst hfcDefault = chroma.color(\"blue\").gl()\n\nclass CyclicVertexBuffer {\n   __init() {this.pos = 0}\n\n  \n\n   __init2() {this.lastUploaded = 0}\n\n  \n\n   constructor(\n      gl,\n     capacity,\n  ) {;this.gl = gl;this.capacity = capacity;CyclicVertexBuffer.prototype.__init.call(this);CyclicVertexBuffer.prototype.__init2.call(this);\n    this.buffer = gl.createBuffer()\n    this.data = new Float32Array(3 * capacity)\n  }\n\n   push(v) {\n    this.data[this.pos++] = v.x\n    this.data[this.pos++] = v.y\n    this.data[this.pos++] = v.z\n  }\n\n   upload() {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.data, this.gl.DYNAMIC_DRAW)\n  }\n}\n\nclass SGN {\n  __init3() {this.children = []}\n  \n  \n\n   constructor(\n     transform = M4.IDENTITY,\n     mesh,\n     color,\n    ...children\n  ) {;this.transform = transform;this.mesh = mesh;this.color = color;SGN.prototype.__init3.call(this);\n    children.forEach((c) => this.add(c))\n  }\n\n   add(...nodes) {\n    for (const node of nodes) {\n      this.children.push(node)\n      node.parent = this\n    }\n  }\n\n   getTransform(sgn) {\n    let result = sgn.transform\n    while (sgn.parent !== this) {\n      sgn = sgn.parent\n      result = sgn.transform.times(result)\n    }\n    return result\n  }\n\n   withGimbal() {\n    this.gimbal = true\n    return this\n  }\n}\n\nconst tree = new SGN()\n\nconst rodLength = 12\n\nfunction posToZOffsets(zBases, p) {\n  return zBases.map((zBase) => {\n    const xyD = p.xy().distanceTo(zBase)\n    return p.z + Math.sqrt(rodLength * rodLength - xyD * xyD) + 1\n  })\n}\n\nfunction trilaterate(\n  c1,\n  r1,\n  c2,\n  r2,\n  c3,\n  r3,\n) {\n  const eX = c1.to(c2).unit()\n  const eY = c1.to(c3).rejectedFrom1(eX).unit()\n  const sys = M4.forSys(eX, eY, undefined, c1)\n  const d = c1.to(c2).length()\n  const i = c1.to(c3).dot(eX)\n  const j = c1.to(c3).dot(eY)\n  const x = (r1 * r1 - r2 * r2 + d * d) / (2 * d)\n  const y = (r1 * r1 - r3 * r3 - 2 * i * x + i * i + j * j) / (2 * j)\n  const pSys = V(x, y, Math.sqrt(r1 * r1 - x * x - y * y))\n  return sys.transformPoint(pSys)\n}\n\nfunction quickhull(gl) {\n  const viewState = {\n    pos: V(0.75, 0, 1),\n    lookDir: V(0, 0, -1),\n    axisPoss: [0, 0, 0],\n  }\n  const saveViewState = () => {\n    localStorage.setItem(\n      \"viewState\",\n      JSON.stringify({\n        pos: viewState.pos.toArray(),\n        lookDir: viewState.lookDir.toArray(),\n        axisPoss: viewState.axisPoss,\n      }),\n    )\n  }\n  const loadViewState = () => {\n    if (null !== localStorage.getItem(\"viewState\")) {\n      const json = JSON.parse(localStorage.getItem(\"viewState\"))\n      viewState.pos = V3.fromArray(json.pos)\n      viewState.lookDir = V3.fromArray(json.lookDir)\n      viewState.axisPoss = json.axisPoss || viewState.axisPoss\n    }\n  }\n  loadViewState()\n\n  const cubeMesh = Mesh.cube()\n  console.log(\"cubeMesh\", cubeMesh)\n  const pointerMesh = Mesh.rotation(\n    [V3.O, V(1, 0, 1)],\n    { anchor: V3.O, dir1: V3.Z },\n    TAU,\n    16,\n  )\n  const planeMesh = Mesh.plane()\n  const sphereMesh = Mesh.sphere(1)\n    .computeWireframeFromFlatTrianglesClosedMesh()\n    .compile()\n  const spiralMesh = Mesh.spiral(\n    [V(-0.1, 1), V(0, 1.1), V(0.1, 1, 0)],\n    { anchor: V3.O, dir1: V3.X },\n    TAU * 320,\n    16 * 320,\n    0.2,\n  )\n    .computeNormalsFromFlatTriangles()\n    .compile()\n  console.log(\"spiralMesh\", spiralMesh)\n  const cylinderMesh = Mesh.rotation(\n    [V3.Y, V3.XY],\n    { anchor: V3.O, dir1: V3.X },\n    2 * Math.PI,\n    16,\n    true,\n  )\n  const platformMesh = Mesh.rotation(\n    [V3.O, V3.X, V(1, 0, 1), V3.Z],\n    {\n      anchor: V3.O,\n      dir1: V3.Z,\n    },\n    PI * 2,\n    3,\n  )\n  const trackLine = new Buffer(gl.ARRAY_BUFFER, Float32Array)\n  let pos = 0\n  const jointColors = chroma.scale(\"yellow\", \"black\").colors(6, \"gl\")\n  console.log(sphereMesh)\n  const zAssemblies = []\n  const spindles = []\n  const zAssemblyJoinPoints = []\n  const platformJoinPoints = []\n  const joints = []\n  let platform\n  const bars = []\n  tree.add(\n    new SGN(\n      M4.translate(V(-0.5, -0.5, -1)).scale(30, 30, 1),\n      cubeMesh,\n      chroma.css(\"lightgreen\").gl(),\n    ).withGimbal(),\n    (platform = new SGN(\n      M4.translate(0, 0, 5),\n      undefined,\n      undefined,\n      new SGN(\n        M4.scale(3, 3, 1).rotateZ(Math.PI / 3),\n        platformMesh,\n        chroma.css(\"orange\").gl(),\n      ),\n      new SGN(M4.translate(0, 0, -1), pointerMesh, chroma.css(\"silver\").gl()),\n      ...[0, 1, 2].flatMap((i) =>\n        [0, 1].map(\n          (j) =>\n            (platformJoinPoints[i * 2 + j] = new SGN(\n              M4.scale(0.2)\n                .translate(1.5, j ? 1.5 : -1.5, 0.5)\n                .rotateZ(TAU * ((1 / 3) * i)),\n              sphereMesh,\n              jointColors[i * 2 + j],\n            )),\n        ),\n      ),\n    )),\n    ...[0, 1, 2, 3, 4, 5].map(\n      (i) => (joints[i] = new SGN(undefined, cylinderMesh, jointColors[i])),\n    ),\n    ...[0, 1, 2].map(\n      (i) =>\n        new SGN(\n          M4.translate(10, 0, 0).rotateZ(((PI * 2) / 3) * i),\n          undefined,\n          undefined,\n\n          (spindles[i] = new SGN(\n            M4.rotateY(-PI / 2),\n            spiralMesh,\n            chroma.css(\"green\").gl(),\n          )),\n          new SGN(\n            M4.scale(0.4).translate(-2.5, 0, 0),\n            cubeMesh,\n            chroma.css(\"cyan\").gl(),\n          ),\n          (zAssemblies[i] = new SGN(\n            M4.translate(0, 0, viewState.axisPoss[i]),\n            undefined,\n            undefined,\n\n            new SGN(\n              M4.translate(-0.5, -0.5).scale(2, 3, 1),\n              cubeMesh,\n              chroma.css(\"blue\").gl(),\n            ),\n            ...[0, 1].map(\n              (j) =>\n                (zAssemblyJoinPoints[i * 2 + j] = new SGN(\n                  M4.scale(0.2).translate(-1, j ? 1.5 : -1.5, 0.5),\n                  sphereMesh,\n                  jointColors[i * 2 + j],\n                )),\n            ),\n          )),\n        ),\n    ),\n  )\n  const zBases = [0, 1, 2].map((i) =>\n    tree.getTransform(zAssemblies[i]).transformPoint(V(-2.5, 0, 0)).xy(),\n  ) \n\n  function fixJoints() {\n    ;[0, 1, 2].forEach((i) => {\n      zAssemblies[i].transform = M4.translate(0, 0, viewState.axisPoss[i])\n      spindles[i].transform = M4.scale(1, 0.5, 0.5)\n        .rotateX((TAU * -viewState.axisPoss[i]) / 0.2)\n        .rotateY(-PI / 2)\n    })\n\n    const [p1, p2, p3] = [0, 1, 2].map((i) =>\n      tree.getTransform(zAssemblies[i]).transformPoint(V(-2.5, 0, 0)),\n    )\n    const platCenter = trilaterate(p2, rodLength, p1, rodLength, p3, rodLength)\n    platform.transform = M4.translate(platCenter)\n    for (let i = 0; i < 6; i++) {\n      const a = tree.getTransform(zAssemblyJoinPoints[i]).O\n      const b = tree.getTransform(platformJoinPoints[i]).O\n      joints[i].transform = M4.scale(rodLength, 0.1, 0.1)\n        .rotateAB(V3.X, a.to(b))\n        .translate(a)\n    }\n  }\n\n  viewState.axisPoss = posToZOffsets(zBases, V3.O)\n  fixJoints()\n  // const cubeMesh = Mesh.cube()\n  const shader = Shader.create\n\n\n\n\n\n\n\n(\n    `\n\tuniform mat4 ts_ModelViewMatrix;\n\tuniform mat3 ts_NormalMatrix;\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tuniform float pointSize;\n\n\tattribute vec4 ts_Vertex;\n\tattribute vec3 ts_Normal;\n\n\tvarying vec3 coordUVQ;\n\tvarying vec2 coord;\n\tvarying vec3 normal;\n\tvarying vec3 position;\n\n\tvoid main() {\n\n\t  gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n\t  gl_PointSize = pointSize;\n\n\t  normal =ts_Normal;\n\t  vec4 position4 = ts_ModelViewMatrix * ts_Vertex;\n\t  position = position4.xyz;\n\t}\n  `,\n    `\n\tprecision highp float;\n\n\tuniform sampler2D texture;\n\tuniform vec3 lightPos;\n\tuniform vec4 color;\n\n\tvarying vec3 coordUVQ;\n\tvarying vec2 coord;\n\tvarying vec3 normal;\n\tvarying vec3 position;\n\n\tvoid main() {\n\t\tvec3 normal1 = normalize(normal);\n\t\tvec3 lightPos = vec3(1000, 2000, 4000);\n\t\tvec3 lightDir = normalize(position.xyz - lightPos);\n        float uMaterialShininess = 256.0;\n\t\tfloat lightIntensity = 0.2 + 0.8 * max(0.0, -dot(lightDir, normal1));\n\t\tgl_FragColor = vec4(normal,1.0);\n\t\tgl_FragColor = vec4(vec3(color) * lightIntensity, 1);\n\t}\n\t  `,\n  )\n\n  gl.clearColor(1, 1, 1, 0)\n  gl.cullFace(gl.BACK)\n\n  // setup camera\n  const cam1 = () => {\n    gl.matrixMode(gl.PROJECTION)\n    gl.loadIdentity()\n    gl.perspective(70, gl.canvas.width / gl.canvas.height, 0.1, 1000)\n    gl.lookAt(V(0, 0.5, 2.2), V3.O, V3.Y)\n    gl.matrixMode(gl.MODELVIEW)\n  }\n  const cam2 = () => {\n    gl.matrixMode(gl.PROJECTION)\n    gl.loadIdentity()\n    gl.perspective(70, gl.canvas.width / gl.canvas.height, 0.1, 1000)\n    gl.lookAt(V(0.75, 0, 1), V(0.75, 0, 0), V3.Y)\n    gl.matrixMode(gl.MODELVIEW)\n  }\n  cam2()\n  gl.pointSize(10)\n\n  gl.enable(gl.CULL_FACE)\n  gl.enable(gl.DEPTH_TEST)\n  gl.enable(gl.BLEND)\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n  const pressedKeys = {}\n  console.log(gl.canvas)\n  gl.canvas.contentEditable = \"true\" // make canvas focusable\n  gl.canvas.focus()\n  gl.canvas.onkeydown = function (e) {\n    pressedKeys[e.key] = true\n\n    if (\"2\" === e.key) {\n      cam2()\n    }\n    if (\"1\" === e.key) {\n      cam1()\n    }\n  }\n  gl.canvas.onkeypress = function (e) {\n    const dir = new V3(0, 0, 0)\n  }\n  gl.canvas.onkeyup = function (e) {\n    pressedKeys[e.key] = false\n  }\n  let lastPos = V3.O\n  let rot = M4.IDENTITY\n  const zRot = 0\n  const yRot = 0\n  gl.canvas.onmousemove2 = function (e) {\n    const pagePos = V(e.pageX, e.pageY)\n    const delta = lastPos.to(pagePos)\n    if (e.buttons & 1) {\n      // zRot -= delta.x * 0.25 * DEG\n      rot = rot.rotateZ(delta.x * 0.25 * DEG)\n      rot = rot.rotateX(delta.y * 0.25 * DEG)\n      // rot = rot.rotate(V3.O, rot.X, delta.y * 0.25 * DEG)\n      // yRot = clamp(yRot - delta.y * 0.25 * DEG, -85 * DEG, 85 * DEG)\n    }\n    lastPos = pagePos\n  }\n  gl.canvas.onmousemove = function (e) {\n    const pagePos = V(e.pageX, e.pageY)\n    const delta = lastPos.to(pagePos)\n    if (e.buttons & 1) {\n      // zRot -= delta.x * 0.25 * DEG\n      const rot = M4.rotateY(-delta.x * 0.25 * DEG).rotateX(\n        -delta.y * 0.25 * DEG,\n      )\n      viewState.lookDir = rot.transformVector(viewState.lookDir).unit()\n      // rot = rot.rotate(V3.O, rot.X, delta.y * 0.25 * DEG)\n      // yRot = clamp(yRot - delta.y * 0.25 * DEG, -85 * DEG, 85 * DEG)\n    }\n    lastPos = pagePos\n  }\n\n  function renderNode(sgn) {\n    gl.pushMatrix()\n    gl.multMatrix(sgn.transform)\n\n    if (sgn.gimbal) {\n      gl.drawGimbal(0.1)\n    }\n    if (sgn.mesh) {\n      shader\n        .uniforms({\n          color: sgn.color,\n          pointSize: 12,\n          lightPos: V(100, 0, 100).toLength(-1),\n        })\n        .draw(sgn.mesh)\n    }\n    sgn.children.forEach(renderNode)\n    gl.popMatrix()\n  }\n\n  function keyDir(plusKey, minusKey) {\n    return +!!pressedKeys[plusKey] - +!!pressedKeys[minusKey]\n  }\n\n  const keys = [\n    [\"u\", \"j\"],\n    [\"i\", \"k\"],\n    [\"o\", \"l\"],\n  ] \n  trackLine.data[pos++] = V3.O\n  trackLine.data[pos++] = V3.O\n  return gl.animate(function (abs, _diff) {\n    const targetPos = M4.rotateX(70 * DEG)\n      .translate(0, 0, 3)\n      .transformPoint(V3.polar(2, abs / 500, 1 + abs / 100000))\n    viewState.axisPoss = posToZOffsets(zBases, targetPos)\n    trackLine.data[pos++] = targetPos\n    trackLine.compile()\n    fixJoints()\n    for (let i = 0; i < 3; i++) {\n      const speed = 0.1 * keyDir(...keys[i])\n      if (speed !== 0) {\n        viewState.axisPoss[i] += speed\n        fixJoints()\n        saveViewState()\n      }\n    }\n    const speed = new V3(\n      +!!pressedKeys.w - +!!pressedKeys.s,\n      +!!pressedKeys.a - +!!pressedKeys.d,\n      +!!pressedKeys.e - +!!pressedKeys.q + +!!pressedKeys[\" \"],\n    ).times(0.05)\n    if (!speed.likeO()) {\n      const lookDirZ = viewState.lookDir\n\n      viewState.pos = viewState.pos.plus(\n        M4.forSys(lookDirZ, V3.Y.cross(lookDirZ).unit()).transformVector(speed),\n      )\n      saveViewState()\n    }\n    gl.matrixMode(gl.PROJECTION)\n    gl.loadIdentity()\n    gl.perspective(70, gl.canvas.width / gl.canvas.height, 0.1, 1000)\n    gl.lookAt(viewState.pos, viewState.pos.plus(viewState.lookDir), V3.Y)\n    gl.matrixMode(gl.MODELVIEW)\n\n    // const angleDeg = (abs / 1000) * 10\n    // const angleDeg = 0\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    gl.loadIdentity()\n    gl.rotate(-90, 1, 0, 0)\n    // gl.rotate(yRot / DEG, 0, 1, 0)\n    // gl.rotate(-zRot / DEG, 0, 0, 1)\n    //gl.multMatrix(rot)\n    gl.drawGimbal(0.1)\n\n    renderNode(tree)\n    shader\n      .uniforms({ color: chroma.css(\"red\").gl() })\n      .drawBuffers({ ts_Vertex: trackLine }, undefined, gl.LINE_STRIP)\n\n    //shader\n    // .uniforms({\n    //  color: chroma.css(\"grey\").gl(),\n    // pointSize: 10,\n    // })\n    //.drawBuffers(pointMesh.vertexBuffers, undefined, gl.POINTS)\n    //shader.uniforms({ color: [1, 1, 0, 1] }).draw(pointMesh, gl.LINES)\n    //shader.uniforms({ color: [0, 0, 0, 0.5] }).draw(pointMesh,\n    // gl.TRIANGLES) gl.pushMatrix() gl.translate(30, 0, 0)\n  })\n}\n\nexport default () => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    const tsgl = TSGLContext.create({ canvas: canvasRef.current })\n    tsgl.fixCanvasRes()\n    tsgl.addResizeListener()\n    quickhull(tsgl)\n  }, [])\n\n  return (\n    React.createElement('div', { style: { display: \"flex\", flexDirection: \"column\", height: \"100%\" },}\n      , React.createElement('canvas', { ref: canvasRef, style: { flexGrow: 1 }, tabIndex: 0,} )\n    )\n  )\n}\n"],"names":["gl","SGN","__init3","this","children","constructor","transform","M4","IDENTITY","mesh","color","prototype","call","forEach","c","add","nodes","node","push","parent","getTransform","sgn","result","times","withGimbal","gimbal","tree","rodLength","posToZOffsets","zBases","p","map","zBase","xyD","xy","distanceTo","z","Math","sqrt","canvasRef","useRef","useEffect","tsgl","create","canvas","current","fixCanvasRes","addResizeListener","viewState","pos","V","lookDir","axisPoss","saveViewState","localStorage","setItem","JSON","stringify","toArray","getItem","json","parse","V3","fromArray","loadViewState","cubeMesh","cube","console","log","pointerMesh","rotation","O","anchor","dir1","Z","sphereMesh","plane","sphere","computeWireframeFromFlatTrianglesClosedMesh","compile","spiralMesh","spiral","X","computeNormalsFromFlatTriangles","cylinderMesh","Y","XY","PI","platformMesh","trackLine","ARRAY_BUFFER","Float32Array","jointColors","colors","zAssemblies","spindles","zAssemblyJoinPoints","platformJoinPoints","joints","platform","translate","scale","undefined","rotateZ","flatMap","i","j","rotateY","transformPoint","fixJoints","rotateX","p1","p2","p3","platCenter","c1","r1","c2","r2","c3","r3","eX","to","unit","eY","rejectedFrom1","sys","forSys","d","length","dot","x","y","pSys","trilaterate","a","b","rotateAB","shader","clearColor","cullFace","BACK","cam2","matrixMode","PROJECTION","loadIdentity","perspective","width","height","lookAt","MODELVIEW","pointSize","enable","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","pressedKeys","contentEditable","focus","onkeydown","e","key","onkeypress","onkeyup","lastPos","rot","renderNode","pushMatrix","multMatrix","drawGimbal","uniforms","lightPos","toLength","draw","popMatrix","keyDir","plusKey","minusKey","onmousemove2","pagePos","pageX","pageY","delta","buttons","onmousemove","transformVector","keys","data","animate","abs","_diff","targetPos","polar","speed","w","s","q","likeO","lookDirZ","plus","cross","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","rotate","drawBuffers","ts_Vertex","LINE_STRIP","quickhull","style","display","flexDirection","ref","flexGrow","tabIndex"],"sourceRoot":""}